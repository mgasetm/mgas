{
	"id": "f0db1d41b8b4ed1c487927177da0a580",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"MGAS/BEP20TokenImplementation.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\nimport \"MGAS/Context.sol\";\r\nimport \"MGAS/IBEP20.sol\";\r\nimport \"MGAS/ISwap.sol\";\r\nimport \"MGAS/Initializable.sol\";\r\nimport \"MGAS/SafeMath.sol\";\r\n\r\ncontract BEP20TokenImplementation is Context, IBEP20, ISwap, Initializable {\r\n    using SafeMath for uint256;\r\n\r\n    mapping (address => uint256) private _balances;\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n    uint256 private _totalSupply = 100000000000000000000000000;\r\n    string private _name = \"MGAS\";\r\n    string private _symbol = \"MGAS\";\r\n    uint8 private _decimals = 18;\r\n    uint256 public pricePerToken; \r\n\r\n    address private _owner = 0xCEd67D1115F1503e6dE2464C378f446b2bD8298C;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    bool private _mintable;\r\n\r\n    constructor()  {\r\n        _balances[msg.sender] = _totalSupply;\r\n        pricePerToken = 5;\r\n    }\r\n\r\n    function getETHValue(uint256 _tokenAmount) public view returns (uint256 ethValue) {\r\n        return _tokenAmount * pricePerToken;\r\n    }\r\n\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev sets initials supply and the owner\r\n     */\r\n    // function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable,\r\n    //  address owner) \r\n    // public initializer {\r\n    //     _owner = owner;\r\n    //     _name = name;\r\n    //     _symbol = symbol;\r\n    //     _decimals = decimals;\r\n    //     _mintable = mintable;\r\n    //     _mint(owner, amount);\r\n    // }\r\n\r\n    /**\r\n    * @dev Leaves the contract without owner. It will not be possible to call\r\n    * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n    *\r\n    * NOTE: Renouncing ownership will leave the contract without an owner,\r\n    * thereby removing any functionality that is only available to the owner.\r\n    */\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns if the token is mintable or not\r\n     */\r\n    function mintable() external view returns (bool) {\r\n        return _mintable;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external override view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() external override view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() external override view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n    * @dev Returns the token name.\r\n    */\r\n    function name() external override view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-totalSupply}.\r\n     */\r\n    function totalSupply() external override view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) external override view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `recipient` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) external override view returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-approve}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) external override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {BEP20};\r\n     *\r\n     * Requirements:\r\n     * - `sender` and `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for `sender`'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {BEP20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {BEP20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\r\n     * the total supply.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `msg.sender` must be the token owner\r\n     * - `_mintable` must be true\r\n     */\r\n    function mint(uint256 amount) public onlyOwner returns (bool) {\r\n        require(_mintable, \"this token is not mintable\");\r\n        _mint(_msgSender(), amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Creates `amount` tokens and assigns them to `recipient`, increasing\r\n     * the total supply.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `msg.sender` must be the token owner\r\n     * - `_mintable` must be true\r\n     */\r\n    function mintTo(uint256 amount, address recipient) override external onlyOwner returns (bool) {\r\n        require(_mintable, \"this token is not mintable\");\r\n        _mint(recipient, amount);\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n    * @dev Burn `amount` tokens and decreasing the total supply.\r\n    */\r\n    function burn(uint256 amount) override external returns (bool) {\r\n        _burn(_msgSender(), amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n     *\r\n     * This is internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` cannot be the zero address.\r\n     * - `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(address sender, address recipient, uint256 amount) internal {\r\n        require(sender != address(0), \"BEP20: transfer from the zero address\");\r\n        require(recipient != address(0), \"BEP20: transfer to the zero address\");\r\n\r\n        _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal {\r\n        require(account != address(0), \"BEP20: mint to the zero address\");\r\n\r\n        _totalSupply = _totalSupply.add(amount);\r\n        _balances[account] = _balances[account].add(amount);\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal {\r\n        require(account != address(0), \"BEP20: burn from the zero address\");\r\n\r\n        _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\r\n        _totalSupply = _totalSupply.sub(amount);\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\r\n     *\r\n     * This is internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(address owner, address spender, uint256 amount) internal {\r\n        require(owner != address(0), \"BEP20: approve from the zero address\");\r\n        require(spender != address(0), \"BEP20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\r\n     * from the caller's allowance.\r\n     *\r\n     * See {_burn} and {_approve}.\r\n     */\r\n    function _burnFrom(address account, uint256 amount) internal {\r\n        _burn(account, amount);\r\n        _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\r\n    }\r\n}"
			},
			"MGAS/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n"
			},
			"MGAS/Initializable.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\n/**\r\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\r\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\r\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\r\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\r\n * \r\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\r\n * possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.\r\n * \r\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\r\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\r\n */\r\nabstract contract Initializable {\r\n\r\n    /**\r\n     * @dev Indicates that the contract has been initialized.\r\n     */\r\n    bool private _initialized;\r\n\r\n    /**\r\n     * @dev Indicates that the contract is in the process of being initialized.\r\n     */\r\n    bool private _initializing;\r\n\r\n    /**\r\n     * @dev Modifier to protect an initializer function from being invoked twice.\r\n     */\r\n    modifier initializer() {\r\n        require(_initializing || _isConstructor() || !_initialized, \"Initializable: contract is already initialized\");\r\n\r\n        bool isTopLevelCall = !_initializing;\r\n        if (isTopLevelCall) {\r\n            _initializing = true;\r\n            _initialized = true;\r\n        }\r\n\r\n        _;\r\n\r\n        if (isTopLevelCall) {\r\n            _initializing = false;\r\n        }\r\n    }\r\n\r\n    /// @dev Returns true if and only if the function is running in the constructor\r\n    function _isConstructor() private view returns (bool) {\r\n        // extcodesize checks the size of the code stored in an address, and\r\n        // address returns the current address. Since the code is still not\r\n        // deployed when running a constructor, any checks on its code size will\r\n        // yield zero, making it an effective way to detect if a contract is\r\n        // under construction or not.\r\n        address self = address(this);\r\n        uint256 cs;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { cs := extcodesize(self) }\r\n        return cs == 0;\r\n    }\r\n}\r\n"
			},
			"MGAS/ISwap.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\n\r\ninterface ISwap {\r\n    /**\r\n     * @dev Creates `amount` tokens and assigns them to `recipient`, increasing\r\n     * the total supply.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `msg.sender` must be the token owner\r\n     * - `_mintable` must be true\r\n     */\r\n    function mintTo(uint256 amount, address recipient) external returns (bool);\r\n\r\n    /**\r\n    * @dev Burn `amount` tokens and decreasing the total supply.\r\n    */\r\n    function burn(uint256 amount) external returns (bool);\r\n}"
			},
			"MGAS/IBEP20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\n\r\ninterface IBEP20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n    * @dev Returns the token name.\r\n    */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n"
			},
			"MGAS/Context.sol": {
				"content": "\r\n// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"MGAS/BEP20TokenImplementation.sol": {
				"BEP20TokenImplementation": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenAmount",
									"type": "uint256"
								}
							],
							"name": "getETHValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "ethValue",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "mintTo",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintable",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pricePerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burn `amount` tokens and decreasing the total supply."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner - `_mintable` must be true"
							},
							"mintTo(uint256,address)": {
								"details": "Creates `amount` tokens and assigns them to `recipient`, increasing the total supply. Requirements - `msg.sender` must be the token owner - `_mintable` must be true"
							},
							"mintable()": {
								"details": "Returns if the token is mintable or not"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MGAS/BEP20TokenImplementation.sol\":216:11419  contract BEP20TokenImplementation is Context, IBEP20, ISwap, Initializable {... */\n  mstore(0x40, 0x80)\n    /* \"MGAS/BEP20TokenImplementation.sol\":493:520  100000000000000000000000000 */\n  0x52b7d2dcc80cd2e4000000\n    /* \"MGAS/BEP20TokenImplementation.sol\":462:520  uint256 private _totalSupply = 100000000000000000000000000 */\n  0x03\n  sstore\n    /* \"MGAS/BEP20TokenImplementation.sol\":527:556  string private _name = \"MGAS\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4d47415300000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x04\n  swap1\n  dup2\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"MGAS/BEP20TokenImplementation.sol\":563:594  string private _symbol = \"MGAS\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4d47415300000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x05\n  swap1\n  dup2\n  tag_3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_3:\n  pop\n    /* \"MGAS/BEP20TokenImplementation.sol\":627:629  18 */\n  0x12\n    /* \"MGAS/BEP20TokenImplementation.sol\":601:629  uint8 private _decimals = 18 */\n  0x06\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"MGAS/BEP20TokenImplementation.sol\":699:741  0xCEd67D1115F1503e6dE2464C378f446b2bD8298C */\n  0xced67d1115f1503e6de2464c378f446b2bd8298c\n    /* \"MGAS/BEP20TokenImplementation.sol\":674:741  address private _owner = 0xCEd67D1115F1503e6dE2464C378f446b2bD8298C */\n  0x08\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"MGAS/BEP20TokenImplementation.sol\":871:969  constructor()  {... */\n  callvalue\n  dup1\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  pop\n    /* \"MGAS/BEP20TokenImplementation.sol\":921:933  _totalSupply */\n  sload(0x03)\n    /* \"MGAS/BEP20TokenImplementation.sol\":897:906  _balances */\n  0x01\n    /* \"MGAS/BEP20TokenImplementation.sol\":897:918  _balances[msg.sender] */\n  0x00\n    /* \"MGAS/BEP20TokenImplementation.sol\":907:917  msg.sender */\n  caller\n    /* \"MGAS/BEP20TokenImplementation.sol\":897:918  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"MGAS/BEP20TokenImplementation.sol\":897:933  _balances[msg.sender] = _totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"MGAS/BEP20TokenImplementation.sol\":960:961  5 */\n  0x05\n    /* \"MGAS/BEP20TokenImplementation.sol\":944:957  pricePerToken */\n  0x07\n    /* \"MGAS/BEP20TokenImplementation.sol\":944:961  pricePerToken = 5 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"MGAS/BEP20TokenImplementation.sol\":216:11419  contract BEP20TokenImplementation is Context, IBEP20, ISwap, Initializable {... */\n  jump(tag_7)\n    /* \"#utility.yul\":7:106   */\ntag_8:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_9:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_10:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_11:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_33:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_35\n  tag_10\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":714:798   */\ntag_34:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_12:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_13:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_14:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_15:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_40\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_14\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1429:1468   */\n  tag_41\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_14\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_16:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_17:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_18:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_45\n    /* \"#utility.yul\":1818:1852   */\n  tag_46\n    /* \"#utility.yul\":1827:1851   */\n  tag_47\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_16\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1818:1852   */\n  tag_17\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1800:1853   */\n  tag_16\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_19:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_20:\n    /* \"#utility.yul\":2056:2095   */\n  tag_50\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_18\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":2117:2208   */\n  tag_51\n    /* \"#utility.yul\":2166:2207   */\n  tag_52\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_19\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_15\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_21:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_22:\n    /* \"#utility.yul\":2377:2409   */\n  tag_55\n  tag_21\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2418:2483   */\n  tag_56\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_20\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_23:\n    /* \"#utility.yul\":2555:2675   */\ntag_58:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_61\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_22\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_58)\ntag_60:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_24:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_64\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_12\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2906:2935   */\n  tag_65\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_13\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_66:\n    /* \"#utility.yul\":3133:3213   */\n  tag_67\n    /* \"#utility.yul\":3189:3211   */\n  tag_68\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_13\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_23\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_63:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_25:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_26:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_71\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_25\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_27:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_73\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_26\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_2:\n    /* \"#utility.yul\":3950:3987   */\n  tag_75\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_8\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_77\n  tag_9\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":4038:4094   */\ntag_76:\n    /* \"#utility.yul\":4118:4156   */\n  tag_78\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_11\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":4203:4270   */\n  tag_79\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_24\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_81\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_82:\n    /* \"#utility.yul\":5144:5211   */\n  tag_83\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_27\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_80)\n    /* \"#utility.yul\":4365:4983   */\ntag_81:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_84\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_12\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_85:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_85)\ntag_87:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_89\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_26\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_88:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_80:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"MGAS/BEP20TokenImplementation.sol\":216:11419  contract BEP20TokenImplementation is Context, IBEP20, ISwap, Initializable {... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MGAS/BEP20TokenImplementation.sol\":216:11419  contract BEP20TokenImplementation is Context, IBEP20, ISwap, Initializable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7b1b1de6\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb723b34e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd5bda32d\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x7b1b1de6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x39509351\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4bf365df\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"MGAS/BEP20TokenImplementation.sol\":3347:3441  function name() external override view returns (string memory) {... */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/BEP20TokenImplementation.sol\":4524:4687  function approve(address spender, uint256 amount) external override returns (bool) {... */\n    tag_4:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/BEP20TokenImplementation.sol\":3505:3607  function totalSupply() external override view returns (uint256) {... */\n    tag_5:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/BEP20TokenImplementation.sol\":5158:5473  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n    tag_6:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/BEP20TokenImplementation.sol\":3029:3123  function decimals() external override view returns (uint8) {... */\n    tag_7:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/BEP20TokenImplementation.sol\":5881:6091  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_8:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/BEP20TokenImplementation.sol\":7859:7990  function burn(uint256 amount) override external returns (bool) {... */\n    tag_9:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/BEP20TokenImplementation.sol\":2717:2801  function mintable() external view returns (bool) {... */\n    tag_10:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/BEP20TokenImplementation.sol\":3669:3790  function balanceOf(address account) external override view returns (uint256) {... */\n    tag_11:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/BEP20TokenImplementation.sol\":2107:2247  function renounceOwnership() public onlyOwner {... */\n    tag_12:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      stop\n        /* \"MGAS/BEP20TokenImplementation.sol\":636:664  uint256 public pricePerToken */\n    tag_13:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/BEP20TokenImplementation.sol\":2869:2962  function getOwner() external override view returns (address) {... */\n    tag_14:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/BEP20TokenImplementation.sol\":3188:3286  function symbol() external override view returns (string memory) {... */\n    tag_15:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/BEP20TokenImplementation.sol\":7107:7296  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_16:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/BEP20TokenImplementation.sol\":6593:6854  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_17:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/BEP20TokenImplementation.sol\":4002:4171  function transfer(address recipient, uint256 amount) external override returns (bool) {... */\n    tag_18:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/BEP20TokenImplementation.sol\":7548:7766  function mintTo(uint256 amount, address recipient) override external onlyOwner returns (bool) {... */\n    tag_19:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      tag_93\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/BEP20TokenImplementation.sol\":977:1113  function getETHValue(uint256 _tokenAmount) public view returns (uint256 ethValue) {... */\n    tag_20:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/BEP20TokenImplementation.sol\":4233:4378  function allowance(address owner, address spender) external override view returns (uint256) {... */\n    tag_21:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/BEP20TokenImplementation.sol\":2402:2638  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_22:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      stop\n        /* \"MGAS/BEP20TokenImplementation.sol\":3347:3441  function name() external override view returns (string memory) {... */\n    tag_27:\n        /* \"MGAS/BEP20TokenImplementation.sol\":3395:3408  string memory */\n      0x60\n        /* \"MGAS/BEP20TokenImplementation.sol\":3428:3433  _name */\n      0x04\n        /* \"MGAS/BEP20TokenImplementation.sol\":3421:3433  return _name */\n      dup1\n      sload\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_110\n      swap1\n      tag_109\n      jump\t// in\n    tag_110:\n      dup1\n      iszero\n      tag_111\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_112\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_111)\n    tag_112:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_113:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_113\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"MGAS/BEP20TokenImplementation.sol\":3347:3441  function name() external override view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"MGAS/BEP20TokenImplementation.sol\":4524:4687  function approve(address spender, uint256 amount) external override returns (bool) {... */\n    tag_33:\n        /* \"MGAS/BEP20TokenImplementation.sol\":4601:4605  bool */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":4618:4657  _approve(_msgSender(), spender, amount) */\n      tag_115\n        /* \"MGAS/BEP20TokenImplementation.sol\":4627:4639  _msgSender() */\n      tag_116\n        /* \"MGAS/BEP20TokenImplementation.sol\":4627:4637  _msgSender */\n      tag_117\n        /* \"MGAS/BEP20TokenImplementation.sol\":4627:4639  _msgSender() */\n      jump\t// in\n    tag_116:\n        /* \"MGAS/BEP20TokenImplementation.sol\":4641:4648  spender */\n      dup5\n        /* \"MGAS/BEP20TokenImplementation.sol\":4650:4656  amount */\n      dup5\n        /* \"MGAS/BEP20TokenImplementation.sol\":4618:4626  _approve */\n      tag_118\n        /* \"MGAS/BEP20TokenImplementation.sol\":4618:4657  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_115:\n        /* \"MGAS/BEP20TokenImplementation.sol\":4675:4679  true */\n      0x01\n        /* \"MGAS/BEP20TokenImplementation.sol\":4668:4679  return true */\n      swap1\n      pop\n        /* \"MGAS/BEP20TokenImplementation.sol\":4524:4687  function approve(address spender, uint256 amount) external override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MGAS/BEP20TokenImplementation.sol\":3505:3607  function totalSupply() external override view returns (uint256) {... */\n    tag_37:\n        /* \"MGAS/BEP20TokenImplementation.sol\":3560:3567  uint256 */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":3587:3599  _totalSupply */\n      sload(0x03)\n        /* \"MGAS/BEP20TokenImplementation.sol\":3580:3599  return _totalSupply */\n      swap1\n      pop\n        /* \"MGAS/BEP20TokenImplementation.sol\":3505:3607  function totalSupply() external override view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"MGAS/BEP20TokenImplementation.sol\":5158:5473  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n    tag_43:\n        /* \"MGAS/BEP20TokenImplementation.sol\":5258:5262  bool */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":5275:5311  _transfer(sender, recipient, amount) */\n      tag_121\n        /* \"MGAS/BEP20TokenImplementation.sol\":5285:5291  sender */\n      dup5\n        /* \"MGAS/BEP20TokenImplementation.sol\":5293:5302  recipient */\n      dup5\n        /* \"MGAS/BEP20TokenImplementation.sol\":5304:5310  amount */\n      dup5\n        /* \"MGAS/BEP20TokenImplementation.sol\":5275:5284  _transfer */\n      tag_122\n        /* \"MGAS/BEP20TokenImplementation.sol\":5275:5311  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_121:\n        /* \"MGAS/BEP20TokenImplementation.sol\":5322:5443  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      tag_123\n        /* \"MGAS/BEP20TokenImplementation.sol\":5331:5337  sender */\n      dup5\n        /* \"MGAS/BEP20TokenImplementation.sol\":5339:5351  _msgSender() */\n      tag_124\n        /* \"MGAS/BEP20TokenImplementation.sol\":5339:5349  _msgSender */\n      tag_117\n        /* \"MGAS/BEP20TokenImplementation.sol\":5339:5351  _msgSender() */\n      jump\t// in\n    tag_124:\n        /* \"MGAS/BEP20TokenImplementation.sol\":5353:5442  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      tag_125\n        /* \"MGAS/BEP20TokenImplementation.sol\":5391:5397  amount */\n      dup6\n        /* \"MGAS/BEP20TokenImplementation.sol\":5353:5442  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n        /* \"MGAS/BEP20TokenImplementation.sol\":5353:5364  _allowances */\n      0x02\n        /* \"MGAS/BEP20TokenImplementation.sol\":5353:5372  _allowances[sender] */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":5365:5371  sender */\n      dup12\n        /* \"MGAS/BEP20TokenImplementation.sol\":5353:5372  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MGAS/BEP20TokenImplementation.sol\":5353:5386  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":5373:5385  _msgSender() */\n      tag_126\n        /* \"MGAS/BEP20TokenImplementation.sol\":5373:5383  _msgSender */\n      tag_117\n        /* \"MGAS/BEP20TokenImplementation.sol\":5373:5385  _msgSender() */\n      jump\t// in\n    tag_126:\n        /* \"MGAS/BEP20TokenImplementation.sol\":5353:5386  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"MGAS/BEP20TokenImplementation.sol\":5353:5390  _allowances[sender][_msgSender()].sub */\n      tag_127\n      swap1\n        /* \"MGAS/BEP20TokenImplementation.sol\":5353:5442  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_125:\n        /* \"MGAS/BEP20TokenImplementation.sol\":5322:5330  _approve */\n      tag_118\n        /* \"MGAS/BEP20TokenImplementation.sol\":5322:5443  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_123:\n        /* \"MGAS/BEP20TokenImplementation.sol\":5461:5465  true */\n      0x01\n        /* \"MGAS/BEP20TokenImplementation.sol\":5454:5465  return true */\n      swap1\n      pop\n        /* \"MGAS/BEP20TokenImplementation.sol\":5158:5473  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MGAS/BEP20TokenImplementation.sol\":3029:3123  function decimals() external override view returns (uint8) {... */\n    tag_46:\n        /* \"MGAS/BEP20TokenImplementation.sol\":3081:3086  uint8 */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":3106:3115  _decimals */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"MGAS/BEP20TokenImplementation.sol\":3099:3115  return _decimals */\n      swap1\n      pop\n        /* \"MGAS/BEP20TokenImplementation.sol\":3029:3123  function decimals() external override view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"MGAS/BEP20TokenImplementation.sol\":5881:6091  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_51:\n        /* \"MGAS/BEP20TokenImplementation.sol\":5961:5965  bool */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":5978:6061  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_130\n        /* \"MGAS/BEP20TokenImplementation.sol\":5987:5999  _msgSender() */\n      tag_131\n        /* \"MGAS/BEP20TokenImplementation.sol\":5987:5997  _msgSender */\n      tag_117\n        /* \"MGAS/BEP20TokenImplementation.sol\":5987:5999  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"MGAS/BEP20TokenImplementation.sol\":6001:6008  spender */\n      dup5\n        /* \"MGAS/BEP20TokenImplementation.sol\":6010:6060  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_132\n        /* \"MGAS/BEP20TokenImplementation.sol\":6049:6059  addedValue */\n      dup6\n        /* \"MGAS/BEP20TokenImplementation.sol\":6010:6021  _allowances */\n      0x02\n        /* \"MGAS/BEP20TokenImplementation.sol\":6010:6035  _allowances[_msgSender()] */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":6022:6034  _msgSender() */\n      tag_133\n        /* \"MGAS/BEP20TokenImplementation.sol\":6022:6032  _msgSender */\n      tag_117\n        /* \"MGAS/BEP20TokenImplementation.sol\":6022:6034  _msgSender() */\n      jump\t// in\n    tag_133:\n        /* \"MGAS/BEP20TokenImplementation.sol\":6010:6035  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MGAS/BEP20TokenImplementation.sol\":6010:6044  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":6036:6043  spender */\n      dup10\n        /* \"MGAS/BEP20TokenImplementation.sol\":6010:6044  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"MGAS/BEP20TokenImplementation.sol\":6010:6048  _allowances[_msgSender()][spender].add */\n      tag_134\n      swap1\n        /* \"MGAS/BEP20TokenImplementation.sol\":6010:6060  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_132:\n        /* \"MGAS/BEP20TokenImplementation.sol\":5978:5986  _approve */\n      tag_118\n        /* \"MGAS/BEP20TokenImplementation.sol\":5978:6061  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_130:\n        /* \"MGAS/BEP20TokenImplementation.sol\":6079:6083  true */\n      0x01\n        /* \"MGAS/BEP20TokenImplementation.sol\":6072:6083  return true */\n      swap1\n      pop\n        /* \"MGAS/BEP20TokenImplementation.sol\":5881:6091  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MGAS/BEP20TokenImplementation.sol\":7859:7990  function burn(uint256 amount) override external returns (bool) {... */\n    tag_56:\n        /* \"MGAS/BEP20TokenImplementation.sol\":7916:7920  bool */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":7933:7960  _burn(_msgSender(), amount) */\n      tag_136\n        /* \"MGAS/BEP20TokenImplementation.sol\":7939:7951  _msgSender() */\n      tag_137\n        /* \"MGAS/BEP20TokenImplementation.sol\":7939:7949  _msgSender */\n      tag_117\n        /* \"MGAS/BEP20TokenImplementation.sol\":7939:7951  _msgSender() */\n      jump\t// in\n    tag_137:\n        /* \"MGAS/BEP20TokenImplementation.sol\":7953:7959  amount */\n      dup4\n        /* \"MGAS/BEP20TokenImplementation.sol\":7933:7938  _burn */\n      tag_138\n        /* \"MGAS/BEP20TokenImplementation.sol\":7933:7960  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_136:\n        /* \"MGAS/BEP20TokenImplementation.sol\":7978:7982  true */\n      0x01\n        /* \"MGAS/BEP20TokenImplementation.sol\":7971:7982  return true */\n      swap1\n      pop\n        /* \"MGAS/BEP20TokenImplementation.sol\":7859:7990  function burn(uint256 amount) override external returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"MGAS/BEP20TokenImplementation.sol\":2717:2801  function mintable() external view returns (bool) {... */\n    tag_59:\n        /* \"MGAS/BEP20TokenImplementation.sol\":2760:2764  bool */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":2784:2793  _mintable */\n      0x08\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"MGAS/BEP20TokenImplementation.sol\":2777:2793  return _mintable */\n      swap1\n      pop\n        /* \"MGAS/BEP20TokenImplementation.sol\":2717:2801  function mintable() external view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"MGAS/BEP20TokenImplementation.sol\":3669:3790  function balanceOf(address account) external override view returns (uint256) {... */\n    tag_64:\n        /* \"MGAS/BEP20TokenImplementation.sol\":3737:3744  uint256 */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":3764:3773  _balances */\n      0x01\n        /* \"MGAS/BEP20TokenImplementation.sol\":3764:3782  _balances[account] */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":3774:3781  account */\n      dup4\n        /* \"MGAS/BEP20TokenImplementation.sol\":3764:3782  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"MGAS/BEP20TokenImplementation.sol\":3757:3782  return _balances[account] */\n      swap1\n      pop\n        /* \"MGAS/BEP20TokenImplementation.sol\":3669:3790  function balanceOf(address account) external override view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"MGAS/BEP20TokenImplementation.sol\":2107:2247  function renounceOwnership() public onlyOwner {... */\n    tag_67:\n        /* \"MGAS/BEP20TokenImplementation.sol\":1258:1270  _msgSender() */\n      tag_142\n        /* \"MGAS/BEP20TokenImplementation.sol\":1258:1268  _msgSender */\n      tag_117\n        /* \"MGAS/BEP20TokenImplementation.sol\":1258:1270  _msgSender() */\n      jump\t// in\n    tag_142:\n        /* \"MGAS/BEP20TokenImplementation.sol\":1248:1270  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/BEP20TokenImplementation.sol\":1248:1254  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/BEP20TokenImplementation.sol\":1248:1270  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"MGAS/BEP20TokenImplementation.sol\":1240:1307  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"MGAS/BEP20TokenImplementation.sol\":2206:2207  0 */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":2169:2209  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/BEP20TokenImplementation.sol\":2190:2196  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/BEP20TokenImplementation.sol\":2169:2209  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"MGAS/BEP20TokenImplementation.sol\":2237:2238  0 */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":2220:2226  _owner */\n      0x08\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":2220:2239  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"MGAS/BEP20TokenImplementation.sol\":2107:2247  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"MGAS/BEP20TokenImplementation.sol\":636:664  uint256 public pricePerToken */\n    tag_69:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"MGAS/BEP20TokenImplementation.sol\":2869:2962  function getOwner() external override view returns (address) {... */\n    tag_72:\n        /* \"MGAS/BEP20TokenImplementation.sol\":2921:2928  address */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":2948:2954  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/BEP20TokenImplementation.sol\":2941:2954  return _owner */\n      swap1\n      pop\n        /* \"MGAS/BEP20TokenImplementation.sol\":2869:2962  function getOwner() external override view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"MGAS/BEP20TokenImplementation.sol\":3188:3286  function symbol() external override view returns (string memory) {... */\n    tag_76:\n        /* \"MGAS/BEP20TokenImplementation.sol\":3238:3251  string memory */\n      0x60\n        /* \"MGAS/BEP20TokenImplementation.sol\":3271:3278  _symbol */\n      0x05\n        /* \"MGAS/BEP20TokenImplementation.sol\":3264:3278  return _symbol */\n      dup1\n      sload\n      tag_149\n      swap1\n      tag_109\n      jump\t// in\n    tag_149:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_150\n      swap1\n      tag_109\n      jump\t// in\n    tag_150:\n      dup1\n      iszero\n      tag_151\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_152\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_151)\n    tag_152:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_153:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_153\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_151:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"MGAS/BEP20TokenImplementation.sol\":3188:3286  function symbol() external override view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"MGAS/BEP20TokenImplementation.sol\":7107:7296  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_80:\n        /* \"MGAS/BEP20TokenImplementation.sol\":7163:7167  bool */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":1258:1270  _msgSender() */\n      tag_155\n        /* \"MGAS/BEP20TokenImplementation.sol\":1258:1268  _msgSender */\n      tag_117\n        /* \"MGAS/BEP20TokenImplementation.sol\":1258:1270  _msgSender() */\n      jump\t// in\n    tag_155:\n        /* \"MGAS/BEP20TokenImplementation.sol\":1248:1270  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/BEP20TokenImplementation.sol\":1248:1254  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/BEP20TokenImplementation.sol\":1248:1270  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"MGAS/BEP20TokenImplementation.sol\":1240:1307  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap1\n      tag_145\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"MGAS/BEP20TokenImplementation.sol\":7188:7197  _mintable */\n      0x08\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"MGAS/BEP20TokenImplementation.sol\":7180:7228  require(_mintable, \"this token is not mintable\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"MGAS/BEP20TokenImplementation.sol\":7239:7266  _mint(_msgSender(), amount) */\n      tag_162\n        /* \"MGAS/BEP20TokenImplementation.sol\":7245:7257  _msgSender() */\n      tag_163\n        /* \"MGAS/BEP20TokenImplementation.sol\":7245:7255  _msgSender */\n      tag_117\n        /* \"MGAS/BEP20TokenImplementation.sol\":7245:7257  _msgSender() */\n      jump\t// in\n    tag_163:\n        /* \"MGAS/BEP20TokenImplementation.sol\":7259:7265  amount */\n      dup4\n        /* \"MGAS/BEP20TokenImplementation.sol\":7239:7244  _mint */\n      tag_164\n        /* \"MGAS/BEP20TokenImplementation.sol\":7239:7266  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_162:\n        /* \"MGAS/BEP20TokenImplementation.sol\":7284:7288  true */\n      0x01\n        /* \"MGAS/BEP20TokenImplementation.sol\":7277:7288  return true */\n      swap1\n      pop\n        /* \"MGAS/BEP20TokenImplementation.sol\":7107:7296  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"MGAS/BEP20TokenImplementation.sol\":6593:6854  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_84:\n        /* \"MGAS/BEP20TokenImplementation.sol\":6678:6682  bool */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":6695:6824  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      tag_166\n        /* \"MGAS/BEP20TokenImplementation.sol\":6704:6716  _msgSender() */\n      tag_167\n        /* \"MGAS/BEP20TokenImplementation.sol\":6704:6714  _msgSender */\n      tag_117\n        /* \"MGAS/BEP20TokenImplementation.sol\":6704:6716  _msgSender() */\n      jump\t// in\n    tag_167:\n        /* \"MGAS/BEP20TokenImplementation.sol\":6718:6725  spender */\n      dup5\n        /* \"MGAS/BEP20TokenImplementation.sol\":6727:6823  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      tag_168\n        /* \"MGAS/BEP20TokenImplementation.sol\":6766:6781  subtractedValue */\n      dup6\n        /* \"MGAS/BEP20TokenImplementation.sol\":6727:6823  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"MGAS/BEP20TokenImplementation.sol\":6727:6738  _allowances */\n      0x02\n        /* \"MGAS/BEP20TokenImplementation.sol\":6727:6752  _allowances[_msgSender()] */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":6739:6751  _msgSender() */\n      tag_169\n        /* \"MGAS/BEP20TokenImplementation.sol\":6739:6749  _msgSender */\n      tag_117\n        /* \"MGAS/BEP20TokenImplementation.sol\":6739:6751  _msgSender() */\n      jump\t// in\n    tag_169:\n        /* \"MGAS/BEP20TokenImplementation.sol\":6727:6752  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MGAS/BEP20TokenImplementation.sol\":6727:6761  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":6753:6760  spender */\n      dup11\n        /* \"MGAS/BEP20TokenImplementation.sol\":6727:6761  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"MGAS/BEP20TokenImplementation.sol\":6727:6765  _allowances[_msgSender()][spender].sub */\n      tag_127\n      swap1\n        /* \"MGAS/BEP20TokenImplementation.sol\":6727:6823  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_168:\n        /* \"MGAS/BEP20TokenImplementation.sol\":6695:6703  _approve */\n      tag_118\n        /* \"MGAS/BEP20TokenImplementation.sol\":6695:6824  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_166:\n        /* \"MGAS/BEP20TokenImplementation.sol\":6842:6846  true */\n      0x01\n        /* \"MGAS/BEP20TokenImplementation.sol\":6835:6846  return true */\n      swap1\n      pop\n        /* \"MGAS/BEP20TokenImplementation.sol\":6593:6854  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MGAS/BEP20TokenImplementation.sol\":4002:4171  function transfer(address recipient, uint256 amount) external override returns (bool) {... */\n    tag_88:\n        /* \"MGAS/BEP20TokenImplementation.sol\":4082:4086  bool */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":4099:4141  _transfer(_msgSender(), recipient, amount) */\n      tag_171\n        /* \"MGAS/BEP20TokenImplementation.sol\":4109:4121  _msgSender() */\n      tag_172\n        /* \"MGAS/BEP20TokenImplementation.sol\":4109:4119  _msgSender */\n      tag_117\n        /* \"MGAS/BEP20TokenImplementation.sol\":4109:4121  _msgSender() */\n      jump\t// in\n    tag_172:\n        /* \"MGAS/BEP20TokenImplementation.sol\":4123:4132  recipient */\n      dup5\n        /* \"MGAS/BEP20TokenImplementation.sol\":4134:4140  amount */\n      dup5\n        /* \"MGAS/BEP20TokenImplementation.sol\":4099:4108  _transfer */\n      tag_122\n        /* \"MGAS/BEP20TokenImplementation.sol\":4099:4141  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_171:\n        /* \"MGAS/BEP20TokenImplementation.sol\":4159:4163  true */\n      0x01\n        /* \"MGAS/BEP20TokenImplementation.sol\":4152:4163  return true */\n      swap1\n      pop\n        /* \"MGAS/BEP20TokenImplementation.sol\":4002:4171  function transfer(address recipient, uint256 amount) external override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MGAS/BEP20TokenImplementation.sol\":7548:7766  function mintTo(uint256 amount, address recipient) override external onlyOwner returns (bool) {... */\n    tag_93:\n        /* \"MGAS/BEP20TokenImplementation.sol\":7636:7640  bool */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":1258:1270  _msgSender() */\n      tag_174\n        /* \"MGAS/BEP20TokenImplementation.sol\":1258:1268  _msgSender */\n      tag_117\n        /* \"MGAS/BEP20TokenImplementation.sol\":1258:1270  _msgSender() */\n      jump\t// in\n    tag_174:\n        /* \"MGAS/BEP20TokenImplementation.sol\":1248:1270  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/BEP20TokenImplementation.sol\":1248:1254  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/BEP20TokenImplementation.sol\":1248:1270  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"MGAS/BEP20TokenImplementation.sol\":1240:1307  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_145\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"MGAS/BEP20TokenImplementation.sol\":7661:7670  _mintable */\n      0x08\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"MGAS/BEP20TokenImplementation.sol\":7653:7701  require(_mintable, \"this token is not mintable\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_161\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"MGAS/BEP20TokenImplementation.sol\":7712:7736  _mint(recipient, amount) */\n      tag_180\n        /* \"MGAS/BEP20TokenImplementation.sol\":7718:7727  recipient */\n      dup3\n        /* \"MGAS/BEP20TokenImplementation.sol\":7729:7735  amount */\n      dup5\n        /* \"MGAS/BEP20TokenImplementation.sol\":7712:7717  _mint */\n      tag_164\n        /* \"MGAS/BEP20TokenImplementation.sol\":7712:7736  _mint(recipient, amount) */\n      jump\t// in\n    tag_180:\n        /* \"MGAS/BEP20TokenImplementation.sol\":7754:7758  true */\n      0x01\n        /* \"MGAS/BEP20TokenImplementation.sol\":7747:7758  return true */\n      swap1\n      pop\n        /* \"MGAS/BEP20TokenImplementation.sol\":7548:7766  function mintTo(uint256 amount, address recipient) override external onlyOwner returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MGAS/BEP20TokenImplementation.sol\":977:1113  function getETHValue(uint256 _tokenAmount) public view returns (uint256 ethValue) {... */\n    tag_97:\n        /* \"MGAS/BEP20TokenImplementation.sol\":1041:1057  uint256 ethValue */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":1092:1105  pricePerToken */\n      sload(0x07)\n        /* \"MGAS/BEP20TokenImplementation.sol\":1077:1089  _tokenAmount */\n      dup3\n        /* \"MGAS/BEP20TokenImplementation.sol\":1077:1105  _tokenAmount * pricePerToken */\n      tag_182\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"MGAS/BEP20TokenImplementation.sol\":1070:1105  return _tokenAmount * pricePerToken */\n      swap1\n      pop\n        /* \"MGAS/BEP20TokenImplementation.sol\":977:1113  function getETHValue(uint256 _tokenAmount) public view returns (uint256 ethValue) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"MGAS/BEP20TokenImplementation.sol\":4233:4378  function allowance(address owner, address spender) external override view returns (uint256) {... */\n    tag_102:\n        /* \"MGAS/BEP20TokenImplementation.sol\":4316:4323  uint256 */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":4343:4354  _allowances */\n      0x02\n        /* \"MGAS/BEP20TokenImplementation.sol\":4343:4361  _allowances[owner] */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":4355:4360  owner */\n      dup5\n        /* \"MGAS/BEP20TokenImplementation.sol\":4343:4361  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MGAS/BEP20TokenImplementation.sol\":4343:4370  _allowances[owner][spender] */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":4362:4369  spender */\n      dup4\n        /* \"MGAS/BEP20TokenImplementation.sol\":4343:4370  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"MGAS/BEP20TokenImplementation.sol\":4336:4370  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"MGAS/BEP20TokenImplementation.sol\":4233:4378  function allowance(address owner, address spender) external override view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MGAS/BEP20TokenImplementation.sol\":2402:2638  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_106:\n        /* \"MGAS/BEP20TokenImplementation.sol\":1258:1270  _msgSender() */\n      tag_186\n        /* \"MGAS/BEP20TokenImplementation.sol\":1258:1268  _msgSender */\n      tag_117\n        /* \"MGAS/BEP20TokenImplementation.sol\":1258:1270  _msgSender() */\n      jump\t// in\n    tag_186:\n        /* \"MGAS/BEP20TokenImplementation.sol\":1248:1270  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/BEP20TokenImplementation.sol\":1248:1254  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/BEP20TokenImplementation.sol\":1248:1270  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"MGAS/BEP20TokenImplementation.sol\":1240:1307  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap1\n      tag_145\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"MGAS/BEP20TokenImplementation.sol\":2503:2504  0 */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":2483:2505  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/BEP20TokenImplementation.sol\":2483:2491  newOwner */\n      dup2\n        /* \"MGAS/BEP20TokenImplementation.sol\":2483:2505  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"MGAS/BEP20TokenImplementation.sol\":2475:2548  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n        /* \"MGAS/BEP20TokenImplementation.sol\":2593:2601  newOwner */\n      dup1\n        /* \"MGAS/BEP20TokenImplementation.sol\":2564:2602  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/BEP20TokenImplementation.sol\":2585:2591  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/BEP20TokenImplementation.sol\":2564:2602  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"MGAS/BEP20TokenImplementation.sol\":2622:2630  newOwner */\n      dup1\n        /* \"MGAS/BEP20TokenImplementation.sol\":2613:2619  _owner */\n      0x08\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":2613:2630  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"MGAS/BEP20TokenImplementation.sol\":2402:2638  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"MGAS/Context.sol\":619:717  function _msgSender() internal view virtual returns (address) {... */\n    tag_117:\n        /* \"MGAS/Context.sol\":672:679  address */\n      0x00\n        /* \"MGAS/Context.sol\":699:709  msg.sender */\n      caller\n        /* \"MGAS/Context.sol\":692:709  return msg.sender */\n      swap1\n      pop\n        /* \"MGAS/Context.sol\":619:717  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"MGAS/BEP20TokenImplementation.sol\":10660:10998  function _approve(address owner, address spender, uint256 amount) internal {... */\n    tag_118:\n        /* \"MGAS/BEP20TokenImplementation.sol\":10771:10772  0 */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":10754:10773  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/BEP20TokenImplementation.sol\":10754:10759  owner */\n      dup4\n        /* \"MGAS/BEP20TokenImplementation.sol\":10754:10773  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"MGAS/BEP20TokenImplementation.sol\":10746:10814  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"MGAS/BEP20TokenImplementation.sol\":10852:10853  0 */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":10833:10854  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/BEP20TokenImplementation.sol\":10833:10840  spender */\n      dup3\n        /* \"MGAS/BEP20TokenImplementation.sol\":10833:10854  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"MGAS/BEP20TokenImplementation.sol\":10825:10893  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_198:\n        /* \"MGAS/BEP20TokenImplementation.sol\":10936:10942  amount */\n      dup1\n        /* \"MGAS/BEP20TokenImplementation.sol\":10906:10917  _allowances */\n      0x02\n        /* \"MGAS/BEP20TokenImplementation.sol\":10906:10924  _allowances[owner] */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":10918:10923  owner */\n      dup6\n        /* \"MGAS/BEP20TokenImplementation.sol\":10906:10924  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MGAS/BEP20TokenImplementation.sol\":10906:10933  _allowances[owner][spender] */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":10925:10932  spender */\n      dup5\n        /* \"MGAS/BEP20TokenImplementation.sol\":10906:10933  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MGAS/BEP20TokenImplementation.sol\":10906:10942  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MGAS/BEP20TokenImplementation.sol\":10974:10981  spender */\n      dup2\n        /* \"MGAS/BEP20TokenImplementation.sol\":10958:10990  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/BEP20TokenImplementation.sol\":10967:10972  owner */\n      dup4\n        /* \"MGAS/BEP20TokenImplementation.sol\":10958:10990  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"MGAS/BEP20TokenImplementation.sol\":10983:10989  amount */\n      dup4\n        /* \"MGAS/BEP20TokenImplementation.sol\":10958:10990  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_201\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"MGAS/BEP20TokenImplementation.sol\":10660:10998  function _approve(address owner, address spender, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MGAS/BEP20TokenImplementation.sol\":8480:8951  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_122:\n        /* \"MGAS/BEP20TokenImplementation.sol\":8596:8597  0 */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":8578:8598  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/BEP20TokenImplementation.sol\":8578:8584  sender */\n      dup4\n        /* \"MGAS/BEP20TokenImplementation.sol\":8578:8598  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"MGAS/BEP20TokenImplementation.sol\":8570:8640  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"MGAS/BEP20TokenImplementation.sol\":8680:8681  0 */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":8659:8682  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/BEP20TokenImplementation.sol\":8659:8668  recipient */\n      dup3\n        /* \"MGAS/BEP20TokenImplementation.sol\":8659:8682  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"MGAS/BEP20TokenImplementation.sol\":8651:8722  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_206:\n        /* \"MGAS/BEP20TokenImplementation.sol\":8755:8826  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_209\n        /* \"MGAS/BEP20TokenImplementation.sol\":8777:8783  amount */\n      dup2\n        /* \"MGAS/BEP20TokenImplementation.sol\":8755:8826  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n        /* \"MGAS/BEP20TokenImplementation.sol\":8755:8764  _balances */\n      0x01\n        /* \"MGAS/BEP20TokenImplementation.sol\":8755:8772  _balances[sender] */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":8765:8771  sender */\n      dup8\n        /* \"MGAS/BEP20TokenImplementation.sol\":8755:8772  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"MGAS/BEP20TokenImplementation.sol\":8755:8776  _balances[sender].sub */\n      tag_127\n      swap1\n        /* \"MGAS/BEP20TokenImplementation.sol\":8755:8826  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_209:\n        /* \"MGAS/BEP20TokenImplementation.sol\":8735:8744  _balances */\n      0x01\n        /* \"MGAS/BEP20TokenImplementation.sol\":8735:8752  _balances[sender] */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":8745:8751  sender */\n      dup6\n        /* \"MGAS/BEP20TokenImplementation.sol\":8735:8752  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MGAS/BEP20TokenImplementation.sol\":8735:8826  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MGAS/BEP20TokenImplementation.sol\":8860:8892  _balances[recipient].add(amount) */\n      tag_210\n        /* \"MGAS/BEP20TokenImplementation.sol\":8885:8891  amount */\n      dup2\n        /* \"MGAS/BEP20TokenImplementation.sol\":8860:8869  _balances */\n      0x01\n        /* \"MGAS/BEP20TokenImplementation.sol\":8860:8880  _balances[recipient] */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":8870:8879  recipient */\n      dup6\n        /* \"MGAS/BEP20TokenImplementation.sol\":8860:8880  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"MGAS/BEP20TokenImplementation.sol\":8860:8884  _balances[recipient].add */\n      tag_134\n      swap1\n        /* \"MGAS/BEP20TokenImplementation.sol\":8860:8892  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_210:\n        /* \"MGAS/BEP20TokenImplementation.sol\":8837:8846  _balances */\n      0x01\n        /* \"MGAS/BEP20TokenImplementation.sol\":8837:8857  _balances[recipient] */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":8847:8856  recipient */\n      dup5\n        /* \"MGAS/BEP20TokenImplementation.sol\":8837:8857  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MGAS/BEP20TokenImplementation.sol\":8837:8892  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MGAS/BEP20TokenImplementation.sol\":8925:8934  recipient */\n      dup2\n        /* \"MGAS/BEP20TokenImplementation.sol\":8908:8943  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/BEP20TokenImplementation.sol\":8917:8923  sender */\n      dup4\n        /* \"MGAS/BEP20TokenImplementation.sol\":8908:8943  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"MGAS/BEP20TokenImplementation.sol\":8936:8942  amount */\n      dup4\n        /* \"MGAS/BEP20TokenImplementation.sol\":8908:8943  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_211\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"MGAS/BEP20TokenImplementation.sol\":8480:8951  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MGAS/SafeMath.sol\":1817:2009  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_127:\n        /* \"MGAS/SafeMath.sol\":1903:1910  uint256 */\n      0x00\n        /* \"MGAS/SafeMath.sol\":1936:1937  a */\n      dup4\n        /* \"MGAS/SafeMath.sol\":1931:1932  b */\n      dup4\n        /* \"MGAS/SafeMath.sol\":1931:1937  b <= a */\n      gt\n      iszero\n        /* \"MGAS/SafeMath.sol\":1939:1951  errorMessage */\n      dup3\n        /* \"MGAS/SafeMath.sol\":1923:1952  require(b <= a, errorMessage) */\n      swap1\n      tag_213\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_213:\n      pop\n        /* \"MGAS/SafeMath.sol\":1963:1972  uint256 c */\n      0x00\n        /* \"MGAS/SafeMath.sol\":1979:1980  b */\n      dup4\n        /* \"MGAS/SafeMath.sol\":1975:1976  a */\n      dup6\n        /* \"MGAS/SafeMath.sol\":1975:1980  a - b */\n      tag_215\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n        /* \"MGAS/SafeMath.sol\":1963:1980  uint256 c = a - b */\n      swap1\n      pop\n        /* \"MGAS/SafeMath.sol\":2000:2001  c */\n      dup1\n        /* \"MGAS/SafeMath.sol\":1993:2001  return c */\n      swap2\n      pop\n      pop\n        /* \"MGAS/SafeMath.sol\":1817:2009  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MGAS/SafeMath.sol\":914:1095  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_134:\n        /* \"MGAS/SafeMath.sol\":972:979  uint256 */\n      0x00\n        /* \"MGAS/SafeMath.sol\":992:1001  uint256 c */\n      dup1\n        /* \"MGAS/SafeMath.sol\":1008:1009  b */\n      dup3\n        /* \"MGAS/SafeMath.sol\":1004:1005  a */\n      dup5\n        /* \"MGAS/SafeMath.sol\":1004:1009  a + b */\n      tag_218\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"MGAS/SafeMath.sol\":992:1009  uint256 c = a + b */\n      swap1\n      pop\n        /* \"MGAS/SafeMath.sol\":1033:1034  a */\n      dup4\n        /* \"MGAS/SafeMath.sol\":1028:1029  c */\n      dup2\n        /* \"MGAS/SafeMath.sol\":1028:1034  c >= a */\n      lt\n      iszero\n        /* \"MGAS/SafeMath.sol\":1020:1066  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_220:\n        /* \"MGAS/SafeMath.sol\":1086:1087  c */\n      dup1\n        /* \"MGAS/SafeMath.sol\":1079:1087  return c */\n      swap2\n      pop\n      pop\n        /* \"MGAS/SafeMath.sol\":914:1095  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MGAS/BEP20TokenImplementation.sol\":9872:10220  function _burn(address account, uint256 amount) internal {... */\n    tag_138:\n        /* \"MGAS/BEP20TokenImplementation.sol\":9967:9968  0 */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":9948:9969  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/BEP20TokenImplementation.sol\":9948:9955  account */\n      dup3\n        /* \"MGAS/BEP20TokenImplementation.sol\":9948:9969  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"MGAS/BEP20TokenImplementation.sol\":9940:10007  require(account != address(0), \"BEP20: burn from the zero address\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_224:\n        /* \"MGAS/BEP20TokenImplementation.sol\":10041:10109  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      tag_227\n        /* \"MGAS/BEP20TokenImplementation.sol\":10064:10070  amount */\n      dup2\n        /* \"MGAS/BEP20TokenImplementation.sol\":10041:10109  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032\n      0x22\n      swap2\n      codecopy\n        /* \"MGAS/BEP20TokenImplementation.sol\":10041:10050  _balances */\n      0x01\n        /* \"MGAS/BEP20TokenImplementation.sol\":10041:10059  _balances[account] */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":10051:10058  account */\n      dup7\n        /* \"MGAS/BEP20TokenImplementation.sol\":10041:10059  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"MGAS/BEP20TokenImplementation.sol\":10041:10063  _balances[account].sub */\n      tag_127\n      swap1\n        /* \"MGAS/BEP20TokenImplementation.sol\":10041:10109  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_227:\n        /* \"MGAS/BEP20TokenImplementation.sol\":10020:10029  _balances */\n      0x01\n        /* \"MGAS/BEP20TokenImplementation.sol\":10020:10038  _balances[account] */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":10030:10037  account */\n      dup5\n        /* \"MGAS/BEP20TokenImplementation.sol\":10020:10038  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MGAS/BEP20TokenImplementation.sol\":10020:10109  _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MGAS/BEP20TokenImplementation.sol\":10135:10159  _totalSupply.sub(amount) */\n      tag_228\n        /* \"MGAS/BEP20TokenImplementation.sol\":10152:10158  amount */\n      dup2\n        /* \"MGAS/BEP20TokenImplementation.sol\":10135:10147  _totalSupply */\n      sload(0x03)\n        /* \"MGAS/BEP20TokenImplementation.sol\":10135:10151  _totalSupply.sub */\n      tag_229\n      swap1\n        /* \"MGAS/BEP20TokenImplementation.sol\":10135:10159  _totalSupply.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_228:\n        /* \"MGAS/BEP20TokenImplementation.sol\":10120:10132  _totalSupply */\n      0x03\n        /* \"MGAS/BEP20TokenImplementation.sol\":10120:10159  _totalSupply = _totalSupply.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MGAS/BEP20TokenImplementation.sol\":10201:10202  0 */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":10175:10212  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/BEP20TokenImplementation.sol\":10184:10191  account */\n      dup3\n        /* \"MGAS/BEP20TokenImplementation.sol\":10175:10212  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"MGAS/BEP20TokenImplementation.sol\":10205:10211  amount */\n      dup4\n        /* \"MGAS/BEP20TokenImplementation.sol\":10175:10212  Transfer(account, address(0), amount) */\n      mload(0x40)\n      tag_230\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"MGAS/BEP20TokenImplementation.sol\":9872:10220  function _burn(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MGAS/BEP20TokenImplementation.sol\":9232:9540  function _mint(address account, uint256 amount) internal {... */\n    tag_164:\n        /* \"MGAS/BEP20TokenImplementation.sol\":9327:9328  0 */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":9308:9329  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/BEP20TokenImplementation.sol\":9308:9315  account */\n      dup3\n        /* \"MGAS/BEP20TokenImplementation.sol\":9308:9329  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"MGAS/BEP20TokenImplementation.sol\":9300:9365  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_233\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_232:\n        /* \"MGAS/BEP20TokenImplementation.sol\":9393:9417  _totalSupply.add(amount) */\n      tag_235\n        /* \"MGAS/BEP20TokenImplementation.sol\":9410:9416  amount */\n      dup2\n        /* \"MGAS/BEP20TokenImplementation.sol\":9393:9405  _totalSupply */\n      sload(0x03)\n        /* \"MGAS/BEP20TokenImplementation.sol\":9393:9409  _totalSupply.add */\n      tag_134\n      swap1\n        /* \"MGAS/BEP20TokenImplementation.sol\":9393:9417  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_235:\n        /* \"MGAS/BEP20TokenImplementation.sol\":9378:9390  _totalSupply */\n      0x03\n        /* \"MGAS/BEP20TokenImplementation.sol\":9378:9417  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MGAS/BEP20TokenImplementation.sol\":9449:9479  _balances[account].add(amount) */\n      tag_236\n        /* \"MGAS/BEP20TokenImplementation.sol\":9472:9478  amount */\n      dup2\n        /* \"MGAS/BEP20TokenImplementation.sol\":9449:9458  _balances */\n      0x01\n        /* \"MGAS/BEP20TokenImplementation.sol\":9449:9467  _balances[account] */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":9459:9466  account */\n      dup6\n        /* \"MGAS/BEP20TokenImplementation.sol\":9449:9467  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"MGAS/BEP20TokenImplementation.sol\":9449:9471  _balances[account].add */\n      tag_134\n      swap1\n        /* \"MGAS/BEP20TokenImplementation.sol\":9449:9479  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_236:\n        /* \"MGAS/BEP20TokenImplementation.sol\":9428:9437  _balances */\n      0x01\n        /* \"MGAS/BEP20TokenImplementation.sol\":9428:9446  _balances[account] */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":9438:9445  account */\n      dup5\n        /* \"MGAS/BEP20TokenImplementation.sol\":9428:9446  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MGAS/BEP20TokenImplementation.sol\":9428:9479  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MGAS/BEP20TokenImplementation.sol\":9516:9523  account */\n      dup2\n        /* \"MGAS/BEP20TokenImplementation.sol\":9495:9532  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/BEP20TokenImplementation.sol\":9512:9513  0 */\n      0x00\n        /* \"MGAS/BEP20TokenImplementation.sol\":9495:9532  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"MGAS/BEP20TokenImplementation.sol\":9525:9531  amount */\n      dup4\n        /* \"MGAS/BEP20TokenImplementation.sol\":9495:9532  Transfer(address(0), account, amount) */\n      mload(0x40)\n      tag_237\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"MGAS/BEP20TokenImplementation.sol\":9232:9540  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MGAS/SafeMath.sol\":1378:1514  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_229:\n        /* \"MGAS/SafeMath.sol\":1436:1443  uint256 */\n      0x00\n        /* \"MGAS/SafeMath.sol\":1463:1506  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_239\n        /* \"MGAS/SafeMath.sol\":1467:1468  a */\n      dup4\n        /* \"MGAS/SafeMath.sol\":1470:1471  b */\n      dup4\n        /* \"MGAS/SafeMath.sol\":1463:1506  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"MGAS/SafeMath.sol\":1463:1466  sub */\n      tag_127\n        /* \"MGAS/SafeMath.sol\":1463:1506  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_239:\n        /* \"MGAS/SafeMath.sol\":1456:1506  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"MGAS/SafeMath.sol\":1378:1514  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_240:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_241:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_242:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_287:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_287)\n    tag_289:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_243:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_244:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_292\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_240\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":818:889   */\n      tag_293\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_241\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_294\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_242\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":988:1017   */\n      tag_295\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_243\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_29:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_297\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_244\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_246:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_248:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_249:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_303\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_248\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_250:\n        /* \"#utility.yul\":1983:2007   */\n      tag_305\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_249\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_306\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_306:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_251:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_308\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_250\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_252:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_253:\n        /* \"#utility.yul\":2339:2363   */\n      tag_311\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_252\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_312\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_312:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_254:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_314\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_253\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_32:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_317\n      tag_246\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":2632:2751   */\n    tag_316:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_318\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_251\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_319\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_254\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_255:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_256:\n        /* \"#utility.yul\":3196:3217   */\n      tag_322\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_255\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_35:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_324\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_256\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_257:\n        /* \"#utility.yul\":3533:3557   */\n      tag_326\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_252\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_39:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_328\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_257\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_42:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_331\n      tag_246\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":3908:4027   */\n    tag_330:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_332\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_251\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_333\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_251\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_334\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_254\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_258:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_259:\n        /* \"#utility.yul\":4598:4620   */\n      tag_337\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_258\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_48:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_339\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_259\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_55:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_342\n      tag_246\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":4929:5048   */\n    tag_341:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_343\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_254\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5517   */\n    tag_63:\n        /* \"#utility.yul\":5247:5253   */\n      0x00\n        /* \"#utility.yul\":5296:5298   */\n      0x20\n        /* \"#utility.yul\":5284:5293   */\n      dup3\n        /* \"#utility.yul\":5275:5282   */\n      dup5\n        /* \"#utility.yul\":5271:5294   */\n      sub\n        /* \"#utility.yul\":5267:5299   */\n      slt\n        /* \"#utility.yul\":5264:5383   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":5302:5381   */\n      tag_346\n      tag_246\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":5264:5383   */\n    tag_345:\n        /* \"#utility.yul\":5422:5423   */\n      0x00\n        /* \"#utility.yul\":5447:5500   */\n      tag_347\n        /* \"#utility.yul\":5492:5499   */\n      dup5\n        /* \"#utility.yul\":5483:5489   */\n      dup3\n        /* \"#utility.yul\":5472:5481   */\n      dup6\n        /* \"#utility.yul\":5468:5490   */\n      add\n        /* \"#utility.yul\":5447:5500   */\n      tag_251\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":5437:5500   */\n      swap2\n      pop\n        /* \"#utility.yul\":5393:5510   */\n      pop\n        /* \"#utility.yul\":5188:5517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5523:5641   */\n    tag_260:\n        /* \"#utility.yul\":5610:5634   */\n      tag_349\n        /* \"#utility.yul\":5628:5633   */\n      dup2\n        /* \"#utility.yul\":5610:5634   */\n      tag_249\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":5605:5608   */\n      dup3\n        /* \"#utility.yul\":5598:5635   */\n      mstore\n        /* \"#utility.yul\":5523:5641   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5647:5869   */\n    tag_74:\n        /* \"#utility.yul\":5740:5744   */\n      0x00\n        /* \"#utility.yul\":5778:5780   */\n      0x20\n        /* \"#utility.yul\":5767:5776   */\n      dup3\n        /* \"#utility.yul\":5763:5781   */\n      add\n        /* \"#utility.yul\":5755:5781   */\n      swap1\n      pop\n        /* \"#utility.yul\":5791:5862   */\n      tag_351\n        /* \"#utility.yul\":5859:5860   */\n      0x00\n        /* \"#utility.yul\":5848:5857   */\n      dup4\n        /* \"#utility.yul\":5844:5861   */\n      add\n        /* \"#utility.yul\":5835:5841   */\n      dup5\n        /* \"#utility.yul\":5791:5862   */\n      tag_260\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":5647:5869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5875:6349   */\n    tag_92:\n        /* \"#utility.yul\":5943:5949   */\n      0x00\n        /* \"#utility.yul\":5951:5957   */\n      dup1\n        /* \"#utility.yul\":6000:6002   */\n      0x40\n        /* \"#utility.yul\":5988:5997   */\n      dup4\n        /* \"#utility.yul\":5979:5986   */\n      dup6\n        /* \"#utility.yul\":5975:5998   */\n      sub\n        /* \"#utility.yul\":5971:6003   */\n      slt\n        /* \"#utility.yul\":5968:6087   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":6006:6085   */\n      tag_354\n      tag_246\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":5968:6087   */\n    tag_353:\n        /* \"#utility.yul\":6126:6127   */\n      0x00\n        /* \"#utility.yul\":6151:6204   */\n      tag_355\n        /* \"#utility.yul\":6196:6203   */\n      dup6\n        /* \"#utility.yul\":6187:6193   */\n      dup3\n        /* \"#utility.yul\":6176:6185   */\n      dup7\n        /* \"#utility.yul\":6172:6194   */\n      add\n        /* \"#utility.yul\":6151:6204   */\n      tag_254\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":6141:6204   */\n      swap3\n      pop\n        /* \"#utility.yul\":6097:6214   */\n      pop\n        /* \"#utility.yul\":6253:6255   */\n      0x20\n        /* \"#utility.yul\":6279:6332   */\n      tag_356\n        /* \"#utility.yul\":6324:6331   */\n      dup6\n        /* \"#utility.yul\":6315:6321   */\n      dup3\n        /* \"#utility.yul\":6304:6313   */\n      dup7\n        /* \"#utility.yul\":6300:6322   */\n      add\n        /* \"#utility.yul\":6279:6332   */\n      tag_251\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":6269:6332   */\n      swap2\n      pop\n        /* \"#utility.yul\":6224:6342   */\n      pop\n        /* \"#utility.yul\":5875:6349   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6355:6829   */\n    tag_101:\n        /* \"#utility.yul\":6423:6429   */\n      0x00\n        /* \"#utility.yul\":6431:6437   */\n      dup1\n        /* \"#utility.yul\":6480:6482   */\n      0x40\n        /* \"#utility.yul\":6468:6477   */\n      dup4\n        /* \"#utility.yul\":6459:6466   */\n      dup6\n        /* \"#utility.yul\":6455:6478   */\n      sub\n        /* \"#utility.yul\":6451:6483   */\n      slt\n        /* \"#utility.yul\":6448:6567   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":6486:6565   */\n      tag_359\n      tag_246\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":6448:6567   */\n    tag_358:\n        /* \"#utility.yul\":6606:6607   */\n      0x00\n        /* \"#utility.yul\":6631:6684   */\n      tag_360\n        /* \"#utility.yul\":6676:6683   */\n      dup6\n        /* \"#utility.yul\":6667:6673   */\n      dup3\n        /* \"#utility.yul\":6656:6665   */\n      dup7\n        /* \"#utility.yul\":6652:6674   */\n      add\n        /* \"#utility.yul\":6631:6684   */\n      tag_251\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":6621:6684   */\n      swap3\n      pop\n        /* \"#utility.yul\":6577:6694   */\n      pop\n        /* \"#utility.yul\":6733:6735   */\n      0x20\n        /* \"#utility.yul\":6759:6812   */\n      tag_361\n        /* \"#utility.yul\":6804:6811   */\n      dup6\n        /* \"#utility.yul\":6795:6801   */\n      dup3\n        /* \"#utility.yul\":6784:6793   */\n      dup7\n        /* \"#utility.yul\":6780:6802   */\n      add\n        /* \"#utility.yul\":6759:6812   */\n      tag_251\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":6749:6812   */\n      swap2\n      pop\n        /* \"#utility.yul\":6704:6822   */\n      pop\n        /* \"#utility.yul\":6355:6829   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6835:7015   */\n    tag_261:\n        /* \"#utility.yul\":6883:6960   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6880:6881   */\n      0x00\n        /* \"#utility.yul\":6873:6961   */\n      mstore\n        /* \"#utility.yul\":6980:6984   */\n      0x22\n        /* \"#utility.yul\":6977:6978   */\n      0x04\n        /* \"#utility.yul\":6970:6985   */\n      mstore\n        /* \"#utility.yul\":7004:7008   */\n      0x24\n        /* \"#utility.yul\":7001:7002   */\n      0x00\n        /* \"#utility.yul\":6994:7009   */\n      revert\n        /* \"#utility.yul\":7021:7341   */\n    tag_109:\n        /* \"#utility.yul\":7065:7071   */\n      0x00\n        /* \"#utility.yul\":7102:7103   */\n      0x02\n        /* \"#utility.yul\":7096:7100   */\n      dup3\n        /* \"#utility.yul\":7092:7104   */\n      div\n        /* \"#utility.yul\":7082:7104   */\n      swap1\n      pop\n        /* \"#utility.yul\":7149:7150   */\n      0x01\n        /* \"#utility.yul\":7143:7147   */\n      dup3\n        /* \"#utility.yul\":7139:7151   */\n      and\n        /* \"#utility.yul\":7170:7188   */\n      dup1\n        /* \"#utility.yul\":7160:7241   */\n      tag_364\n      jumpi\n        /* \"#utility.yul\":7226:7230   */\n      0x7f\n        /* \"#utility.yul\":7218:7224   */\n      dup3\n        /* \"#utility.yul\":7214:7231   */\n      and\n        /* \"#utility.yul\":7204:7231   */\n      swap2\n      pop\n        /* \"#utility.yul\":7160:7241   */\n    tag_364:\n        /* \"#utility.yul\":7288:7290   */\n      0x20\n        /* \"#utility.yul\":7280:7286   */\n      dup3\n        /* \"#utility.yul\":7277:7291   */\n      lt\n        /* \"#utility.yul\":7257:7275   */\n      dup2\n        /* \"#utility.yul\":7254:7292   */\n      sub\n        /* \"#utility.yul\":7251:7335   */\n      tag_365\n      jumpi\n        /* \"#utility.yul\":7307:7325   */\n      tag_366\n      tag_261\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":7251:7335   */\n    tag_365:\n        /* \"#utility.yul\":7072:7341   */\n      pop\n        /* \"#utility.yul\":7021:7341   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7347:7529   */\n    tag_262:\n        /* \"#utility.yul\":7487:7521   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7483:7484   */\n      0x00\n        /* \"#utility.yul\":7475:7481   */\n      dup3\n        /* \"#utility.yul\":7471:7485   */\n      add\n        /* \"#utility.yul\":7464:7522   */\n      mstore\n        /* \"#utility.yul\":7347:7529   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7535:7901   */\n    tag_263:\n        /* \"#utility.yul\":7677:7680   */\n      0x00\n        /* \"#utility.yul\":7698:7765   */\n      tag_369\n        /* \"#utility.yul\":7762:7764   */\n      0x20\n        /* \"#utility.yul\":7757:7760   */\n      dup4\n        /* \"#utility.yul\":7698:7765   */\n      tag_241\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":7691:7765   */\n      swap2\n      pop\n        /* \"#utility.yul\":7774:7867   */\n      tag_370\n        /* \"#utility.yul\":7863:7866   */\n      dup3\n        /* \"#utility.yul\":7774:7867   */\n      tag_262\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":7892:7894   */\n      0x20\n        /* \"#utility.yul\":7887:7890   */\n      dup3\n        /* \"#utility.yul\":7883:7895   */\n      add\n        /* \"#utility.yul\":7876:7895   */\n      swap1\n      pop\n        /* \"#utility.yul\":7535:7901   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7907:8326   */\n    tag_145:\n        /* \"#utility.yul\":8073:8077   */\n      0x00\n        /* \"#utility.yul\":8111:8113   */\n      0x20\n        /* \"#utility.yul\":8100:8109   */\n      dup3\n        /* \"#utility.yul\":8096:8114   */\n      add\n        /* \"#utility.yul\":8088:8114   */\n      swap1\n      pop\n        /* \"#utility.yul\":8160:8169   */\n      dup2\n        /* \"#utility.yul\":8154:8158   */\n      dup2\n        /* \"#utility.yul\":8150:8170   */\n      sub\n        /* \"#utility.yul\":8146:8147   */\n      0x00\n        /* \"#utility.yul\":8135:8144   */\n      dup4\n        /* \"#utility.yul\":8131:8148   */\n      add\n        /* \"#utility.yul\":8124:8171   */\n      mstore\n        /* \"#utility.yul\":8188:8319   */\n      tag_372\n        /* \"#utility.yul\":8314:8318   */\n      dup2\n        /* \"#utility.yul\":8188:8319   */\n      tag_263\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":8180:8319   */\n      swap1\n      pop\n        /* \"#utility.yul\":7907:8326   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8332:8508   */\n    tag_264:\n        /* \"#utility.yul\":8472:8500   */\n      0x7468697320746f6b656e206973206e6f74206d696e7461626c65000000000000\n        /* \"#utility.yul\":8468:8469   */\n      0x00\n        /* \"#utility.yul\":8460:8466   */\n      dup3\n        /* \"#utility.yul\":8456:8470   */\n      add\n        /* \"#utility.yul\":8449:8501   */\n      mstore\n        /* \"#utility.yul\":8332:8508   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8514:8880   */\n    tag_265:\n        /* \"#utility.yul\":8656:8659   */\n      0x00\n        /* \"#utility.yul\":8677:8744   */\n      tag_375\n        /* \"#utility.yul\":8741:8743   */\n      0x1a\n        /* \"#utility.yul\":8736:8739   */\n      dup4\n        /* \"#utility.yul\":8677:8744   */\n      tag_241\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":8670:8744   */\n      swap2\n      pop\n        /* \"#utility.yul\":8753:8846   */\n      tag_376\n        /* \"#utility.yul\":8842:8845   */\n      dup3\n        /* \"#utility.yul\":8753:8846   */\n      tag_264\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":8871:8873   */\n      0x20\n        /* \"#utility.yul\":8866:8869   */\n      dup3\n        /* \"#utility.yul\":8862:8874   */\n      add\n        /* \"#utility.yul\":8855:8874   */\n      swap1\n      pop\n        /* \"#utility.yul\":8514:8880   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8886:9305   */\n    tag_161:\n        /* \"#utility.yul\":9052:9056   */\n      0x00\n        /* \"#utility.yul\":9090:9092   */\n      0x20\n        /* \"#utility.yul\":9079:9088   */\n      dup3\n        /* \"#utility.yul\":9075:9093   */\n      add\n        /* \"#utility.yul\":9067:9093   */\n      swap1\n      pop\n        /* \"#utility.yul\":9139:9148   */\n      dup2\n        /* \"#utility.yul\":9133:9137   */\n      dup2\n        /* \"#utility.yul\":9129:9149   */\n      sub\n        /* \"#utility.yul\":9125:9126   */\n      0x00\n        /* \"#utility.yul\":9114:9123   */\n      dup4\n        /* \"#utility.yul\":9110:9127   */\n      add\n        /* \"#utility.yul\":9103:9150   */\n      mstore\n        /* \"#utility.yul\":9167:9298   */\n      tag_378\n        /* \"#utility.yul\":9293:9297   */\n      dup2\n        /* \"#utility.yul\":9167:9298   */\n      tag_265\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":9159:9298   */\n      swap1\n      pop\n        /* \"#utility.yul\":8886:9305   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9311:9491   */\n    tag_266:\n        /* \"#utility.yul\":9359:9436   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9356:9357   */\n      0x00\n        /* \"#utility.yul\":9349:9437   */\n      mstore\n        /* \"#utility.yul\":9456:9460   */\n      0x11\n        /* \"#utility.yul\":9453:9454   */\n      0x04\n        /* \"#utility.yul\":9446:9461   */\n      mstore\n        /* \"#utility.yul\":9480:9484   */\n      0x24\n        /* \"#utility.yul\":9477:9478   */\n      0x00\n        /* \"#utility.yul\":9470:9485   */\n      revert\n        /* \"#utility.yul\":9497:9907   */\n    tag_183:\n        /* \"#utility.yul\":9537:9544   */\n      0x00\n        /* \"#utility.yul\":9560:9580   */\n      tag_381\n        /* \"#utility.yul\":9578:9579   */\n      dup3\n        /* \"#utility.yul\":9560:9580   */\n      tag_252\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":9555:9580   */\n      swap2\n      pop\n        /* \"#utility.yul\":9594:9614   */\n      tag_382\n        /* \"#utility.yul\":9612:9613   */\n      dup4\n        /* \"#utility.yul\":9594:9614   */\n      tag_252\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":9589:9614   */\n      swap3\n      pop\n        /* \"#utility.yul\":9649:9650   */\n      dup3\n        /* \"#utility.yul\":9646:9647   */\n      dup3\n        /* \"#utility.yul\":9642:9651   */\n      mul\n        /* \"#utility.yul\":9671:9701   */\n      tag_383\n        /* \"#utility.yul\":9689:9700   */\n      dup2\n        /* \"#utility.yul\":9671:9701   */\n      tag_252\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":9660:9701   */\n      swap2\n      pop\n        /* \"#utility.yul\":9850:9851   */\n      dup3\n        /* \"#utility.yul\":9841:9848   */\n      dup3\n        /* \"#utility.yul\":9837:9852   */\n      div\n        /* \"#utility.yul\":9834:9835   */\n      dup5\n        /* \"#utility.yul\":9831:9853   */\n      eq\n        /* \"#utility.yul\":9811:9812   */\n      dup4\n        /* \"#utility.yul\":9804:9813   */\n      iszero\n        /* \"#utility.yul\":9784:9867   */\n      or\n        /* \"#utility.yul\":9761:9900   */\n      tag_384\n      jumpi\n        /* \"#utility.yul\":9880:9898   */\n      tag_385\n      tag_266\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":9761:9900   */\n    tag_384:\n        /* \"#utility.yul\":9545:9907   */\n      pop\n        /* \"#utility.yul\":9497:9907   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9913:10138   */\n    tag_267:\n        /* \"#utility.yul\":10053:10087   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":10049:10050   */\n      0x00\n        /* \"#utility.yul\":10041:10047   */\n      dup3\n        /* \"#utility.yul\":10037:10051   */\n      add\n        /* \"#utility.yul\":10030:10088   */\n      mstore\n        /* \"#utility.yul\":10122:10130   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10117:10119   */\n      0x20\n        /* \"#utility.yul\":10109:10115   */\n      dup3\n        /* \"#utility.yul\":10105:10120   */\n      add\n        /* \"#utility.yul\":10098:10131   */\n      mstore\n        /* \"#utility.yul\":9913:10138   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10144:10510   */\n    tag_268:\n        /* \"#utility.yul\":10286:10289   */\n      0x00\n        /* \"#utility.yul\":10307:10374   */\n      tag_388\n        /* \"#utility.yul\":10371:10373   */\n      0x26\n        /* \"#utility.yul\":10366:10369   */\n      dup4\n        /* \"#utility.yul\":10307:10374   */\n      tag_241\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":10300:10374   */\n      swap2\n      pop\n        /* \"#utility.yul\":10383:10476   */\n      tag_389\n        /* \"#utility.yul\":10472:10475   */\n      dup3\n        /* \"#utility.yul\":10383:10476   */\n      tag_267\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":10501:10503   */\n      0x40\n        /* \"#utility.yul\":10496:10499   */\n      dup3\n        /* \"#utility.yul\":10492:10504   */\n      add\n        /* \"#utility.yul\":10485:10504   */\n      swap1\n      pop\n        /* \"#utility.yul\":10144:10510   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10516:10935   */\n    tag_192:\n        /* \"#utility.yul\":10682:10686   */\n      0x00\n        /* \"#utility.yul\":10720:10722   */\n      0x20\n        /* \"#utility.yul\":10709:10718   */\n      dup3\n        /* \"#utility.yul\":10705:10723   */\n      add\n        /* \"#utility.yul\":10697:10723   */\n      swap1\n      pop\n        /* \"#utility.yul\":10769:10778   */\n      dup2\n        /* \"#utility.yul\":10763:10767   */\n      dup2\n        /* \"#utility.yul\":10759:10779   */\n      sub\n        /* \"#utility.yul\":10755:10756   */\n      0x00\n        /* \"#utility.yul\":10744:10753   */\n      dup4\n        /* \"#utility.yul\":10740:10757   */\n      add\n        /* \"#utility.yul\":10733:10780   */\n      mstore\n        /* \"#utility.yul\":10797:10928   */\n      tag_391\n        /* \"#utility.yul\":10923:10927   */\n      dup2\n        /* \"#utility.yul\":10797:10928   */\n      tag_268\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":10789:10928   */\n      swap1\n      pop\n        /* \"#utility.yul\":10516:10935   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10941:11164   */\n    tag_269:\n        /* \"#utility.yul\":11081:11115   */\n      0x42455032303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":11077:11078   */\n      0x00\n        /* \"#utility.yul\":11069:11075   */\n      dup3\n        /* \"#utility.yul\":11065:11079   */\n      add\n        /* \"#utility.yul\":11058:11116   */\n      mstore\n        /* \"#utility.yul\":11150:11156   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11145:11147   */\n      0x20\n        /* \"#utility.yul\":11137:11143   */\n      dup3\n        /* \"#utility.yul\":11133:11148   */\n      add\n        /* \"#utility.yul\":11126:11157   */\n      mstore\n        /* \"#utility.yul\":10941:11164   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11170:11536   */\n    tag_270:\n        /* \"#utility.yul\":11312:11315   */\n      0x00\n        /* \"#utility.yul\":11333:11400   */\n      tag_394\n        /* \"#utility.yul\":11397:11399   */\n      0x24\n        /* \"#utility.yul\":11392:11395   */\n      dup4\n        /* \"#utility.yul\":11333:11400   */\n      tag_241\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":11326:11400   */\n      swap2\n      pop\n        /* \"#utility.yul\":11409:11502   */\n      tag_395\n        /* \"#utility.yul\":11498:11501   */\n      dup3\n        /* \"#utility.yul\":11409:11502   */\n      tag_269\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":11527:11529   */\n      0x40\n        /* \"#utility.yul\":11522:11525   */\n      dup3\n        /* \"#utility.yul\":11518:11530   */\n      add\n        /* \"#utility.yul\":11511:11530   */\n      swap1\n      pop\n        /* \"#utility.yul\":11170:11536   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11542:11961   */\n    tag_197:\n        /* \"#utility.yul\":11708:11712   */\n      0x00\n        /* \"#utility.yul\":11746:11748   */\n      0x20\n        /* \"#utility.yul\":11735:11744   */\n      dup3\n        /* \"#utility.yul\":11731:11749   */\n      add\n        /* \"#utility.yul\":11723:11749   */\n      swap1\n      pop\n        /* \"#utility.yul\":11795:11804   */\n      dup2\n        /* \"#utility.yul\":11789:11793   */\n      dup2\n        /* \"#utility.yul\":11785:11805   */\n      sub\n        /* \"#utility.yul\":11781:11782   */\n      0x00\n        /* \"#utility.yul\":11770:11779   */\n      dup4\n        /* \"#utility.yul\":11766:11783   */\n      add\n        /* \"#utility.yul\":11759:11806   */\n      mstore\n        /* \"#utility.yul\":11823:11954   */\n      tag_397\n        /* \"#utility.yul\":11949:11953   */\n      dup2\n        /* \"#utility.yul\":11823:11954   */\n      tag_270\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":11815:11954   */\n      swap1\n      pop\n        /* \"#utility.yul\":11542:11961   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11967:12188   */\n    tag_271:\n        /* \"#utility.yul\":12107:12141   */\n      0x42455032303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":12103:12104   */\n      0x00\n        /* \"#utility.yul\":12095:12101   */\n      dup3\n        /* \"#utility.yul\":12091:12105   */\n      add\n        /* \"#utility.yul\":12084:12142   */\n      mstore\n        /* \"#utility.yul\":12176:12180   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12171:12173   */\n      0x20\n        /* \"#utility.yul\":12163:12169   */\n      dup3\n        /* \"#utility.yul\":12159:12174   */\n      add\n        /* \"#utility.yul\":12152:12181   */\n      mstore\n        /* \"#utility.yul\":11967:12188   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12194:12560   */\n    tag_272:\n        /* \"#utility.yul\":12336:12339   */\n      0x00\n        /* \"#utility.yul\":12357:12424   */\n      tag_400\n        /* \"#utility.yul\":12421:12423   */\n      0x22\n        /* \"#utility.yul\":12416:12419   */\n      dup4\n        /* \"#utility.yul\":12357:12424   */\n      tag_241\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":12350:12424   */\n      swap2\n      pop\n        /* \"#utility.yul\":12433:12526   */\n      tag_401\n        /* \"#utility.yul\":12522:12525   */\n      dup3\n        /* \"#utility.yul\":12433:12526   */\n      tag_271\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":12551:12553   */\n      0x40\n        /* \"#utility.yul\":12546:12549   */\n      dup3\n        /* \"#utility.yul\":12542:12554   */\n      add\n        /* \"#utility.yul\":12535:12554   */\n      swap1\n      pop\n        /* \"#utility.yul\":12194:12560   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12566:12985   */\n    tag_200:\n        /* \"#utility.yul\":12732:12736   */\n      0x00\n        /* \"#utility.yul\":12770:12772   */\n      0x20\n        /* \"#utility.yul\":12759:12768   */\n      dup3\n        /* \"#utility.yul\":12755:12773   */\n      add\n        /* \"#utility.yul\":12747:12773   */\n      swap1\n      pop\n        /* \"#utility.yul\":12819:12828   */\n      dup2\n        /* \"#utility.yul\":12813:12817   */\n      dup2\n        /* \"#utility.yul\":12809:12829   */\n      sub\n        /* \"#utility.yul\":12805:12806   */\n      0x00\n        /* \"#utility.yul\":12794:12803   */\n      dup4\n        /* \"#utility.yul\":12790:12807   */\n      add\n        /* \"#utility.yul\":12783:12830   */\n      mstore\n        /* \"#utility.yul\":12847:12978   */\n      tag_403\n        /* \"#utility.yul\":12973:12977   */\n      dup2\n        /* \"#utility.yul\":12847:12978   */\n      tag_272\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":12839:12978   */\n      swap1\n      pop\n        /* \"#utility.yul\":12566:12985   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12991:13215   */\n    tag_273:\n        /* \"#utility.yul\":13131:13165   */\n      0x42455032303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":13127:13128   */\n      0x00\n        /* \"#utility.yul\":13119:13125   */\n      dup3\n        /* \"#utility.yul\":13115:13129   */\n      add\n        /* \"#utility.yul\":13108:13166   */\n      mstore\n        /* \"#utility.yul\":13200:13207   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13195:13197   */\n      0x20\n        /* \"#utility.yul\":13187:13193   */\n      dup3\n        /* \"#utility.yul\":13183:13198   */\n      add\n        /* \"#utility.yul\":13176:13208   */\n      mstore\n        /* \"#utility.yul\":12991:13215   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13221:13587   */\n    tag_274:\n        /* \"#utility.yul\":13363:13366   */\n      0x00\n        /* \"#utility.yul\":13384:13451   */\n      tag_406\n        /* \"#utility.yul\":13448:13450   */\n      0x25\n        /* \"#utility.yul\":13443:13446   */\n      dup4\n        /* \"#utility.yul\":13384:13451   */\n      tag_241\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":13377:13451   */\n      swap2\n      pop\n        /* \"#utility.yul\":13460:13553   */\n      tag_407\n        /* \"#utility.yul\":13549:13552   */\n      dup3\n        /* \"#utility.yul\":13460:13553   */\n      tag_273\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":13578:13580   */\n      0x40\n        /* \"#utility.yul\":13573:13576   */\n      dup3\n        /* \"#utility.yul\":13569:13581   */\n      add\n        /* \"#utility.yul\":13562:13581   */\n      swap1\n      pop\n        /* \"#utility.yul\":13221:13587   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13593:14012   */\n    tag_205:\n        /* \"#utility.yul\":13759:13763   */\n      0x00\n        /* \"#utility.yul\":13797:13799   */\n      0x20\n        /* \"#utility.yul\":13786:13795   */\n      dup3\n        /* \"#utility.yul\":13782:13800   */\n      add\n        /* \"#utility.yul\":13774:13800   */\n      swap1\n      pop\n        /* \"#utility.yul\":13846:13855   */\n      dup2\n        /* \"#utility.yul\":13840:13844   */\n      dup2\n        /* \"#utility.yul\":13836:13856   */\n      sub\n        /* \"#utility.yul\":13832:13833   */\n      0x00\n        /* \"#utility.yul\":13821:13830   */\n      dup4\n        /* \"#utility.yul\":13817:13834   */\n      add\n        /* \"#utility.yul\":13810:13857   */\n      mstore\n        /* \"#utility.yul\":13874:14005   */\n      tag_409\n        /* \"#utility.yul\":14000:14004   */\n      dup2\n        /* \"#utility.yul\":13874:14005   */\n      tag_274\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":13866:14005   */\n      swap1\n      pop\n        /* \"#utility.yul\":13593:14012   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14018:14240   */\n    tag_275:\n        /* \"#utility.yul\":14158:14192   */\n      0x42455032303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":14154:14155   */\n      0x00\n        /* \"#utility.yul\":14146:14152   */\n      dup3\n        /* \"#utility.yul\":14142:14156   */\n      add\n        /* \"#utility.yul\":14135:14193   */\n      mstore\n        /* \"#utility.yul\":14227:14232   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14222:14224   */\n      0x20\n        /* \"#utility.yul\":14214:14220   */\n      dup3\n        /* \"#utility.yul\":14210:14225   */\n      add\n        /* \"#utility.yul\":14203:14233   */\n      mstore\n        /* \"#utility.yul\":14018:14240   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14246:14612   */\n    tag_276:\n        /* \"#utility.yul\":14388:14391   */\n      0x00\n        /* \"#utility.yul\":14409:14476   */\n      tag_412\n        /* \"#utility.yul\":14473:14475   */\n      0x23\n        /* \"#utility.yul\":14468:14471   */\n      dup4\n        /* \"#utility.yul\":14409:14476   */\n      tag_241\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":14402:14476   */\n      swap2\n      pop\n        /* \"#utility.yul\":14485:14578   */\n      tag_413\n        /* \"#utility.yul\":14574:14577   */\n      dup3\n        /* \"#utility.yul\":14485:14578   */\n      tag_275\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":14603:14605   */\n      0x40\n        /* \"#utility.yul\":14598:14601   */\n      dup3\n        /* \"#utility.yul\":14594:14606   */\n      add\n        /* \"#utility.yul\":14587:14606   */\n      swap1\n      pop\n        /* \"#utility.yul\":14246:14612   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14618:15037   */\n    tag_208:\n        /* \"#utility.yul\":14784:14788   */\n      0x00\n        /* \"#utility.yul\":14822:14824   */\n      0x20\n        /* \"#utility.yul\":14811:14820   */\n      dup3\n        /* \"#utility.yul\":14807:14825   */\n      add\n        /* \"#utility.yul\":14799:14825   */\n      swap1\n      pop\n        /* \"#utility.yul\":14871:14880   */\n      dup2\n        /* \"#utility.yul\":14865:14869   */\n      dup2\n        /* \"#utility.yul\":14861:14881   */\n      sub\n        /* \"#utility.yul\":14857:14858   */\n      0x00\n        /* \"#utility.yul\":14846:14855   */\n      dup4\n        /* \"#utility.yul\":14842:14859   */\n      add\n        /* \"#utility.yul\":14835:14882   */\n      mstore\n        /* \"#utility.yul\":14899:15030   */\n      tag_415\n        /* \"#utility.yul\":15025:15029   */\n      dup2\n        /* \"#utility.yul\":14899:15030   */\n      tag_276\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":14891:15030   */\n      swap1\n      pop\n        /* \"#utility.yul\":14618:15037   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15043:15237   */\n    tag_216:\n        /* \"#utility.yul\":15083:15087   */\n      0x00\n        /* \"#utility.yul\":15103:15123   */\n      tag_417\n        /* \"#utility.yul\":15121:15122   */\n      dup3\n        /* \"#utility.yul\":15103:15123   */\n      tag_252\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":15098:15123   */\n      swap2\n      pop\n        /* \"#utility.yul\":15137:15157   */\n      tag_418\n        /* \"#utility.yul\":15155:15156   */\n      dup4\n        /* \"#utility.yul\":15137:15157   */\n      tag_252\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":15132:15157   */\n      swap3\n      pop\n        /* \"#utility.yul\":15181:15182   */\n      dup3\n        /* \"#utility.yul\":15178:15179   */\n      dup3\n        /* \"#utility.yul\":15174:15183   */\n      sub\n        /* \"#utility.yul\":15166:15183   */\n      swap1\n      pop\n        /* \"#utility.yul\":15205:15206   */\n      dup2\n        /* \"#utility.yul\":15199:15203   */\n      dup2\n        /* \"#utility.yul\":15196:15207   */\n      gt\n        /* \"#utility.yul\":15193:15230   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":15210:15228   */\n      tag_420\n      tag_266\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":15193:15230   */\n    tag_419:\n        /* \"#utility.yul\":15043:15237   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15243:15434   */\n    tag_219:\n        /* \"#utility.yul\":15283:15286   */\n      0x00\n        /* \"#utility.yul\":15302:15322   */\n      tag_422\n        /* \"#utility.yul\":15320:15321   */\n      dup3\n        /* \"#utility.yul\":15302:15322   */\n      tag_252\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":15297:15322   */\n      swap2\n      pop\n        /* \"#utility.yul\":15336:15356   */\n      tag_423\n        /* \"#utility.yul\":15354:15355   */\n      dup4\n        /* \"#utility.yul\":15336:15356   */\n      tag_252\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":15331:15356   */\n      swap3\n      pop\n        /* \"#utility.yul\":15379:15380   */\n      dup3\n        /* \"#utility.yul\":15376:15377   */\n      dup3\n        /* \"#utility.yul\":15372:15381   */\n      add\n        /* \"#utility.yul\":15365:15381   */\n      swap1\n      pop\n        /* \"#utility.yul\":15400:15403   */\n      dup1\n        /* \"#utility.yul\":15397:15398   */\n      dup3\n        /* \"#utility.yul\":15394:15404   */\n      gt\n        /* \"#utility.yul\":15391:15427   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":15407:15425   */\n      tag_425\n      tag_266\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":15391:15427   */\n    tag_424:\n        /* \"#utility.yul\":15243:15434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15440:15617   */\n    tag_277:\n        /* \"#utility.yul\":15580:15609   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":15576:15577   */\n      0x00\n        /* \"#utility.yul\":15568:15574   */\n      dup3\n        /* \"#utility.yul\":15564:15578   */\n      add\n        /* \"#utility.yul\":15557:15610   */\n      mstore\n        /* \"#utility.yul\":15440:15617   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15623:15989   */\n    tag_278:\n        /* \"#utility.yul\":15765:15768   */\n      0x00\n        /* \"#utility.yul\":15786:15853   */\n      tag_428\n        /* \"#utility.yul\":15850:15852   */\n      0x1b\n        /* \"#utility.yul\":15845:15848   */\n      dup4\n        /* \"#utility.yul\":15786:15853   */\n      tag_241\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":15779:15853   */\n      swap2\n      pop\n        /* \"#utility.yul\":15862:15955   */\n      tag_429\n        /* \"#utility.yul\":15951:15954   */\n      dup3\n        /* \"#utility.yul\":15862:15955   */\n      tag_277\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":15980:15982   */\n      0x20\n        /* \"#utility.yul\":15975:15978   */\n      dup3\n        /* \"#utility.yul\":15971:15983   */\n      add\n        /* \"#utility.yul\":15964:15983   */\n      swap1\n      pop\n        /* \"#utility.yul\":15623:15989   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15995:16414   */\n    tag_222:\n        /* \"#utility.yul\":16161:16165   */\n      0x00\n        /* \"#utility.yul\":16199:16201   */\n      0x20\n        /* \"#utility.yul\":16188:16197   */\n      dup3\n        /* \"#utility.yul\":16184:16202   */\n      add\n        /* \"#utility.yul\":16176:16202   */\n      swap1\n      pop\n        /* \"#utility.yul\":16248:16257   */\n      dup2\n        /* \"#utility.yul\":16242:16246   */\n      dup2\n        /* \"#utility.yul\":16238:16258   */\n      sub\n        /* \"#utility.yul\":16234:16235   */\n      0x00\n        /* \"#utility.yul\":16223:16232   */\n      dup4\n        /* \"#utility.yul\":16219:16236   */\n      add\n        /* \"#utility.yul\":16212:16259   */\n      mstore\n        /* \"#utility.yul\":16276:16407   */\n      tag_431\n        /* \"#utility.yul\":16402:16406   */\n      dup2\n        /* \"#utility.yul\":16276:16407   */\n      tag_278\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":16268:16407   */\n      swap1\n      pop\n        /* \"#utility.yul\":15995:16414   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16420:16640   */\n    tag_279:\n        /* \"#utility.yul\":16560:16594   */\n      0x42455032303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":16556:16557   */\n      0x00\n        /* \"#utility.yul\":16548:16554   */\n      dup3\n        /* \"#utility.yul\":16544:16558   */\n      add\n        /* \"#utility.yul\":16537:16595   */\n      mstore\n        /* \"#utility.yul\":16629:16632   */\n      0x7300000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16624:16626   */\n      0x20\n        /* \"#utility.yul\":16616:16622   */\n      dup3\n        /* \"#utility.yul\":16612:16627   */\n      add\n        /* \"#utility.yul\":16605:16633   */\n      mstore\n        /* \"#utility.yul\":16420:16640   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16646:17012   */\n    tag_280:\n        /* \"#utility.yul\":16788:16791   */\n      0x00\n        /* \"#utility.yul\":16809:16876   */\n      tag_434\n        /* \"#utility.yul\":16873:16875   */\n      0x21\n        /* \"#utility.yul\":16868:16871   */\n      dup4\n        /* \"#utility.yul\":16809:16876   */\n      tag_241\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":16802:16876   */\n      swap2\n      pop\n        /* \"#utility.yul\":16885:16978   */\n      tag_435\n        /* \"#utility.yul\":16974:16977   */\n      dup3\n        /* \"#utility.yul\":16885:16978   */\n      tag_279\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":17003:17005   */\n      0x40\n        /* \"#utility.yul\":16998:17001   */\n      dup3\n        /* \"#utility.yul\":16994:17006   */\n      add\n        /* \"#utility.yul\":16987:17006   */\n      swap1\n      pop\n        /* \"#utility.yul\":16646:17012   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17018:17437   */\n    tag_226:\n        /* \"#utility.yul\":17184:17188   */\n      0x00\n        /* \"#utility.yul\":17222:17224   */\n      0x20\n        /* \"#utility.yul\":17211:17220   */\n      dup3\n        /* \"#utility.yul\":17207:17225   */\n      add\n        /* \"#utility.yul\":17199:17225   */\n      swap1\n      pop\n        /* \"#utility.yul\":17271:17280   */\n      dup2\n        /* \"#utility.yul\":17265:17269   */\n      dup2\n        /* \"#utility.yul\":17261:17281   */\n      sub\n        /* \"#utility.yul\":17257:17258   */\n      0x00\n        /* \"#utility.yul\":17246:17255   */\n      dup4\n        /* \"#utility.yul\":17242:17259   */\n      add\n        /* \"#utility.yul\":17235:17282   */\n      mstore\n        /* \"#utility.yul\":17299:17430   */\n      tag_437\n        /* \"#utility.yul\":17425:17429   */\n      dup2\n        /* \"#utility.yul\":17299:17430   */\n      tag_280\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":17291:17430   */\n      swap1\n      pop\n        /* \"#utility.yul\":17018:17437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17443:17624   */\n    tag_281:\n        /* \"#utility.yul\":17583:17616   */\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":17579:17580   */\n      0x00\n        /* \"#utility.yul\":17571:17577   */\n      dup3\n        /* \"#utility.yul\":17567:17581   */\n      add\n        /* \"#utility.yul\":17560:17617   */\n      mstore\n        /* \"#utility.yul\":17443:17624   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17630:17996   */\n    tag_282:\n        /* \"#utility.yul\":17772:17775   */\n      0x00\n        /* \"#utility.yul\":17793:17860   */\n      tag_440\n        /* \"#utility.yul\":17857:17859   */\n      0x1f\n        /* \"#utility.yul\":17852:17855   */\n      dup4\n        /* \"#utility.yul\":17793:17860   */\n      tag_241\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":17786:17860   */\n      swap2\n      pop\n        /* \"#utility.yul\":17869:17962   */\n      tag_441\n        /* \"#utility.yul\":17958:17961   */\n      dup3\n        /* \"#utility.yul\":17869:17962   */\n      tag_281\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":17987:17989   */\n      0x20\n        /* \"#utility.yul\":17982:17985   */\n      dup3\n        /* \"#utility.yul\":17978:17990   */\n      add\n        /* \"#utility.yul\":17971:17990   */\n      swap1\n      pop\n        /* \"#utility.yul\":17630:17996   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18002:18421   */\n    tag_234:\n        /* \"#utility.yul\":18168:18172   */\n      0x00\n        /* \"#utility.yul\":18206:18208   */\n      0x20\n        /* \"#utility.yul\":18195:18204   */\n      dup3\n        /* \"#utility.yul\":18191:18209   */\n      add\n        /* \"#utility.yul\":18183:18209   */\n      swap1\n      pop\n        /* \"#utility.yul\":18255:18264   */\n      dup2\n        /* \"#utility.yul\":18249:18253   */\n      dup2\n        /* \"#utility.yul\":18245:18265   */\n      sub\n        /* \"#utility.yul\":18241:18242   */\n      0x00\n        /* \"#utility.yul\":18230:18239   */\n      dup4\n        /* \"#utility.yul\":18226:18243   */\n      add\n        /* \"#utility.yul\":18219:18266   */\n      mstore\n        /* \"#utility.yul\":18283:18414   */\n      tag_443\n        /* \"#utility.yul\":18409:18413   */\n      dup2\n        /* \"#utility.yul\":18283:18414   */\n      tag_282\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":18275:18414   */\n      swap1\n      pop\n        /* \"#utility.yul\":18002:18421   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032 42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365\n\n    auxdata: 0xa26469706673582212200110a97291153d418dc892aa50f359ba38d4dea447b7a61b71fb18965f821a8864736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 430,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 383,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 580,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 736,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 779,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5231:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "140:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "157:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "160:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "150:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "150:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "254:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "257:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "247:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "281:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "271:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "326:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "346:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "467:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "457:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "457:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "535:269:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "545:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "565:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "612:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "580:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "653:51:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "689:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:26:6"
															},
															"nodeType": "YulIf",
															"src": "623:81:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "756:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "751:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:38:6"
															},
															"nodeType": "YulIf",
															"src": "714:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "519:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "528:6:6",
														"type": ""
													}
												],
												"src": "484:320:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "864:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "874:11:6",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "882:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "902:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:14:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "895:14:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "918:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "936:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "851:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "859:4:6",
														"type": ""
													}
												],
												"src": "810:141:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1001:49:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1011:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "984:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "994:6:6",
														"type": ""
													}
												],
												"src": "957:93:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1119:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:6"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "1084:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1090:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "1100:8:6",
														"type": ""
													}
												],
												"src": "1056:107:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1245:317:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1417:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1477:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1516:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:6"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1206:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "1213:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "1225:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1238:6:6",
														"type": ""
													}
												],
												"src": "1169:393:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1634:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1595:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1605:7:6",
														"type": ""
													}
												],
												"src": "1568:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1683:28:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1693:12:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1700:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1669:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1679:3:6",
														"type": ""
													}
												],
												"src": "1651:60:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1777:82:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1787:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1757:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1767:9:6",
														"type": ""
													}
												],
												"src": "1717:142:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1912:28:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1922:12:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1929:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1898:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1908:3:6",
														"type": ""
													}
												],
												"src": "1865:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2022:193:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:6"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:105:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1999:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2005:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "2013:7:6",
														"type": ""
													}
												],
												"src": "1946:269:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2270:24:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2280:8:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2287:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2266:3:6",
														"type": ""
													}
												],
												"src": "2221:73:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2353:136:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:6"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2339:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2345:6:6",
														"type": ""
													}
												],
												"src": "2300:189:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:136:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2612:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:14:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2577:26:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2579:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2559:2:6",
																"statements": []
															},
															"src": "2555:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "2533:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2540:3:6",
														"type": ""
													}
												],
												"src": "2495:186:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2766:464:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2792:431:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3093:27:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3095:23:6",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:6"
																		},
																		"nodeType": "YulIf",
																		"src": "3071:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:11:6"
															},
															"nodeType": "YulIf",
															"src": "2777:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2742:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2749:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2754:10:6",
														"type": ""
													}
												],
												"src": "2687:543:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3299:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3309:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:6"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "3274:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3280:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3290:8:6",
														"type": ""
													}
												],
												"src": "3236:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3410:118:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3497:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:6"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3387:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "3393:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3403:6:6",
														"type": ""
													}
												],
												"src": "3359:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3614:214:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3747:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:6"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3595:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3601:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3609:4:6",
														"type": ""
													}
												],
												"src": "3533:295:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3925:1303:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4072:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:30:6"
															},
															"nodeType": "YulIf",
															"src": "4038:56:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4118:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:6"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4203:67:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4297:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4308:17:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4321:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4372:611:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4569:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:6"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4646:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:6"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4687:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:6"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "4547:21:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4549:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "4528:3:6",
																					"statements": []
																				},
																				"src": "4524:208:6"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4768:156:6",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:6"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:6"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:6"
																				},
																				"nodeType": "YulIf",
																				"src": "4745:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:6"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4365:618:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5000:222:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5051:67:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5069:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:6"
																				},
																				"nodeType": "YulIf",
																				"src": "5041:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:6"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4992:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:14:6"
															},
															"nodeType": "YulSwitch",
															"src": "4335:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3914:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3920:3:6",
														"type": ""
													}
												],
												"src": "3833:1395:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526a52b7d2dcc80cd2e40000006003556040518060400160405280600481526020017f4d4741530000000000000000000000000000000000000000000000000000000081525060049081620000599190620003ee565b506040518060400160405280600481526020017f4d4741530000000000000000000000000000000000000000000000000000000081525060059081620000a09190620003ee565b506012600660006101000a81548160ff021916908360ff16021790555073ced67d1115f1503e6de2464c378f446b2bd8298c600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200011f57600080fd5b50600354600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506005600781905550620004d5565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620001f657607f821691505b6020821081036200020c576200020b620001ae565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620002767fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000237565b62000282868362000237565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620002cf620002c9620002c3846200029a565b620002a4565b6200029a565b9050919050565b6000819050919050565b620002eb83620002ae565b62000303620002fa82620002d6565b84845462000244565b825550505050565b600090565b6200031a6200030b565b62000327818484620002e0565b505050565b5b818110156200034f576200034360008262000310565b6001810190506200032d565b5050565b601f8211156200039e57620003688162000212565b620003738462000227565b8101602085101562000383578190505b6200039b620003928562000227565b8301826200032c565b50505b505050565b600082821c905092915050565b6000620003c360001984600802620003a3565b1980831691505092915050565b6000620003de8383620003b0565b9150826002028217905092915050565b620003f98262000174565b67ffffffffffffffff8111156200041557620004146200017f565b5b620004218254620001dd565b6200042e82828562000353565b600060209050601f83116001811462000466576000841562000451578287015190505b6200045d8582620003d0565b865550620004cd565b601f198416620004768662000212565b60005b82811015620004a05784890151825560018201915060208501945060208101905062000479565b86831015620004c05784890151620004bc601f891682620003b0565b8355505b6001600288020188555050505b505050505050565b6121a780620004e56000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80637b1b1de6116100ad578063a9059cbb11610071578063a9059cbb1461035d578063b723b34e1461038d578063d5bda32d146103bd578063dd62ed3e146103ed578063f2fde38b1461041d5761012c565b80637b1b1de6146102a3578063893d20e8146102c157806395d89b41146102df578063a0712d68146102fd578063a457c2d71461032d5761012c565b806339509351116100f457806339509351146101eb57806342966c681461021b5780634bf365df1461024b57806370a0823114610269578063715018a6146102995761012c565b806306fdde0314610131578063095ea7b31461014f57806318160ddd1461017f57806323b872dd1461019d578063313ce567146101cd575b600080fd5b610139610439565b604051610146919061179e565b60405180910390f35b61016960048036038101906101649190611859565b6104cb565b60405161017691906118b4565b60405180910390f35b6101876104e9565b60405161019491906118de565b60405180910390f35b6101b760048036038101906101b291906118f9565b6104f3565b6040516101c491906118b4565b60405180910390f35b6101d56105cc565b6040516101e29190611968565b60405180910390f35b61020560048036038101906102009190611859565b6105e3565b60405161021291906118b4565b60405180910390f35b61023560048036038101906102309190611983565b610696565b60405161024291906118b4565b60405180910390f35b6102536106b2565b60405161026091906118b4565b60405180910390f35b610283600480360381019061027e91906119b0565b6106c9565b60405161029091906118de565b60405180910390f35b6102a1610712565b005b6102ab61086a565b6040516102b891906118de565b60405180910390f35b6102c9610870565b6040516102d691906119ec565b60405180910390f35b6102e761089a565b6040516102f4919061179e565b60405180910390f35b61031760048036038101906103129190611983565b61092c565b60405161032491906118b4565b60405180910390f35b61034760048036038101906103429190611859565b610a2e565b60405161035491906118b4565b60405180910390f35b61037760048036038101906103729190611859565b610afb565b60405161038491906118b4565b60405180910390f35b6103a760048036038101906103a29190611a07565b610b19565b6040516103b491906118b4565b60405180910390f35b6103d760048036038101906103d29190611983565b610c15565b6040516103e491906118de565b60405180910390f35b61040760048036038101906104029190611a47565b610c2c565b60405161041491906118de565b60405180910390f35b610437600480360381019061043291906119b0565b610cb3565b005b60606004805461044890611ab6565b80601f016020809104026020016040519081016040528092919081815260200182805461047490611ab6565b80156104c15780601f10610496576101008083540402835291602001916104c1565b820191906000526020600020905b8154815290600101906020018083116104a457829003601f168201915b5050505050905090565b60006104df6104d8610e79565b8484610e81565b6001905092915050565b6000600354905090565b600061050084848461104a565b6105c18461050c610e79565b6105bc856040518060600160405280602881526020016120dd60289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610572610e79565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112d69092919063ffffffff16565b610e81565b600190509392505050565b6000600660009054906101000a900460ff16905090565b600061068c6105f0610e79565b846106878560026000610601610e79565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461133a90919063ffffffff16565b610e81565b6001905092915050565b60006106a96106a3610e79565b83611398565b60019050919050565b6000600860149054906101000a900460ff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61071a610e79565b73ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a090611b33565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60075481565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600580546108a990611ab6565b80601f01602080910402602001604051908101604052809291908181526020018280546108d590611ab6565b80156109225780601f106108f757610100808354040283529160200191610922565b820191906000526020600020905b81548152906001019060200180831161090557829003601f168201915b5050505050905090565b6000610936610e79565b73ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bc90611b33565b60405180910390fd5b600860149054906101000a900460ff16610a14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0b90611b9f565b60405180910390fd5b610a25610a1f610e79565b8361153b565b60019050919050565b6000610af1610a3b610e79565b84610aec8560405180606001604052806025815260200161212b6025913960026000610a65610e79565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112d69092919063ffffffff16565b610e81565b6001905092915050565b6000610b0f610b08610e79565b848461104a565b6001905092915050565b6000610b23610e79565b73ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba990611b33565b60405180910390fd5b600860149054906101000a900460ff16610c01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf890611b9f565b60405180910390fd5b610c0b828461153b565b6001905092915050565b600060075482610c259190611bee565b9050919050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610cbb610e79565b73ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4190611b33565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610db9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db090611ca2565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ef0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee790611d34565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5690611dc6565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161103d91906118de565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b090611e58565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611128576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111f90611eea565b60405180910390fd5b6111948160405180606001604052806026815260200161210560269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112d69092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061122981600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461133a90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516112c991906118de565b60405180910390a3505050565b600083831115829061131e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611315919061179e565b60405180910390fd5b506000838561132d9190611f0a565b9050809150509392505050565b60008082846113499190611f3e565b90508381101561138e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138590611fbe565b60405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611407576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113fe90612050565b60405180910390fd5b6114738160405180606001604052806022815260200161215060229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112d69092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506114cb816003546116c490919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161152f91906118de565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a1906120bc565b60405180910390fd5b6115bf8160035461133a90919063ffffffff16565b60038190555061161781600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461133a90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516116b891906118de565b60405180910390a35050565b600061170683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506112d6565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561174857808201518184015260208101905061172d565b60008484015250505050565b6000601f19601f8301169050919050565b60006117708261170e565b61177a8185611719565b935061178a81856020860161172a565b61179381611754565b840191505092915050565b600060208201905081810360008301526117b88184611765565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117f0826117c5565b9050919050565b611800816117e5565b811461180b57600080fd5b50565b60008135905061181d816117f7565b92915050565b6000819050919050565b61183681611823565b811461184157600080fd5b50565b6000813590506118538161182d565b92915050565b600080604083850312156118705761186f6117c0565b5b600061187e8582860161180e565b925050602061188f85828601611844565b9150509250929050565b60008115159050919050565b6118ae81611899565b82525050565b60006020820190506118c960008301846118a5565b92915050565b6118d881611823565b82525050565b60006020820190506118f360008301846118cf565b92915050565b600080600060608486031215611912576119116117c0565b5b60006119208682870161180e565b93505060206119318682870161180e565b925050604061194286828701611844565b9150509250925092565b600060ff82169050919050565b6119628161194c565b82525050565b600060208201905061197d6000830184611959565b92915050565b600060208284031215611999576119986117c0565b5b60006119a784828501611844565b91505092915050565b6000602082840312156119c6576119c56117c0565b5b60006119d48482850161180e565b91505092915050565b6119e6816117e5565b82525050565b6000602082019050611a0160008301846119dd565b92915050565b60008060408385031215611a1e57611a1d6117c0565b5b6000611a2c85828601611844565b9250506020611a3d8582860161180e565b9150509250929050565b60008060408385031215611a5e57611a5d6117c0565b5b6000611a6c8582860161180e565b9250506020611a7d8582860161180e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611ace57607f821691505b602082108103611ae157611ae0611a87565b5b50919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611b1d602083611719565b9150611b2882611ae7565b602082019050919050565b60006020820190508181036000830152611b4c81611b10565b9050919050565b7f7468697320746f6b656e206973206e6f74206d696e7461626c65000000000000600082015250565b6000611b89601a83611719565b9150611b9482611b53565b602082019050919050565b60006020820190508181036000830152611bb881611b7c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611bf982611823565b9150611c0483611823565b9250828202611c1281611823565b91508282048414831517611c2957611c28611bbf565b5b5092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611c8c602683611719565b9150611c9782611c30565b604082019050919050565b60006020820190508181036000830152611cbb81611c7f565b9050919050565b7f42455032303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611d1e602483611719565b9150611d2982611cc2565b604082019050919050565b60006020820190508181036000830152611d4d81611d11565b9050919050565b7f42455032303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611db0602283611719565b9150611dbb82611d54565b604082019050919050565b60006020820190508181036000830152611ddf81611da3565b9050919050565b7f42455032303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611e42602583611719565b9150611e4d82611de6565b604082019050919050565b60006020820190508181036000830152611e7181611e35565b9050919050565b7f42455032303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611ed4602383611719565b9150611edf82611e78565b604082019050919050565b60006020820190508181036000830152611f0381611ec7565b9050919050565b6000611f1582611823565b9150611f2083611823565b9250828203905081811115611f3857611f37611bbf565b5b92915050565b6000611f4982611823565b9150611f5483611823565b9250828201905080821115611f6c57611f6b611bbf565b5b92915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b6000611fa8601b83611719565b9150611fb382611f72565b602082019050919050565b60006020820190508181036000830152611fd781611f9b565b9050919050565b7f42455032303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b600061203a602183611719565b915061204582611fde565b604082019050919050565b600060208201905081810360008301526120698161202d565b9050919050565b7f42455032303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006120a6601f83611719565b91506120b182612070565b602082019050919050565b600060208201905081810360008301526120d581612099565b905091905056fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365a26469706673582212200110a97291153d418dc892aa50f359ba38d4dea447b7a61b71fb18965f821a8864736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH11 0x52B7D2DCC80CD2E4000000 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D47415300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x4 SWAP1 DUP2 PUSH3 0x59 SWAP2 SWAP1 PUSH3 0x3EE JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D47415300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x5 SWAP1 DUP2 PUSH3 0xA0 SWAP2 SWAP1 PUSH3 0x3EE JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xCED67D1115F1503E6DE2464C378F446B2BD8298C PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x11F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH3 0x4D5 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1F6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x20C JUMPI PUSH3 0x20B PUSH3 0x1AE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x276 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x237 JUMP JUMPDEST PUSH3 0x282 DUP7 DUP4 PUSH3 0x237 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2CF PUSH3 0x2C9 PUSH3 0x2C3 DUP5 PUSH3 0x29A JUMP JUMPDEST PUSH3 0x2A4 JUMP JUMPDEST PUSH3 0x29A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2EB DUP4 PUSH3 0x2AE JUMP JUMPDEST PUSH3 0x303 PUSH3 0x2FA DUP3 PUSH3 0x2D6 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x244 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x31A PUSH3 0x30B JUMP JUMPDEST PUSH3 0x327 DUP2 DUP5 DUP5 PUSH3 0x2E0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x34F JUMPI PUSH3 0x343 PUSH1 0x0 DUP3 PUSH3 0x310 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x32D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x39E JUMPI PUSH3 0x368 DUP2 PUSH3 0x212 JUMP JUMPDEST PUSH3 0x373 DUP5 PUSH3 0x227 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x383 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x39B PUSH3 0x392 DUP6 PUSH3 0x227 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x32C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3C3 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x3A3 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3DE DUP4 DUP4 PUSH3 0x3B0 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x3F9 DUP3 PUSH3 0x174 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x415 JUMPI PUSH3 0x414 PUSH3 0x17F JUMP JUMPDEST JUMPDEST PUSH3 0x421 DUP3 SLOAD PUSH3 0x1DD JUMP JUMPDEST PUSH3 0x42E DUP3 DUP3 DUP6 PUSH3 0x353 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x466 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x451 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x45D DUP6 DUP3 PUSH3 0x3D0 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x4CD JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x476 DUP7 PUSH3 0x212 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x4A0 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x479 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x4C0 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x4BC PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x3B0 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x21A7 DUP1 PUSH3 0x4E5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B1B1DE6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0xB723B34E EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xD5BDA32D EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x41D JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x7B1B1DE6 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x32D JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x4BF365DF EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x299 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1CD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x439 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x179E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1859 JUMP JUMPDEST PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x4E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x18F9 JUMP JUMPDEST PUSH2 0x4F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1968 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x1859 JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x1983 JUMP JUMPDEST PUSH2 0x696 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH2 0x6B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x19B0 JUMP JUMPDEST PUSH2 0x6C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH2 0x712 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AB PUSH2 0x86A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C9 PUSH2 0x870 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x19EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E7 PUSH2 0x89A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x179E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x1983 JUMP JUMPDEST PUSH2 0x92C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x347 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x1859 JUMP JUMPDEST PUSH2 0xA2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x377 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x1859 JUMP JUMPDEST PUSH2 0xAFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x1983 JUMP JUMPDEST PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x407 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x1A47 JUMP JUMPDEST PUSH2 0xC2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x437 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x432 SWAP2 SWAP1 PUSH2 0x19B0 JUMP JUMPDEST PUSH2 0xCB3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x448 SWAP1 PUSH2 0x1AB6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x474 SWAP1 PUSH2 0x1AB6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x496 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DF PUSH2 0x4D8 PUSH2 0xE79 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xE81 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x500 DUP5 DUP5 DUP5 PUSH2 0x104A JUMP JUMPDEST PUSH2 0x5C1 DUP5 PUSH2 0x50C PUSH2 0xE79 JUMP JUMPDEST PUSH2 0x5BC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20DD PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x572 PUSH2 0xE79 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12D6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE81 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x68C PUSH2 0x5F0 PUSH2 0xE79 JUMP JUMPDEST DUP5 PUSH2 0x687 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x601 PUSH2 0xE79 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x133A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE81 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6A9 PUSH2 0x6A3 PUSH2 0xE79 JUMP JUMPDEST DUP4 PUSH2 0x1398 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x71A PUSH2 0xE79 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A0 SWAP1 PUSH2 0x1B33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x8A9 SWAP1 PUSH2 0x1AB6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8D5 SWAP1 PUSH2 0x1AB6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x922 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x922 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x905 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x936 PUSH2 0xE79 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BC SWAP1 PUSH2 0x1B33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0B SWAP1 PUSH2 0x1B9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA25 PUSH2 0xA1F PUSH2 0xE79 JUMP JUMPDEST DUP4 PUSH2 0x153B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF1 PUSH2 0xA3B PUSH2 0xE79 JUMP JUMPDEST DUP5 PUSH2 0xAEC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x212B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xA65 PUSH2 0xE79 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12D6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE81 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0F PUSH2 0xB08 PUSH2 0xE79 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x104A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB23 PUSH2 0xE79 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA9 SWAP1 PUSH2 0x1B33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xC01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF8 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC0B DUP3 DUP5 PUSH2 0x153B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0xC25 SWAP2 SWAP1 PUSH2 0x1BEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCBB PUSH2 0xE79 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD41 SWAP1 PUSH2 0x1B33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB0 SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE7 SWAP1 PUSH2 0x1D34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF56 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x103D SWAP2 SWAP1 PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B0 SWAP1 PUSH2 0x1E58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1128 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111F SWAP1 PUSH2 0x1EEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1194 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2105 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12D6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1229 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x133A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x12C9 SWAP2 SWAP1 PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x131E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1315 SWAP2 SWAP1 PUSH2 0x179E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x132D SWAP2 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x1349 SWAP2 SWAP1 PUSH2 0x1F3E JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x138E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1385 SWAP1 PUSH2 0x1FBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1407 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13FE SWAP1 PUSH2 0x2050 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1473 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2150 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12D6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x14CB DUP2 PUSH1 0x3 SLOAD PUSH2 0x16C4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x152F SWAP2 SWAP1 PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15A1 SWAP1 PUSH2 0x20BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15BF DUP2 PUSH1 0x3 SLOAD PUSH2 0x133A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1617 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x133A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x16B8 SWAP2 SWAP1 PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1706 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x12D6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1748 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x172D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1770 DUP3 PUSH2 0x170E JUMP JUMPDEST PUSH2 0x177A DUP2 DUP6 PUSH2 0x1719 JUMP JUMPDEST SWAP4 POP PUSH2 0x178A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x172A JUMP JUMPDEST PUSH2 0x1793 DUP2 PUSH2 0x1754 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17B8 DUP2 DUP5 PUSH2 0x1765 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F0 DUP3 PUSH2 0x17C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1800 DUP2 PUSH2 0x17E5 JUMP JUMPDEST DUP2 EQ PUSH2 0x180B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x181D DUP2 PUSH2 0x17F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1836 DUP2 PUSH2 0x1823 JUMP JUMPDEST DUP2 EQ PUSH2 0x1841 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1853 DUP2 PUSH2 0x182D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1870 JUMPI PUSH2 0x186F PUSH2 0x17C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x187E DUP6 DUP3 DUP7 ADD PUSH2 0x180E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x188F DUP6 DUP3 DUP7 ADD PUSH2 0x1844 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18AE DUP2 PUSH2 0x1899 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18D8 DUP2 PUSH2 0x1823 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1912 JUMPI PUSH2 0x1911 PUSH2 0x17C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1920 DUP7 DUP3 DUP8 ADD PUSH2 0x180E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1931 DUP7 DUP3 DUP8 ADD PUSH2 0x180E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1942 DUP7 DUP3 DUP8 ADD PUSH2 0x1844 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1962 DUP2 PUSH2 0x194C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x197D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1959 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1999 JUMPI PUSH2 0x1998 PUSH2 0x17C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19A7 DUP5 DUP3 DUP6 ADD PUSH2 0x1844 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19C6 JUMPI PUSH2 0x19C5 PUSH2 0x17C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19D4 DUP5 DUP3 DUP6 ADD PUSH2 0x180E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19E6 DUP2 PUSH2 0x17E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A01 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A1E JUMPI PUSH2 0x1A1D PUSH2 0x17C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A2C DUP6 DUP3 DUP7 ADD PUSH2 0x1844 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A3D DUP6 DUP3 DUP7 ADD PUSH2 0x180E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A5E JUMPI PUSH2 0x1A5D PUSH2 0x17C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A6C DUP6 DUP3 DUP7 ADD PUSH2 0x180E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A7D DUP6 DUP3 DUP7 ADD PUSH2 0x180E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1ACE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1AE1 JUMPI PUSH2 0x1AE0 PUSH2 0x1A87 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B1D PUSH1 0x20 DUP4 PUSH2 0x1719 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B28 DUP3 PUSH2 0x1AE7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B4C DUP2 PUSH2 0x1B10 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7468697320746F6B656E206973206E6F74206D696E7461626C65000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B89 PUSH1 0x1A DUP4 PUSH2 0x1719 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B94 DUP3 PUSH2 0x1B53 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BB8 DUP2 PUSH2 0x1B7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BF9 DUP3 PUSH2 0x1823 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C04 DUP4 PUSH2 0x1823 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1C12 DUP2 PUSH2 0x1823 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1C29 JUMPI PUSH2 0x1C28 PUSH2 0x1BBF JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C8C PUSH1 0x26 DUP4 PUSH2 0x1719 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C97 DUP3 PUSH2 0x1C30 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CBB DUP2 PUSH2 0x1C7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D1E PUSH1 0x24 DUP4 PUSH2 0x1719 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D29 DUP3 PUSH2 0x1CC2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D4D DUP2 PUSH2 0x1D11 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB0 PUSH1 0x22 DUP4 PUSH2 0x1719 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DBB DUP3 PUSH2 0x1D54 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DDF DUP2 PUSH2 0x1DA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E42 PUSH1 0x25 DUP4 PUSH2 0x1719 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E4D DUP3 PUSH2 0x1DE6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E71 DUP2 PUSH2 0x1E35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED4 PUSH1 0x23 DUP4 PUSH2 0x1719 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EDF DUP3 PUSH2 0x1E78 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F03 DUP2 PUSH2 0x1EC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F15 DUP3 PUSH2 0x1823 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F20 DUP4 PUSH2 0x1823 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1F38 JUMPI PUSH2 0x1F37 PUSH2 0x1BBF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F49 DUP3 PUSH2 0x1823 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F54 DUP4 PUSH2 0x1823 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F6C JUMPI PUSH2 0x1F6B PUSH2 0x1BBF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA8 PUSH1 0x1B DUP4 PUSH2 0x1719 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FB3 DUP3 PUSH2 0x1F72 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FD7 DUP2 PUSH2 0x1F9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x203A PUSH1 0x21 DUP4 PUSH2 0x1719 JUMP JUMPDEST SWAP2 POP PUSH2 0x2045 DUP3 PUSH2 0x1FDE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2069 DUP2 PUSH2 0x202D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A6 PUSH1 0x1F DUP4 PUSH2 0x1719 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B1 DUP3 PUSH2 0x2070 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20D5 DUP2 PUSH2 0x2099 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726F42455032303A206275 PUSH19 0x6E20616D6F756E742065786365656473206261 PUSH13 0x616E6365A26469706673582212 KECCAK256 ADD LT 0xA9 PUSH19 0x91153D418DC892AA50F359BA38D4DEA447B7A6 SHL PUSH18 0xFB18965F821A8864736F6C63430008120033 ",
							"sourceMap": "216:11203:0:-:0;;;493:27;462:58;;527:29;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;563:31;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;627:2;601:28;;;;;;;;;;;;;;;;;;;;699:42;674:67;;;;;;;;;;;;;;;;;;;;871:98;;;;;;;;;;921:12;;897:9;:21;907:10;897:21;;;;;;;;;;;;;;;:36;;;;960:1;944:13;:17;;;;216:11203;;7:99:6;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;216:11203:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_636": {
									"entryPoint": 3713,
									"id": 636,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_591": {
									"entryPoint": 5016,
									"id": 591,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_544": {
									"entryPoint": 5435,
									"id": 544,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_678": {
									"entryPoint": 3705,
									"id": 678,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_498": {
									"entryPoint": 4170,
									"id": 498,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_912": {
									"entryPoint": 4922,
									"id": 912,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_254": {
									"entryPoint": 3116,
									"id": 254,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_275": {
									"entryPoint": 1227,
									"id": 275,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_215": {
									"entryPoint": 1737,
									"id": 215,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_438": {
									"entryPoint": 1686,
									"id": 438,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_171": {
									"entryPoint": 1484,
									"id": 171,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_370": {
									"entryPoint": 2606,
									"id": 370,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getETHValue_79": {
									"entryPoint": 3093,
									"id": 79,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getOwner_161": {
									"entryPoint": 2160,
									"id": 161,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increaseAllowance_341": {
									"entryPoint": 1507,
									"id": 341,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mintTo_420": {
									"entryPoint": 2841,
									"id": 420,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_394": {
									"entryPoint": 2348,
									"id": 394,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintable_151": {
									"entryPoint": 1714,
									"id": 151,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_191": {
									"entryPoint": 1081,
									"id": 191,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pricePerToken_41": {
									"entryPoint": 2154,
									"id": 41,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_114": {
									"entryPoint": 1810,
									"id": 114,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_929": {
									"entryPoint": 5828,
									"id": 929,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_957": {
									"entryPoint": 4822,
									"id": 957,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_181": {
									"entryPoint": 2202,
									"id": 181,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_201": {
									"entryPoint": 1257,
									"id": 201,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_313": {
									"entryPoint": 1267,
									"id": 313,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_142": {
									"entryPoint": 3251,
									"id": 142,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_236": {
									"entryPoint": 2811,
									"id": 236,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 6663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6351,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6504,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6179,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5930,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7103,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6791,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6080,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57": {
									"entryPoint": 7654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386": {
									"entryPoint": 6995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4": {
									"entryPoint": 7362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 7216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a": {
									"entryPoint": 8050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3": {
									"entryPoint": 8304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 6887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2": {
									"entryPoint": 7800,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855": {
									"entryPoint": 8158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5": {
									"entryPoint": 7508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18424:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:6",
														"type": ""
													}
												],
												"src": "112:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:6",
																"statements": []
															},
															"src": "378:113:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:6"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:6",
														"type": ""
													}
												],
												"src": "287:246:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:6",
														"type": ""
													}
												],
												"src": "539:102:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:6",
														"type": ""
													}
												],
												"src": "647:377:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:6"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:6",
														"type": ""
													}
												],
												"src": "1030:313:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:6",
														"type": ""
													}
												],
												"src": "1349:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:6",
														"type": ""
													}
												],
												"src": "1676:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:6",
														"type": ""
													}
												],
												"src": "1808:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:6"
															},
															"nodeType": "YulIf",
															"src": "1963:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:6",
														"type": ""
													}
												],
												"src": "1910:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:6",
														"type": ""
													}
												],
												"src": "2038:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:6",
														"type": ""
													}
												],
												"src": "2183:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:6"
															},
															"nodeType": "YulIf",
															"src": "2319:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:6",
														"type": ""
													}
												],
												"src": "2266:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:6",
														"type": ""
													}
												],
												"src": "2394:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:6"
															},
															"nodeType": "YulIf",
															"src": "2632:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:6",
														"type": ""
													}
												],
												"src": "2539:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:6",
														"type": ""
													}
												],
												"src": "3019:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:6",
														"type": ""
													}
												],
												"src": "3115:109:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:6",
														"type": ""
													}
												],
												"src": "3230:210:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:6",
														"type": ""
													}
												],
												"src": "3446:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:6",
														"type": ""
													}
												],
												"src": "3570:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:519:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3944:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:32:6"
															},
															"nodeType": "YulIf",
															"src": "3908:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "4037:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4081:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4164:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4209:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4337:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3852:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3863:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3875:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3883:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3891:6:6",
														"type": ""
													}
												],
												"src": "3798:619:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:43:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4476:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4448:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4458:7:6",
														"type": ""
													}
												],
												"src": "4423:86:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4564:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4571:3:6",
														"type": ""
													}
												],
												"src": "4515:112:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4727:120:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4737:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:67:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4699:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4711:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4722:4:6",
														"type": ""
													}
												],
												"src": "4633:214:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4919:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4965:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:32:6"
															},
															"nodeType": "YulIf",
															"src": "4929:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "5058:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5102:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4889:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4900:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4912:6:6",
														"type": ""
													}
												],
												"src": "4853:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5254:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5300:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5302:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5302:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5302:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5275:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5284:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5271:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5271:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5296:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5267:32:6"
															},
															"nodeType": "YulIf",
															"src": "5264:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "5393:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5408:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5422:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5412:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5437:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5472:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5483:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5468:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5468:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5492:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5447:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5447:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5437:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5224:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5235:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5247:6:6",
														"type": ""
													}
												],
												"src": "5188:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5588:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5605:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5628:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5610:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5610:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5598:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5598:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5598:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5576:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5583:3:6",
														"type": ""
													}
												],
												"src": "5523:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5745:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5755:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5767:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5778:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5763:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5763:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5755:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5835:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5848:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5859:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5844:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5844:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5791:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5791:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5791:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5717:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5729:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5740:4:6",
														"type": ""
													}
												],
												"src": "5647:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5958:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6004:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6006:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6006:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6006:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5979:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5988:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5975:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5975:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6000:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5971:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5971:32:6"
															},
															"nodeType": "YulIf",
															"src": "5968:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "6097:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6112:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6126:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6116:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6141:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6176:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6187:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6172:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6172:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6196:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6151:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6151:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6141:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6224:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6239:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6253:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6243:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6269:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6304:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6315:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6300:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6300:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6324:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6279:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6279:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6269:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5920:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5931:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5943:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5951:6:6",
														"type": ""
													}
												],
												"src": "5875:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6438:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6484:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6486:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6486:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6486:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6459:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6468:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6455:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6455:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6480:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6451:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6451:32:6"
															},
															"nodeType": "YulIf",
															"src": "6448:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "6577:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6592:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6606:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6596:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6621:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6656:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6667:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6652:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6652:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6676:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6631:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6631:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6621:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6704:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6719:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6733:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6723:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6749:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6784:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6795:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6780:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6780:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6804:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6759:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6759:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6749:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6400:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6411:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6423:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6431:6:6",
														"type": ""
													}
												],
												"src": "6355:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6863:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6880:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6883:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6873:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6873:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6873:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6977:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6980:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6970:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6970:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6970:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7001:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7004:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6994:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6994:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6994:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "6835:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7072:269:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7082:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7096:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7102:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7092:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7092:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7082:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7113:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7143:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7149:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7139:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7139:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "7117:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7190:51:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7204:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "7218:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7226:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7214:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7214:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7204:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7170:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7163:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7163:26:6"
															},
															"nodeType": "YulIf",
															"src": "7160:81:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7293:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "7307:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7307:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7307:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7257:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7280:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7288:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7277:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7277:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7254:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7254:38:6"
															},
															"nodeType": "YulIf",
															"src": "7251:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7056:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7065:6:6",
														"type": ""
													}
												],
												"src": "7021:320:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7453:76:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7475:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7483:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7471:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7471:14:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7487:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7464:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7464:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7464:58:6"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7445:6:6",
														"type": ""
													}
												],
												"src": "7347:182:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7681:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7691:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7757:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7762:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7698:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7698:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7691:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7863:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "7774:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7774:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7774:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7876:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7887:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7892:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7883:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7883:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7876:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7669:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7677:3:6",
														"type": ""
													}
												],
												"src": "7535:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8078:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8088:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8100:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8111:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8096:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8096:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8088:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8135:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8146:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8131:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8131:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8154:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8160:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8150:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8150:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8124:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8124:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8124:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8180:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8314:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8188:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8188:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8180:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8058:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8073:4:6",
														"type": ""
													}
												],
												"src": "7907:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8438:70:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8460:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8468:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8456:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8456:14:6"
																	},
																	{
																		"hexValue": "7468697320746f6b656e206973206e6f74206d696e7461626c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8472:28:6",
																		"type": "",
																		"value": "this token is not mintable"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8449:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8449:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8449:52:6"
														}
													]
												},
												"name": "store_literal_in_memory_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8430:6:6",
														"type": ""
													}
												],
												"src": "8332:176:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8660:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8670:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8736:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8741:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8677:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8677:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8670:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8842:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386",
																	"nodeType": "YulIdentifier",
																	"src": "8753:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8753:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8753:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8855:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8866:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8871:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8862:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8862:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8855:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8648:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8656:3:6",
														"type": ""
													}
												],
												"src": "8514:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9057:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9067:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9079:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9090:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9075:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9075:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9067:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9114:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9125:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9110:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9110:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9133:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9139:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9129:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9129:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9103:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9103:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9103:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9159:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9293:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9167:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9167:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9159:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9037:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9052:4:6",
														"type": ""
													}
												],
												"src": "8886:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9339:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9356:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9359:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9349:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9349:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9349:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9453:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9456:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9446:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9446:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9446:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9477:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9480:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9470:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9470:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9470:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9311:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9545:362:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9555:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9578:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9560:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9560:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9555:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9589:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9612:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9594:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9594:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9589:1:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9623:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9646:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9649:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9642:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9642:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "9627:11:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9660:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "9689:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9671:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9671:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9660:7:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9878:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9880:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9880:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9880:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9811:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9804:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9804:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "9834:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "9841:7:6"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "9850:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "9837:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9837:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "9831:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9831:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "9784:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9784:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9764:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9764:113:6"
															},
															"nodeType": "YulIf",
															"src": "9761:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9528:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9531:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9537:7:6",
														"type": ""
													}
												],
												"src": "9497:410:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10019:119:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10041:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10049:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10037:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10037:14:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10053:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10030:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10030:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10030:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10109:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10117:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10105:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10105:15:6"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10122:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10098:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10098:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10098:33:6"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10011:6:6",
														"type": ""
													}
												],
												"src": "9913:225:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10290:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10300:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10366:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10371:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10307:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10307:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10300:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10472:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "10383:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10383:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10383:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10485:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10496:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10501:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10492:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10492:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10485:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10278:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10286:3:6",
														"type": ""
													}
												],
												"src": "10144:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10687:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10697:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10709:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10720:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10705:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10705:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10697:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10744:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10755:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10740:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10740:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10763:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10769:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10759:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10759:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10733:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10733:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10733:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10789:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10923:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10797:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10797:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10789:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10667:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10682:4:6",
														"type": ""
													}
												],
												"src": "10516:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11047:117:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11069:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11077:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11065:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11065:14:6"
																	},
																	{
																		"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11081:34:6",
																		"type": "",
																		"value": "BEP20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11058:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11058:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11058:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11137:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11145:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11133:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11133:15:6"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11150:6:6",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11126:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11126:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11126:31:6"
														}
													]
												},
												"name": "store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11039:6:6",
														"type": ""
													}
												],
												"src": "10941:223:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11316:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11326:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11392:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11397:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11333:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11333:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11326:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11498:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																	"nodeType": "YulIdentifier",
																	"src": "11409:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11409:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11409:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11511:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11522:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11527:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11518:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11518:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11511:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11304:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11312:3:6",
														"type": ""
													}
												],
												"src": "11170:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11713:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11723:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11735:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11746:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11731:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11731:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11723:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11770:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11781:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11766:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11766:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11789:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11795:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11785:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11785:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11759:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11759:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11759:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11815:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11949:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11823:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11823:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11815:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11693:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11708:4:6",
														"type": ""
													}
												],
												"src": "11542:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12073:115:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12095:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12103:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12091:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12091:14:6"
																	},
																	{
																		"hexValue": "42455032303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12107:34:6",
																		"type": "",
																		"value": "BEP20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12084:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12084:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12084:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12163:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12171:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12159:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12159:15:6"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12176:4:6",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12152:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12152:29:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12152:29:6"
														}
													]
												},
												"name": "store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12065:6:6",
														"type": ""
													}
												],
												"src": "11967:221:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12340:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12350:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12416:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12421:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12357:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12357:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12350:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12522:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																	"nodeType": "YulIdentifier",
																	"src": "12433:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12433:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12433:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12535:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12546:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12551:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12542:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12542:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12535:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12328:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12336:3:6",
														"type": ""
													}
												],
												"src": "12194:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12737:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12747:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12759:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12770:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12755:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12755:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12747:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12794:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12805:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12790:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12790:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12813:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12819:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12809:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12809:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12783:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12783:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12783:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12839:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12973:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12847:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12847:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12839:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12717:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12732:4:6",
														"type": ""
													}
												],
												"src": "12566:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13097:118:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13119:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13127:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13115:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13115:14:6"
																	},
																	{
																		"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13131:34:6",
																		"type": "",
																		"value": "BEP20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13108:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13108:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13108:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13187:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13195:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13183:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13183:15:6"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13200:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13176:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13176:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13176:32:6"
														}
													]
												},
												"name": "store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13089:6:6",
														"type": ""
													}
												],
												"src": "12991:224:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13367:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13377:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13443:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13448:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13384:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13384:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13377:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13549:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																	"nodeType": "YulIdentifier",
																	"src": "13460:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13460:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13460:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13562:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13573:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13578:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13569:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13569:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13562:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13355:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13363:3:6",
														"type": ""
													}
												],
												"src": "13221:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13764:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13774:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13786:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13797:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13782:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13782:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13774:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13821:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13832:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13817:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13817:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13840:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13846:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13836:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13836:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13810:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13810:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13810:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13866:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14000:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13874:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13874:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13866:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13744:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13759:4:6",
														"type": ""
													}
												],
												"src": "13593:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14124:116:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14146:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14154:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14142:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14142:14:6"
																	},
																	{
																		"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14158:34:6",
																		"type": "",
																		"value": "BEP20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14135:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14135:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14135:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14214:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14222:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14210:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14210:15:6"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14227:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14203:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14203:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14203:30:6"
														}
													]
												},
												"name": "store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14116:6:6",
														"type": ""
													}
												],
												"src": "14018:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14392:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14402:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14468:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14473:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14409:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14409:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14402:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14574:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																	"nodeType": "YulIdentifier",
																	"src": "14485:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14485:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14485:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14587:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14598:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14603:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14594:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14594:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14587:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14380:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14388:3:6",
														"type": ""
													}
												],
												"src": "14246:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14789:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14799:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14811:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14822:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14807:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14807:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14799:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14846:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14857:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14842:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14842:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14865:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14871:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14861:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14861:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14835:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14835:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14835:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14891:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15025:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14899:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14899:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14891:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14769:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14784:4:6",
														"type": ""
													}
												],
												"src": "14618:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15088:149:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15098:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15121:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15103:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15103:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15098:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15132:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15155:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15137:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15137:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "15132:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15166:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15178:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15181:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "15174:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15174:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "15166:4:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15208:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15210:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15210:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15210:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "15199:4:6"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15205:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15196:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15196:11:6"
															},
															"nodeType": "YulIf",
															"src": "15193:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15074:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15077:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "15083:4:6",
														"type": ""
													}
												],
												"src": "15043:194:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15287:147:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15297:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15320:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15302:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15302:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15297:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15331:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15354:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15336:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15336:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "15331:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15365:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15376:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15379:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15372:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15372:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "15365:3:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15405:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15407:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15407:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15407:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15397:1:6"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "15400:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15394:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15394:10:6"
															},
															"nodeType": "YulIf",
															"src": "15391:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15274:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15277:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "15283:3:6",
														"type": ""
													}
												],
												"src": "15243:191:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15546:71:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15568:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15576:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15564:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15564:14:6"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15580:29:6",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15557:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15557:53:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15557:53:6"
														}
													]
												},
												"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15538:6:6",
														"type": ""
													}
												],
												"src": "15440:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15769:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15779:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15845:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15850:2:6",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15786:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15786:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15779:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15951:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																	"nodeType": "YulIdentifier",
																	"src": "15862:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15862:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15862:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15964:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15975:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15980:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15971:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15971:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15964:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15757:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15765:3:6",
														"type": ""
													}
												],
												"src": "15623:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16166:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16176:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16188:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16199:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16184:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16184:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16176:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16223:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16234:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16219:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16219:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16242:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16248:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16238:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16238:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16212:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16212:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16212:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16268:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16402:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16276:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16276:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16268:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16146:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16161:4:6",
														"type": ""
													}
												],
												"src": "15995:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16526:114:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16548:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16556:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16544:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16544:14:6"
																	},
																	{
																		"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16560:34:6",
																		"type": "",
																		"value": "BEP20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16537:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16537:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16537:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16616:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16624:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16612:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16612:15:6"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16629:3:6",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16605:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16605:28:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16605:28:6"
														}
													]
												},
												"name": "store_literal_in_memory_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16518:6:6",
														"type": ""
													}
												],
												"src": "16420:220:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16792:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16802:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16868:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16873:2:6",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16809:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16809:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16802:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16974:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																	"nodeType": "YulIdentifier",
																	"src": "16885:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16885:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16885:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16987:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16998:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17003:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16994:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16994:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16987:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16780:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16788:3:6",
														"type": ""
													}
												],
												"src": "16646:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17189:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17199:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17211:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17222:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17207:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17207:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17199:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17246:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17257:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17242:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17242:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17265:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17271:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17261:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17261:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17235:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17235:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17235:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17291:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17425:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17299:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17299:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17291:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17169:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17184:4:6",
														"type": ""
													}
												],
												"src": "17018:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17549:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17571:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17579:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17567:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17567:14:6"
																	},
																	{
																		"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17583:33:6",
																		"type": "",
																		"value": "BEP20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17560:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17560:57:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17560:57:6"
														}
													]
												},
												"name": "store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17541:6:6",
														"type": ""
													}
												],
												"src": "17443:181:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17776:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17786:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17852:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17857:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17793:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17793:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17786:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17958:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																	"nodeType": "YulIdentifier",
																	"src": "17869:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17869:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17869:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17971:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17982:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17987:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17978:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17978:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17971:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17764:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17772:3:6",
														"type": ""
													}
												],
												"src": "17630:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18173:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18183:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18195:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18206:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18191:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18191:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18183:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18230:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18241:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18226:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18226:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18249:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18255:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18245:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18245:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18219:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18219:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18219:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18275:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18409:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18283:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "18283:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18275:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18153:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18168:4:6",
														"type": ""
													}
												],
												"src": "18002:419:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386(memPtr) {\n\n        mstore(add(memPtr, 0), \"this token is not mintable\")\n\n    }\n\n    function abi_encode_t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: addition overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: burn from the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B1B1DE6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0xB723B34E EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xD5BDA32D EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x41D JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x7B1B1DE6 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x32D JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x4BF365DF EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x299 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1CD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x439 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x179E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1859 JUMP JUMPDEST PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x4E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x18F9 JUMP JUMPDEST PUSH2 0x4F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1968 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x1859 JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x1983 JUMP JUMPDEST PUSH2 0x696 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH2 0x6B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x19B0 JUMP JUMPDEST PUSH2 0x6C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH2 0x712 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AB PUSH2 0x86A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C9 PUSH2 0x870 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x19EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E7 PUSH2 0x89A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x179E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x1983 JUMP JUMPDEST PUSH2 0x92C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x347 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x1859 JUMP JUMPDEST PUSH2 0xA2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x377 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x1859 JUMP JUMPDEST PUSH2 0xAFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x1A07 JUMP JUMPDEST PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x1983 JUMP JUMPDEST PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x407 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x1A47 JUMP JUMPDEST PUSH2 0xC2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x437 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x432 SWAP2 SWAP1 PUSH2 0x19B0 JUMP JUMPDEST PUSH2 0xCB3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x448 SWAP1 PUSH2 0x1AB6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x474 SWAP1 PUSH2 0x1AB6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x496 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DF PUSH2 0x4D8 PUSH2 0xE79 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xE81 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x500 DUP5 DUP5 DUP5 PUSH2 0x104A JUMP JUMPDEST PUSH2 0x5C1 DUP5 PUSH2 0x50C PUSH2 0xE79 JUMP JUMPDEST PUSH2 0x5BC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20DD PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x572 PUSH2 0xE79 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12D6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE81 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x68C PUSH2 0x5F0 PUSH2 0xE79 JUMP JUMPDEST DUP5 PUSH2 0x687 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x601 PUSH2 0xE79 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x133A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE81 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6A9 PUSH2 0x6A3 PUSH2 0xE79 JUMP JUMPDEST DUP4 PUSH2 0x1398 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x71A PUSH2 0xE79 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A0 SWAP1 PUSH2 0x1B33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x8A9 SWAP1 PUSH2 0x1AB6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8D5 SWAP1 PUSH2 0x1AB6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x922 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x922 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x905 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x936 PUSH2 0xE79 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BC SWAP1 PUSH2 0x1B33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA14 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0B SWAP1 PUSH2 0x1B9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA25 PUSH2 0xA1F PUSH2 0xE79 JUMP JUMPDEST DUP4 PUSH2 0x153B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF1 PUSH2 0xA3B PUSH2 0xE79 JUMP JUMPDEST DUP5 PUSH2 0xAEC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x212B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xA65 PUSH2 0xE79 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12D6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE81 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0F PUSH2 0xB08 PUSH2 0xE79 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x104A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB23 PUSH2 0xE79 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA9 SWAP1 PUSH2 0x1B33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xC01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF8 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC0B DUP3 DUP5 PUSH2 0x153B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0xC25 SWAP2 SWAP1 PUSH2 0x1BEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCBB PUSH2 0xE79 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD41 SWAP1 PUSH2 0x1B33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB0 SWAP1 PUSH2 0x1CA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE7 SWAP1 PUSH2 0x1D34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF56 SWAP1 PUSH2 0x1DC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x103D SWAP2 SWAP1 PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B0 SWAP1 PUSH2 0x1E58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1128 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111F SWAP1 PUSH2 0x1EEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1194 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2105 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12D6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1229 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x133A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x12C9 SWAP2 SWAP1 PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x131E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1315 SWAP2 SWAP1 PUSH2 0x179E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x132D SWAP2 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x1349 SWAP2 SWAP1 PUSH2 0x1F3E JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x138E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1385 SWAP1 PUSH2 0x1FBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1407 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13FE SWAP1 PUSH2 0x2050 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1473 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2150 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12D6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x14CB DUP2 PUSH1 0x3 SLOAD PUSH2 0x16C4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x152F SWAP2 SWAP1 PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15A1 SWAP1 PUSH2 0x20BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15BF DUP2 PUSH1 0x3 SLOAD PUSH2 0x133A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1617 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x133A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x16B8 SWAP2 SWAP1 PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1706 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x12D6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1748 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x172D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1770 DUP3 PUSH2 0x170E JUMP JUMPDEST PUSH2 0x177A DUP2 DUP6 PUSH2 0x1719 JUMP JUMPDEST SWAP4 POP PUSH2 0x178A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x172A JUMP JUMPDEST PUSH2 0x1793 DUP2 PUSH2 0x1754 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17B8 DUP2 DUP5 PUSH2 0x1765 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F0 DUP3 PUSH2 0x17C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1800 DUP2 PUSH2 0x17E5 JUMP JUMPDEST DUP2 EQ PUSH2 0x180B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x181D DUP2 PUSH2 0x17F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1836 DUP2 PUSH2 0x1823 JUMP JUMPDEST DUP2 EQ PUSH2 0x1841 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1853 DUP2 PUSH2 0x182D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1870 JUMPI PUSH2 0x186F PUSH2 0x17C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x187E DUP6 DUP3 DUP7 ADD PUSH2 0x180E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x188F DUP6 DUP3 DUP7 ADD PUSH2 0x1844 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18AE DUP2 PUSH2 0x1899 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18D8 DUP2 PUSH2 0x1823 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1912 JUMPI PUSH2 0x1911 PUSH2 0x17C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1920 DUP7 DUP3 DUP8 ADD PUSH2 0x180E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1931 DUP7 DUP3 DUP8 ADD PUSH2 0x180E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1942 DUP7 DUP3 DUP8 ADD PUSH2 0x1844 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1962 DUP2 PUSH2 0x194C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x197D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1959 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1999 JUMPI PUSH2 0x1998 PUSH2 0x17C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19A7 DUP5 DUP3 DUP6 ADD PUSH2 0x1844 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19C6 JUMPI PUSH2 0x19C5 PUSH2 0x17C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19D4 DUP5 DUP3 DUP6 ADD PUSH2 0x180E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19E6 DUP2 PUSH2 0x17E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A01 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A1E JUMPI PUSH2 0x1A1D PUSH2 0x17C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A2C DUP6 DUP3 DUP7 ADD PUSH2 0x1844 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A3D DUP6 DUP3 DUP7 ADD PUSH2 0x180E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A5E JUMPI PUSH2 0x1A5D PUSH2 0x17C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A6C DUP6 DUP3 DUP7 ADD PUSH2 0x180E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A7D DUP6 DUP3 DUP7 ADD PUSH2 0x180E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1ACE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1AE1 JUMPI PUSH2 0x1AE0 PUSH2 0x1A87 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B1D PUSH1 0x20 DUP4 PUSH2 0x1719 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B28 DUP3 PUSH2 0x1AE7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B4C DUP2 PUSH2 0x1B10 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7468697320746F6B656E206973206E6F74206D696E7461626C65000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B89 PUSH1 0x1A DUP4 PUSH2 0x1719 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B94 DUP3 PUSH2 0x1B53 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BB8 DUP2 PUSH2 0x1B7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BF9 DUP3 PUSH2 0x1823 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C04 DUP4 PUSH2 0x1823 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1C12 DUP2 PUSH2 0x1823 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1C29 JUMPI PUSH2 0x1C28 PUSH2 0x1BBF JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C8C PUSH1 0x26 DUP4 PUSH2 0x1719 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C97 DUP3 PUSH2 0x1C30 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CBB DUP2 PUSH2 0x1C7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D1E PUSH1 0x24 DUP4 PUSH2 0x1719 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D29 DUP3 PUSH2 0x1CC2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D4D DUP2 PUSH2 0x1D11 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB0 PUSH1 0x22 DUP4 PUSH2 0x1719 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DBB DUP3 PUSH2 0x1D54 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DDF DUP2 PUSH2 0x1DA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E42 PUSH1 0x25 DUP4 PUSH2 0x1719 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E4D DUP3 PUSH2 0x1DE6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E71 DUP2 PUSH2 0x1E35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED4 PUSH1 0x23 DUP4 PUSH2 0x1719 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EDF DUP3 PUSH2 0x1E78 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F03 DUP2 PUSH2 0x1EC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F15 DUP3 PUSH2 0x1823 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F20 DUP4 PUSH2 0x1823 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1F38 JUMPI PUSH2 0x1F37 PUSH2 0x1BBF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F49 DUP3 PUSH2 0x1823 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F54 DUP4 PUSH2 0x1823 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F6C JUMPI PUSH2 0x1F6B PUSH2 0x1BBF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA8 PUSH1 0x1B DUP4 PUSH2 0x1719 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FB3 DUP3 PUSH2 0x1F72 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FD7 DUP2 PUSH2 0x1F9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x203A PUSH1 0x21 DUP4 PUSH2 0x1719 JUMP JUMPDEST SWAP2 POP PUSH2 0x2045 DUP3 PUSH2 0x1FDE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2069 DUP2 PUSH2 0x202D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A6 PUSH1 0x1F DUP4 PUSH2 0x1719 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B1 DUP3 PUSH2 0x2070 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20D5 DUP2 PUSH2 0x2099 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726F42455032303A206275 PUSH19 0x6E20616D6F756E742065786365656473206261 PUSH13 0x616E6365A26469706673582212 KECCAK256 ADD LT 0xA9 PUSH19 0x91153D418DC892AA50F359BA38D4DEA447B7A6 SHL PUSH18 0xFB18965F821A8864736F6C63430008120033 ",
							"sourceMap": "216:11203:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3347:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4524:163;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3505:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5158:315;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3029:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5881:210;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7859:131;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2717:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3669:121;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2107:140;;;:::i;:::-;;636:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2869:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3188:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7107:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6593:261;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4002:169;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7548:218;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;977:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4233:145;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2402:236;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3347:94;3395:13;3428:5;3421:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3347:94;:::o;4524:163::-;4601:4;4618:39;4627:12;:10;:12::i;:::-;4641:7;4650:6;4618:8;:39::i;:::-;4675:4;4668:11;;4524:163;;;;:::o;3505:102::-;3560:7;3587:12;;3580:19;;3505:102;:::o;5158:315::-;5258:4;5275:36;5285:6;5293:9;5304:6;5275:9;:36::i;:::-;5322:121;5331:6;5339:12;:10;:12::i;:::-;5353:89;5391:6;5353:89;;;;;;;;;;;;;;;;;:11;:19;5365:6;5353:19;;;;;;;;;;;;;;;:33;5373:12;:10;:12::i;:::-;5353:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5322:8;:121::i;:::-;5461:4;5454:11;;5158:315;;;;;:::o;3029:94::-;3081:5;3106:9;;;;;;;;;;;3099:16;;3029:94;:::o;5881:210::-;5961:4;5978:83;5987:12;:10;:12::i;:::-;6001:7;6010:50;6049:10;6010:11;:25;6022:12;:10;:12::i;:::-;6010:25;;;;;;;;;;;;;;;:34;6036:7;6010:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5978:8;:83::i;:::-;6079:4;6072:11;;5881:210;;;;:::o;7859:131::-;7916:4;7933:27;7939:12;:10;:12::i;:::-;7953:6;7933:5;:27::i;:::-;7978:4;7971:11;;7859:131;;;:::o;2717:84::-;2760:4;2784:9;;;;;;;;;;;2777:16;;2717:84;:::o;3669:121::-;3737:7;3764:9;:18;3774:7;3764:18;;;;;;;;;;;;;;;;3757:25;;3669:121;;;:::o;2107:140::-;1258:12;:10;:12::i;:::-;1248:22;;:6;;;;;;;;;;;:22;;;1240:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2206:1:::1;2169:40;;2190:6;;;;;;;;;;;2169:40;;;;;;;;;;;;2237:1;2220:6;;:19;;;;;;;;;;;;;;;;;;2107:140::o:0;636:28::-;;;;:::o;2869:93::-;2921:7;2948:6;;;;;;;;;;;2941:13;;2869:93;:::o;3188:98::-;3238:13;3271:7;3264:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3188:98;:::o;7107:189::-;7163:4;1258:12;:10;:12::i;:::-;1248:22;;:6;;;;;;;;;;;:22;;;1240:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;7188:9:::1;;;;;;;;;;;7180:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;7239:27;7245:12;:10;:12::i;:::-;7259:6;7239:5;:27::i;:::-;7284:4;7277:11;;7107:189:::0;;;:::o;6593:261::-;6678:4;6695:129;6704:12;:10;:12::i;:::-;6718:7;6727:96;6766:15;6727:96;;;;;;;;;;;;;;;;;:11;:25;6739:12;:10;:12::i;:::-;6727:25;;;;;;;;;;;;;;;:34;6753:7;6727:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6695:8;:129::i;:::-;6842:4;6835:11;;6593:261;;;;:::o;4002:169::-;4082:4;4099:42;4109:12;:10;:12::i;:::-;4123:9;4134:6;4099:9;:42::i;:::-;4159:4;4152:11;;4002:169;;;;:::o;7548:218::-;7636:4;1258:12;:10;:12::i;:::-;1248:22;;:6;;;;;;;;;;;:22;;;1240:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;7661:9:::1;;;;;;;;;;;7653:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;7712:24;7718:9;7729:6;7712:5;:24::i;:::-;7754:4;7747:11;;7548:218:::0;;;;:::o;977:136::-;1041:16;1092:13;;1077:12;:28;;;;:::i;:::-;1070:35;;977:136;;;:::o;4233:145::-;4316:7;4343:11;:18;4355:5;4343:18;;;;;;;;;;;;;;;:27;4362:7;4343:27;;;;;;;;;;;;;;;;4336:34;;4233:145;;;;:::o;2402:236::-;1258:12;:10;:12::i;:::-;1248:22;;:6;;;;;;;;;;;:22;;;1240:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2503:1:::1;2483:22;;:8;:22;;::::0;2475:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2593:8;2564:38;;2585:6;;;;;;;;;;;2564:38;;;;;;;;;;;;2622:8;2613:6;;:17;;;;;;;;;;;;;;;;;;2402:236:::0;:::o;619:98:1:-;672:7;699:10;692:17;;619:98;:::o;10660:338:0:-;10771:1;10754:19;;:5;:19;;;10746:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10852:1;10833:21;;:7;:21;;;10825:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10936:6;10906:11;:18;10918:5;10906:18;;;;;;;;;;;;;;;:27;10925:7;10906:27;;;;;;;;;;;;;;;:36;;;;10974:7;10958:32;;10967:5;10958:32;;;10983:6;10958:32;;;;;;:::i;:::-;;;;;;;;10660:338;;;:::o;8480:471::-;8596:1;8578:20;;:6;:20;;;8570:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;8680:1;8659:23;;:9;:23;;;8651:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;8755;8777:6;8755:71;;;;;;;;;;;;;;;;;:9;:17;8765:6;8755:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;8735:9;:17;8745:6;8735:17;;;;;;;;;;;;;;;:91;;;;8860:32;8885:6;8860:9;:20;8870:9;8860:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;8837:9;:20;8847:9;8837:20;;;;;;;;;;;;;;;:55;;;;8925:9;8908:35;;8917:6;8908:35;;;8936:6;8908:35;;;;;;:::i;:::-;;;;;;;;8480:471;;;:::o;1817:192:5:-;1903:7;1936:1;1931;:6;;1939:12;1923:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1963:9;1979:1;1975;:5;;;;:::i;:::-;1963:17;;2000:1;1993:8;;;1817:192;;;;;:::o;914:181::-;972:7;992:9;1008:1;1004;:5;;;;:::i;:::-;992:17;;1033:1;1028;:6;;1020:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;1086:1;1079:8;;;914:181;;;;:::o;9872:348:0:-;9967:1;9948:21;;:7;:21;;;9940:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;10041:68;10064:6;10041:68;;;;;;;;;;;;;;;;;:9;:18;10051:7;10041:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;10020:9;:18;10030:7;10020:18;;;;;;;;;;;;;;;:89;;;;10135:24;10152:6;10135:12;;:16;;:24;;;;:::i;:::-;10120:12;:39;;;;10201:1;10175:37;;10184:7;10175:37;;;10205:6;10175:37;;;;;;:::i;:::-;;;;;;;;9872:348;;:::o;9232:308::-;9327:1;9308:21;;:7;:21;;;9300:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;9393:24;9410:6;9393:12;;:16;;:24;;;;:::i;:::-;9378:12;:39;;;;9449:30;9472:6;9449:9;:18;9459:7;9449:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;9428:9;:18;9438:7;9428:18;;;;;;;;;;;;;;;:51;;;;9516:7;9495:37;;9512:1;9495:37;;;9525:6;9495:37;;;;;;:::i;:::-;;;;;;;;9232:308;;:::o;1378:136:5:-;1436:7;1463:43;1467:1;1470;1463:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1456:50;;1378:136;;;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:::-;5247:6;5296:2;5284:9;5275:7;5271:23;5267:32;5264:119;;;5302:79;;:::i;:::-;5264:119;5422:1;5447:53;5492:7;5483:6;5472:9;5468:22;5447:53;:::i;:::-;5437:63;;5393:117;5188:329;;;;:::o;5523:118::-;5610:24;5628:5;5610:24;:::i;:::-;5605:3;5598:37;5523:118;;:::o;5647:222::-;5740:4;5778:2;5767:9;5763:18;5755:26;;5791:71;5859:1;5848:9;5844:17;5835:6;5791:71;:::i;:::-;5647:222;;;;:::o;5875:474::-;5943:6;5951;6000:2;5988:9;5979:7;5975:23;5971:32;5968:119;;;6006:79;;:::i;:::-;5968:119;6126:1;6151:53;6196:7;6187:6;6176:9;6172:22;6151:53;:::i;:::-;6141:63;;6097:117;6253:2;6279:53;6324:7;6315:6;6304:9;6300:22;6279:53;:::i;:::-;6269:63;;6224:118;5875:474;;;;;:::o;6355:::-;6423:6;6431;6480:2;6468:9;6459:7;6455:23;6451:32;6448:119;;;6486:79;;:::i;:::-;6448:119;6606:1;6631:53;6676:7;6667:6;6656:9;6652:22;6631:53;:::i;:::-;6621:63;;6577:117;6733:2;6759:53;6804:7;6795:6;6784:9;6780:22;6759:53;:::i;:::-;6749:63;;6704:118;6355:474;;;;;:::o;6835:180::-;6883:77;6880:1;6873:88;6980:4;6977:1;6970:15;7004:4;7001:1;6994:15;7021:320;7065:6;7102:1;7096:4;7092:12;7082:22;;7149:1;7143:4;7139:12;7170:18;7160:81;;7226:4;7218:6;7214:17;7204:27;;7160:81;7288:2;7280:6;7277:14;7257:18;7254:38;7251:84;;7307:18;;:::i;:::-;7251:84;7072:269;7021:320;;;:::o;7347:182::-;7487:34;7483:1;7475:6;7471:14;7464:58;7347:182;:::o;7535:366::-;7677:3;7698:67;7762:2;7757:3;7698:67;:::i;:::-;7691:74;;7774:93;7863:3;7774:93;:::i;:::-;7892:2;7887:3;7883:12;7876:19;;7535:366;;;:::o;7907:419::-;8073:4;8111:2;8100:9;8096:18;8088:26;;8160:9;8154:4;8150:20;8146:1;8135:9;8131:17;8124:47;8188:131;8314:4;8188:131;:::i;:::-;8180:139;;7907:419;;;:::o;8332:176::-;8472:28;8468:1;8460:6;8456:14;8449:52;8332:176;:::o;8514:366::-;8656:3;8677:67;8741:2;8736:3;8677:67;:::i;:::-;8670:74;;8753:93;8842:3;8753:93;:::i;:::-;8871:2;8866:3;8862:12;8855:19;;8514:366;;;:::o;8886:419::-;9052:4;9090:2;9079:9;9075:18;9067:26;;9139:9;9133:4;9129:20;9125:1;9114:9;9110:17;9103:47;9167:131;9293:4;9167:131;:::i;:::-;9159:139;;8886:419;;;:::o;9311:180::-;9359:77;9356:1;9349:88;9456:4;9453:1;9446:15;9480:4;9477:1;9470:15;9497:410;9537:7;9560:20;9578:1;9560:20;:::i;:::-;9555:25;;9594:20;9612:1;9594:20;:::i;:::-;9589:25;;9649:1;9646;9642:9;9671:30;9689:11;9671:30;:::i;:::-;9660:41;;9850:1;9841:7;9837:15;9834:1;9831:22;9811:1;9804:9;9784:83;9761:139;;9880:18;;:::i;:::-;9761:139;9545:362;9497:410;;;;:::o;9913:225::-;10053:34;10049:1;10041:6;10037:14;10030:58;10122:8;10117:2;10109:6;10105:15;10098:33;9913:225;:::o;10144:366::-;10286:3;10307:67;10371:2;10366:3;10307:67;:::i;:::-;10300:74;;10383:93;10472:3;10383:93;:::i;:::-;10501:2;10496:3;10492:12;10485:19;;10144:366;;;:::o;10516:419::-;10682:4;10720:2;10709:9;10705:18;10697:26;;10769:9;10763:4;10759:20;10755:1;10744:9;10740:17;10733:47;10797:131;10923:4;10797:131;:::i;:::-;10789:139;;10516:419;;;:::o;10941:223::-;11081:34;11077:1;11069:6;11065:14;11058:58;11150:6;11145:2;11137:6;11133:15;11126:31;10941:223;:::o;11170:366::-;11312:3;11333:67;11397:2;11392:3;11333:67;:::i;:::-;11326:74;;11409:93;11498:3;11409:93;:::i;:::-;11527:2;11522:3;11518:12;11511:19;;11170:366;;;:::o;11542:419::-;11708:4;11746:2;11735:9;11731:18;11723:26;;11795:9;11789:4;11785:20;11781:1;11770:9;11766:17;11759:47;11823:131;11949:4;11823:131;:::i;:::-;11815:139;;11542:419;;;:::o;11967:221::-;12107:34;12103:1;12095:6;12091:14;12084:58;12176:4;12171:2;12163:6;12159:15;12152:29;11967:221;:::o;12194:366::-;12336:3;12357:67;12421:2;12416:3;12357:67;:::i;:::-;12350:74;;12433:93;12522:3;12433:93;:::i;:::-;12551:2;12546:3;12542:12;12535:19;;12194:366;;;:::o;12566:419::-;12732:4;12770:2;12759:9;12755:18;12747:26;;12819:9;12813:4;12809:20;12805:1;12794:9;12790:17;12783:47;12847:131;12973:4;12847:131;:::i;:::-;12839:139;;12566:419;;;:::o;12991:224::-;13131:34;13127:1;13119:6;13115:14;13108:58;13200:7;13195:2;13187:6;13183:15;13176:32;12991:224;:::o;13221:366::-;13363:3;13384:67;13448:2;13443:3;13384:67;:::i;:::-;13377:74;;13460:93;13549:3;13460:93;:::i;:::-;13578:2;13573:3;13569:12;13562:19;;13221:366;;;:::o;13593:419::-;13759:4;13797:2;13786:9;13782:18;13774:26;;13846:9;13840:4;13836:20;13832:1;13821:9;13817:17;13810:47;13874:131;14000:4;13874:131;:::i;:::-;13866:139;;13593:419;;;:::o;14018:222::-;14158:34;14154:1;14146:6;14142:14;14135:58;14227:5;14222:2;14214:6;14210:15;14203:30;14018:222;:::o;14246:366::-;14388:3;14409:67;14473:2;14468:3;14409:67;:::i;:::-;14402:74;;14485:93;14574:3;14485:93;:::i;:::-;14603:2;14598:3;14594:12;14587:19;;14246:366;;;:::o;14618:419::-;14784:4;14822:2;14811:9;14807:18;14799:26;;14871:9;14865:4;14861:20;14857:1;14846:9;14842:17;14835:47;14899:131;15025:4;14899:131;:::i;:::-;14891:139;;14618:419;;;:::o;15043:194::-;15083:4;15103:20;15121:1;15103:20;:::i;:::-;15098:25;;15137:20;15155:1;15137:20;:::i;:::-;15132:25;;15181:1;15178;15174:9;15166:17;;15205:1;15199:4;15196:11;15193:37;;;15210:18;;:::i;:::-;15193:37;15043:194;;;;:::o;15243:191::-;15283:3;15302:20;15320:1;15302:20;:::i;:::-;15297:25;;15336:20;15354:1;15336:20;:::i;:::-;15331:25;;15379:1;15376;15372:9;15365:16;;15400:3;15397:1;15394:10;15391:36;;;15407:18;;:::i;:::-;15391:36;15243:191;;;;:::o;15440:177::-;15580:29;15576:1;15568:6;15564:14;15557:53;15440:177;:::o;15623:366::-;15765:3;15786:67;15850:2;15845:3;15786:67;:::i;:::-;15779:74;;15862:93;15951:3;15862:93;:::i;:::-;15980:2;15975:3;15971:12;15964:19;;15623:366;;;:::o;15995:419::-;16161:4;16199:2;16188:9;16184:18;16176:26;;16248:9;16242:4;16238:20;16234:1;16223:9;16219:17;16212:47;16276:131;16402:4;16276:131;:::i;:::-;16268:139;;15995:419;;;:::o;16420:220::-;16560:34;16556:1;16548:6;16544:14;16537:58;16629:3;16624:2;16616:6;16612:15;16605:28;16420:220;:::o;16646:366::-;16788:3;16809:67;16873:2;16868:3;16809:67;:::i;:::-;16802:74;;16885:93;16974:3;16885:93;:::i;:::-;17003:2;16998:3;16994:12;16987:19;;16646:366;;;:::o;17018:419::-;17184:4;17222:2;17211:9;17207:18;17199:26;;17271:9;17265:4;17261:20;17257:1;17246:9;17242:17;17235:47;17299:131;17425:4;17299:131;:::i;:::-;17291:139;;17018:419;;;:::o;17443:181::-;17583:33;17579:1;17571:6;17567:14;17560:57;17443:181;:::o;17630:366::-;17772:3;17793:67;17857:2;17852:3;17793:67;:::i;:::-;17786:74;;17869:93;17958:3;17869:93;:::i;:::-;17987:2;17982:3;17978:12;17971:19;;17630:366;;;:::o;18002:419::-;18168:4;18206:2;18195:9;18191:18;18183:26;;18255:9;18249:4;18245:20;18241:1;18230:9;18226:17;18219:47;18283:131;18409:4;18283:131;:::i;:::-;18275:139;;18002:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1723000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2930",
								"burn(uint256)": "infinite",
								"decimals()": "2591",
								"decreaseAllowance(address,uint256)": "infinite",
								"getETHValue(uint256)": "infinite",
								"getOwner()": "2567",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"mintTo(uint256,address)": "infinite",
								"mintable()": "2596",
								"name()": "infinite",
								"pricePerToken()": "2452",
								"renounceOwnership()": "30408",
								"symbol()": "infinite",
								"totalSupply()": "2505",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "30753"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 11419,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 216,
									"end": 11419,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 216,
									"end": 11419,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 493,
									"end": 520,
									"name": "PUSH",
									"source": 0,
									"value": "52B7D2DCC80CD2E4000000"
								},
								{
									"begin": 462,
									"end": 520,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 462,
									"end": 520,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 527,
									"end": 556,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 527,
									"end": 556,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 527,
									"end": 556,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 527,
									"end": 556,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 527,
									"end": 556,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 527,
									"end": 556,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 527,
									"end": 556,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 527,
									"end": 556,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 527,
									"end": 556,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 527,
									"end": 556,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 527,
									"end": 556,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 527,
									"end": 556,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 527,
									"end": 556,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 527,
									"end": 556,
									"name": "PUSH",
									"source": 0,
									"value": "4D47415300000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 527,
									"end": 556,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 527,
									"end": 556,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 527,
									"end": 556,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 527,
									"end": 556,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 527,
									"end": 556,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 527,
									"end": 556,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 527,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 527,
									"end": 556,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 527,
									"end": 556,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 527,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 527,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 527,
									"end": 556,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 527,
									"end": 556,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 527,
									"end": 556,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 563,
									"end": 594,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 563,
									"end": 594,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 563,
									"end": 594,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 563,
									"end": 594,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 563,
									"end": 594,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 563,
									"end": 594,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 563,
									"end": 594,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 563,
									"end": 594,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 563,
									"end": 594,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 563,
									"end": 594,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 563,
									"end": 594,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 563,
									"end": 594,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 563,
									"end": 594,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 563,
									"end": 594,
									"name": "PUSH",
									"source": 0,
									"value": "4D47415300000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 563,
									"end": 594,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 563,
									"end": 594,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 563,
									"end": 594,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 563,
									"end": 594,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 563,
									"end": 594,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 563,
									"end": 594,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 563,
									"end": 594,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 563,
									"end": 594,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 563,
									"end": 594,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 563,
									"end": 594,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 563,
									"end": 594,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 563,
									"end": 594,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 563,
									"end": 594,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 563,
									"end": 594,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 627,
									"end": 629,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 601,
									"end": 629,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 601,
									"end": 629,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 601,
									"end": 629,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 601,
									"end": 629,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 601,
									"end": 629,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 601,
									"end": 629,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 601,
									"end": 629,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 601,
									"end": 629,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 601,
									"end": 629,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 601,
									"end": 629,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 601,
									"end": 629,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 601,
									"end": 629,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 601,
									"end": 629,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 601,
									"end": 629,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 601,
									"end": 629,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 601,
									"end": 629,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 601,
									"end": 629,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 601,
									"end": 629,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 601,
									"end": 629,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 601,
									"end": 629,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 699,
									"end": 741,
									"name": "PUSH",
									"source": 0,
									"value": "CED67D1115F1503E6DE2464C378F446B2BD8298C"
								},
								{
									"begin": 674,
									"end": 741,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 674,
									"end": 741,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 674,
									"end": 741,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 674,
									"end": 741,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 674,
									"end": 741,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 674,
									"end": 741,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 674,
									"end": 741,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 674,
									"end": 741,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 674,
									"end": 741,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 674,
									"end": 741,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 674,
									"end": 741,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 674,
									"end": 741,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 674,
									"end": 741,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 674,
									"end": 741,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 674,
									"end": 741,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 674,
									"end": 741,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 674,
									"end": 741,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 674,
									"end": 741,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 674,
									"end": 741,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 674,
									"end": 741,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 871,
									"end": 969,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 871,
									"end": 969,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 871,
									"end": 969,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 871,
									"end": 969,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 871,
									"end": 969,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 871,
									"end": 969,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 871,
									"end": 969,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 871,
									"end": 969,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 871,
									"end": 969,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 871,
									"end": 969,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 871,
									"end": 969,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 921,
									"end": 933,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 921,
									"end": 933,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 897,
									"end": 906,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 897,
									"end": 918,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 907,
									"end": 917,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 897,
									"end": 918,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 897,
									"end": 918,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 897,
									"end": 918,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 897,
									"end": 918,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 897,
									"end": 918,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 897,
									"end": 918,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 897,
									"end": 918,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 897,
									"end": 918,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 897,
									"end": 918,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 897,
									"end": 918,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 897,
									"end": 918,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 897,
									"end": 918,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 897,
									"end": 918,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 897,
									"end": 918,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 897,
									"end": 918,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 897,
									"end": 933,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 897,
									"end": 933,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 897,
									"end": 933,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 897,
									"end": 933,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 960,
									"end": 961,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 944,
									"end": 957,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 944,
									"end": 961,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 944,
									"end": 961,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 944,
									"end": 961,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 944,
									"end": 961,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 216,
									"end": 11419,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 216,
									"end": 11419,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 216,
									"end": 11419,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 216,
									"end": 11419,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 216,
									"end": 11419,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 11419,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 216,
									"end": 11419,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 11419,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 11419,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 216,
									"end": 11419,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 11419,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200110a97291153d418dc892aa50f359ba38d4dea447b7a61b71fb18965f821a8864736f6c63430008120033",
									".code": [
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "7B1B1DE6"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "B723B34E"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "D5BDA32D"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "7B1B1DE6"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "A0712D68"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "4BF365DF"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 11419,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3441,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3347,
											"end": 3441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3347,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3347,
											"end": 3441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3441,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3347,
											"end": 3441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3441,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3347,
											"end": 3441,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3347,
											"end": 3441,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3347,
											"end": 3441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3441,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3347,
											"end": 3441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3441,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3347,
											"end": 3441,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3441,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3441,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3441,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4524,
											"end": 4687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4524,
											"end": 4687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4524,
											"end": 4687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3607,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3505,
											"end": 3607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3505,
											"end": 3607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3505,
											"end": 3607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3607,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3505,
											"end": 3607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3505,
											"end": 3607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3505,
											"end": 3607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3505,
											"end": 3607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3607,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3505,
											"end": 3607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3505,
											"end": 3607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3607,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3607,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5158,
											"end": 5473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5158,
											"end": 5473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5158,
											"end": 5473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3123,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3029,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3029,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3029,
											"end": 3123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3123,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3029,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3029,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3029,
											"end": 3123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3029,
											"end": 3123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3123,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3029,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3029,
											"end": 3123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3123,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3123,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3123,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5881,
											"end": 6091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5881,
											"end": 6091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5881,
											"end": 6091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 7859,
											"end": 7990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 7859,
											"end": 7990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 7859,
											"end": 7990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2801,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2717,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2717,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2717,
											"end": 2801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2801,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2717,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2717,
											"end": 2801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2717,
											"end": 2801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2801,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2717,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2801,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2801,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3669,
											"end": 3790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3669,
											"end": 3790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3669,
											"end": 3790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2107,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2107,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2107,
											"end": 2247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2107,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2247,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 636,
											"end": 664,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 636,
											"end": 664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 636,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 636,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 636,
											"end": 664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 636,
											"end": 664,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 636,
											"end": 664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 636,
											"end": 664,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 636,
											"end": 664,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 636,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 636,
											"end": 664,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 636,
											"end": 664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 636,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 636,
											"end": 664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 636,
											"end": 664,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 636,
											"end": 664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 636,
											"end": 664,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 636,
											"end": 664,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 636,
											"end": 664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 636,
											"end": 664,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 636,
											"end": 664,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 636,
											"end": 664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 636,
											"end": 664,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2869,
											"end": 2962,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2869,
											"end": 2962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2869,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2869,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2869,
											"end": 2962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2869,
											"end": 2962,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2869,
											"end": 2962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2869,
											"end": 2962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2869,
											"end": 2962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2869,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2869,
											"end": 2962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2869,
											"end": 2962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2869,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2869,
											"end": 2962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2869,
											"end": 2962,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2869,
											"end": 2962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2869,
											"end": 2962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2869,
											"end": 2962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2869,
											"end": 2962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2869,
											"end": 2962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2869,
											"end": 2962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2869,
											"end": 2962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2869,
											"end": 2962,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3286,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3188,
											"end": 3286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3188,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3188,
											"end": 3286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3286,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3188,
											"end": 3286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3188,
											"end": 3286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3188,
											"end": 3286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3188,
											"end": 3286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3286,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3188,
											"end": 3286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3188,
											"end": 3286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 7107,
											"end": 7296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7107,
											"end": 7296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 7107,
											"end": 7296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6593,
											"end": 6854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6593,
											"end": 6854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 6593,
											"end": 6854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4002,
											"end": 4171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4002,
											"end": 4171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4002,
											"end": 4171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 7548,
											"end": 7766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 7548,
											"end": 7766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 7548,
											"end": 7766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 977,
											"end": 1113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 977,
											"end": 1113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 977,
											"end": 1113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4233,
											"end": 4378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4233,
											"end": 4378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4233,
											"end": 4378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2638,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2402,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2402,
											"end": 2638,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2402,
											"end": 2638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2638,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2638,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2402,
											"end": 2638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2402,
											"end": 2638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2638,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2402,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2402,
											"end": 2638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2638,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2402,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2638,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3441,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3347,
											"end": 3441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3395,
											"end": 3408,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3428,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3421,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3421,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4601,
											"end": 4605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4627,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4627,
											"end": 4637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 4627,
											"end": 4639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4627,
											"end": 4639,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4627,
											"end": 4639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4648,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4650,
											"end": 4656,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4618,
											"end": 4657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4657,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4618,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4668,
											"end": 4679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4668,
											"end": 4679,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4524,
											"end": 4687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3607,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3505,
											"end": 3607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3560,
											"end": 3567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3587,
											"end": 3599,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3587,
											"end": 3599,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3505,
											"end": 3607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5258,
											"end": 5262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5275,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 5285,
											"end": 5291,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5293,
											"end": 5302,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5310,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5275,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 5275,
											"end": 5311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5275,
											"end": 5311,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 5275,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5322,
											"end": 5443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 5331,
											"end": 5337,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5339,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 5339,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 5339,
											"end": 5351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5339,
											"end": 5351,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 5339,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 5391,
											"end": 5397,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5442,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5353,
											"end": 5442,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5442,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5353,
											"end": 5442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5442,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5353,
											"end": 5442,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5442,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5353,
											"end": 5442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5442,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5442,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5353,
											"end": 5442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5442,
											"name": "PUSH data",
											"source": 0,
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 5353,
											"end": 5442,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5353,
											"end": 5442,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5442,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5364,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5353,
											"end": 5372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5365,
											"end": 5371,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5372,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5353,
											"end": 5372,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5372,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5353,
											"end": 5372,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5372,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5372,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5353,
											"end": 5372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5372,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5372,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5353,
											"end": 5372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5353,
											"end": 5372,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5373,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 5373,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 5373,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5373,
											"end": 5385,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 5373,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5353,
											"end": 5386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5353,
											"end": 5386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5353,
											"end": 5386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5353,
											"end": 5386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5353,
											"end": 5386,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5386,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 5353,
											"end": 5390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5442,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5442,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5442,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5353,
											"end": 5442,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5353,
											"end": 5442,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 5353,
											"end": 5442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5322,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 5322,
											"end": 5443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5322,
											"end": 5443,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 5322,
											"end": 5443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5461,
											"end": 5465,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5454,
											"end": 5465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5158,
											"end": 5473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3123,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3029,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3086,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3115,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3106,
											"end": 3115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3106,
											"end": 3115,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3106,
											"end": 3115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3106,
											"end": 3115,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3106,
											"end": 3115,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3106,
											"end": 3115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3106,
											"end": 3115,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3106,
											"end": 3115,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3106,
											"end": 3115,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5978,
											"end": 6061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 5987,
											"end": 5999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 5987,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 5987,
											"end": 5999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 5999,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 5987,
											"end": 5999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6001,
											"end": 6008,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6021,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6010,
											"end": 6035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6022,
											"end": 6034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6022,
											"end": 6032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 6022,
											"end": 6034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6022,
											"end": 6034,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6022,
											"end": 6034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6035,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6010,
											"end": 6035,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6035,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6010,
											"end": 6035,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6035,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6035,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6010,
											"end": 6035,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6035,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6035,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6010,
											"end": 6035,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6010,
											"end": 6035,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6036,
											"end": 6043,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6044,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6010,
											"end": 6044,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6044,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6010,
											"end": 6044,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6044,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6010,
											"end": 6044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6044,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6010,
											"end": 6044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6010,
											"end": 6044,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6044,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6010,
											"end": 6048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6060,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6060,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6010,
											"end": 6060,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6060,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6010,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5978,
											"end": 5986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 5978,
											"end": 6061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5978,
											"end": 6061,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 5978,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6079,
											"end": 6083,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6072,
											"end": 6083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 6091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 6091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7916,
											"end": 7920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7933,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 7939,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 7939,
											"end": 7949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 7939,
											"end": 7951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7939,
											"end": 7951,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 7939,
											"end": 7951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7953,
											"end": 7959,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 7938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 7933,
											"end": 7960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 7960,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 7933,
											"end": 7960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7978,
											"end": 7982,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7971,
											"end": 7982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7971,
											"end": 7982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2801,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2717,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2784,
											"end": 2793,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2784,
											"end": 2793,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2784,
											"end": 2793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2784,
											"end": 2793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2784,
											"end": 2793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2784,
											"end": 2793,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2784,
											"end": 2793,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2784,
											"end": 2793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2784,
											"end": 2793,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2784,
											"end": 2793,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2784,
											"end": 2793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 3744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3773,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3764,
											"end": 3782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3774,
											"end": 3781,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3782,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3764,
											"end": 3782,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3782,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3764,
											"end": 3782,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3782,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3764,
											"end": 3782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3782,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3764,
											"end": 3782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3764,
											"end": 3782,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3782,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3757,
											"end": 3782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3757,
											"end": 3782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3669,
											"end": 3790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2107,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1258,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1258,
											"end": 1270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1270,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1258,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1270,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1270,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1270,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1240,
											"end": 1307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2209,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2190,
											"end": 2196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2190,
											"end": 2196,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2196,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2196,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2190,
											"end": 2196,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2196,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2196,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2190,
											"end": 2196,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2209,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2169,
											"end": 2209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2209,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2209,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2209,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2209,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2209,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2209,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2209,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2220,
											"end": 2226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2220,
											"end": 2239,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2239,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2239,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2239,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2220,
											"end": 2239,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2239,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2239,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2239,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2239,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2220,
											"end": 2239,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2239,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2239,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2239,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2239,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2239,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 636,
											"end": 664,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 636,
											"end": 664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 636,
											"end": 664,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 636,
											"end": 664,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 636,
											"end": 664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 636,
											"end": 664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2869,
											"end": 2962,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2869,
											"end": 2962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2921,
											"end": 2928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2948,
											"end": 2954,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2948,
											"end": 2954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2948,
											"end": 2954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2954,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2954,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2948,
											"end": 2954,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2954,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2954,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2948,
											"end": 2954,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2941,
											"end": 2954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2941,
											"end": 2954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2869,
											"end": 2962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2869,
											"end": 2962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3286,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3188,
											"end": 3286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3238,
											"end": 3251,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3271,
											"end": 3278,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3264,
											"end": 3278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3264,
											"end": 3278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7163,
											"end": 7167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1258,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1258,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1258,
											"end": 1270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1270,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1258,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1270,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1270,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1270,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1240,
											"end": 1307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7188,
											"end": 7197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7188,
											"end": 7197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7188,
											"end": 7197,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7188,
											"end": 7197,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7188,
											"end": 7197,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7188,
											"end": 7197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7188,
											"end": 7197,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7188,
											"end": 7197,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7188,
											"end": 7197,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7188,
											"end": 7197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7188,
											"end": 7197,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7180,
											"end": 7228,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 7180,
											"end": 7228,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7180,
											"end": 7228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7180,
											"end": 7228,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7180,
											"end": 7228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7180,
											"end": 7228,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7180,
											"end": 7228,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7180,
											"end": 7228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7180,
											"end": 7228,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7180,
											"end": 7228,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 7180,
											"end": 7228,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7180,
											"end": 7228,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 7180,
											"end": 7228,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7180,
											"end": 7228,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 7180,
											"end": 7228,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7180,
											"end": 7228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7180,
											"end": 7228,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7180,
											"end": 7228,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7180,
											"end": 7228,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7180,
											"end": 7228,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7180,
											"end": 7228,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7180,
											"end": 7228,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7180,
											"end": 7228,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 7180,
											"end": 7228,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7239,
											"end": 7266,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 7245,
											"end": 7257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 7245,
											"end": 7255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 7245,
											"end": 7257,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7245,
											"end": 7257,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 7245,
											"end": 7257,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7259,
											"end": 7265,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7239,
											"end": 7244,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7239,
											"end": 7266,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7239,
											"end": 7266,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 7239,
											"end": 7266,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7284,
											"end": 7288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7277,
											"end": 7288,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7288,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6678,
											"end": 6682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6695,
											"end": 6824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 6704,
											"end": 6716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 6704,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 6704,
											"end": 6716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6704,
											"end": 6716,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 6704,
											"end": 6716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6725,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 6766,
											"end": 6781,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6727,
											"end": 6823,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6823,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6727,
											"end": 6823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6727,
											"end": 6823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6823,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6727,
											"end": 6823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6823,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6727,
											"end": 6823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6823,
											"name": "PUSH data",
											"source": 0,
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 6727,
											"end": 6823,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6727,
											"end": 6823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6823,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6738,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6727,
											"end": 6752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6739,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 6739,
											"end": 6749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 6739,
											"end": 6751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6739,
											"end": 6751,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 6739,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6752,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6727,
											"end": 6752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6752,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6727,
											"end": 6752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6727,
											"end": 6752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6727,
											"end": 6752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6727,
											"end": 6752,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6753,
											"end": 6760,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6761,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6727,
											"end": 6761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6761,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6727,
											"end": 6761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6761,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6727,
											"end": 6761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6761,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6727,
											"end": 6761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6727,
											"end": 6761,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6761,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 6727,
											"end": 6765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6823,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6823,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6727,
											"end": 6823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6823,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 6727,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6695,
											"end": 6703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 6695,
											"end": 6824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6695,
											"end": 6824,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 6695,
											"end": 6824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6846,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6835,
											"end": 6846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6835,
											"end": 6846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6854,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4082,
											"end": 4086,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4099,
											"end": 4141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 4109,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 4109,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 4109,
											"end": 4121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4109,
											"end": 4121,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 4109,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4132,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4134,
											"end": 4140,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4099,
											"end": 4108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4099,
											"end": 4141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4099,
											"end": 4141,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 4099,
											"end": 4141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4159,
											"end": 4163,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4152,
											"end": 4163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4152,
											"end": 4163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7636,
											"end": 7640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1258,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1258,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1258,
											"end": 1270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1270,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1258,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1270,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1270,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1270,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1240,
											"end": 1307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7661,
											"end": 7670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7661,
											"end": 7670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7661,
											"end": 7670,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7661,
											"end": 7670,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7661,
											"end": 7670,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7661,
											"end": 7670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7661,
											"end": 7670,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7661,
											"end": 7670,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7661,
											"end": 7670,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7661,
											"end": 7670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7661,
											"end": 7670,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7701,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 7653,
											"end": 7701,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7653,
											"end": 7701,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7653,
											"end": 7701,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7701,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7653,
											"end": 7701,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7701,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 7653,
											"end": 7701,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7701,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 7653,
											"end": 7701,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7701,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 7653,
											"end": 7701,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7653,
											"end": 7701,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7701,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7701,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7701,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7701,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7701,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7701,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 7653,
											"end": 7701,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7712,
											"end": 7736,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 7718,
											"end": 7727,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7729,
											"end": 7735,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7712,
											"end": 7717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7712,
											"end": 7736,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7712,
											"end": 7736,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 7712,
											"end": 7736,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7754,
											"end": 7758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7747,
											"end": 7758,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7747,
											"end": 7758,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7548,
											"end": 7766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1057,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1092,
											"end": 1105,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1092,
											"end": 1105,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1089,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1077,
											"end": 1105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1077,
											"end": 1105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1105,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1077,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4316,
											"end": 4323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4354,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4343,
											"end": 4370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4362,
											"end": 4369,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4343,
											"end": 4370,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4343,
											"end": 4370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4343,
											"end": 4370,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4343,
											"end": 4370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4343,
											"end": 4370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4343,
											"end": 4370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4343,
											"end": 4370,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4343,
											"end": 4370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4343,
											"end": 4370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4343,
											"end": 4370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4343,
											"end": 4370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4343,
											"end": 4370,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4343,
											"end": 4370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4343,
											"end": 4370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4370,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4343,
											"end": 4370,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4336,
											"end": 4370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4233,
											"end": 4378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2638,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2402,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1258,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1258,
											"end": 1270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1270,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1258,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1270,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1270,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1270,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1240,
											"end": 1307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1240,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2503,
											"end": 2504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2483,
											"end": 2505,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2483,
											"end": 2505,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2483,
											"end": 2491,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2483,
											"end": 2505,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2483,
											"end": 2505,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2483,
											"end": 2505,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2548,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2475,
											"end": 2548,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2475,
											"end": 2548,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2475,
											"end": 2548,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2548,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2475,
											"end": 2548,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2548,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2475,
											"end": 2548,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2548,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2475,
											"end": 2548,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2548,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2475,
											"end": 2548,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2475,
											"end": 2548,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2548,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2548,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2548,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2548,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2548,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2475,
											"end": 2548,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2475,
											"end": 2548,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2593,
											"end": 2601,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2564,
											"end": 2602,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2585,
											"end": 2591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2591,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2591,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2591,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2585,
											"end": 2591,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2591,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2591,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2585,
											"end": 2591,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2564,
											"end": 2602,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2564,
											"end": 2602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2564,
											"end": 2602,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2564,
											"end": 2602,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2602,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2602,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2602,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2602,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2602,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2622,
											"end": 2630,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2613,
											"end": 2619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2613,
											"end": 2619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2613,
											"end": 2630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2613,
											"end": 2630,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2613,
											"end": 2630,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2613,
											"end": 2630,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2613,
											"end": 2630,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2613,
											"end": 2630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2613,
											"end": 2630,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2613,
											"end": 2630,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2613,
											"end": 2630,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2613,
											"end": 2630,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2613,
											"end": 2630,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2613,
											"end": 2630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2613,
											"end": 2630,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2613,
											"end": 2630,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2613,
											"end": 2630,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2613,
											"end": 2630,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2613,
											"end": 2630,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2613,
											"end": 2630,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 619,
											"end": 717,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 619,
											"end": 717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 672,
											"end": 679,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 709,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 692,
											"end": 709,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 692,
											"end": 709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 619,
											"end": 717,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 619,
											"end": 717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10660,
											"end": 10998,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 10660,
											"end": 10998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10771,
											"end": 10772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10754,
											"end": 10773,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10754,
											"end": 10773,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10759,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10773,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10754,
											"end": 10773,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10754,
											"end": 10773,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10746,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 10746,
											"end": 10814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10746,
											"end": 10814,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10746,
											"end": 10814,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10746,
											"end": 10814,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10746,
											"end": 10814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10746,
											"end": 10814,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10746,
											"end": 10814,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10746,
											"end": 10814,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10746,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 10746,
											"end": 10814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10746,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 10746,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10746,
											"end": 10814,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 10746,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10746,
											"end": 10814,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10746,
											"end": 10814,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10746,
											"end": 10814,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10746,
											"end": 10814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10746,
											"end": 10814,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10746,
											"end": 10814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10746,
											"end": 10814,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10746,
											"end": 10814,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 10746,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10852,
											"end": 10853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10833,
											"end": 10854,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10833,
											"end": 10854,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10833,
											"end": 10840,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10833,
											"end": 10854,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10833,
											"end": 10854,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10833,
											"end": 10854,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 10825,
											"end": 10893,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10825,
											"end": 10893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10893,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10825,
											"end": 10893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10893,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10825,
											"end": 10893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 10825,
											"end": 10893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 10825,
											"end": 10893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10893,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 10825,
											"end": 10893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10825,
											"end": 10893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10893,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10893,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10825,
											"end": 10893,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 10825,
											"end": 10893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10936,
											"end": 10942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10906,
											"end": 10917,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10906,
											"end": 10924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10918,
											"end": 10923,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10906,
											"end": 10924,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10906,
											"end": 10924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10906,
											"end": 10924,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10906,
											"end": 10924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10906,
											"end": 10924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10906,
											"end": 10924,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10906,
											"end": 10924,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10906,
											"end": 10924,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10906,
											"end": 10924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10906,
											"end": 10924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10906,
											"end": 10924,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10906,
											"end": 10924,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10906,
											"end": 10924,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10906,
											"end": 10924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10906,
											"end": 10924,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10906,
											"end": 10933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10925,
											"end": 10932,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10906,
											"end": 10933,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10906,
											"end": 10933,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10906,
											"end": 10933,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10906,
											"end": 10933,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10906,
											"end": 10933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10906,
											"end": 10933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10906,
											"end": 10933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10906,
											"end": 10933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10906,
											"end": 10933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10906,
											"end": 10933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10906,
											"end": 10933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10906,
											"end": 10933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10906,
											"end": 10933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10906,
											"end": 10933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10906,
											"end": 10933,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10906,
											"end": 10942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10906,
											"end": 10942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10906,
											"end": 10942,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10906,
											"end": 10942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10974,
											"end": 10981,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 10990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10958,
											"end": 10990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10967,
											"end": 10972,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 10990,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10958,
											"end": 10990,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 10990,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10983,
											"end": 10989,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 10990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10958,
											"end": 10990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 10990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 10958,
											"end": 10990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 10990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 10990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10958,
											"end": 10990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 10990,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 10958,
											"end": 10990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 10990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10958,
											"end": 10990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 10990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 10990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 10990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 10990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 10990,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10660,
											"end": 10998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10660,
											"end": 10998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10660,
											"end": 10998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10660,
											"end": 10998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8480,
											"end": 8951,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 8480,
											"end": 8951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8596,
											"end": 8597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8578,
											"end": 8598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8578,
											"end": 8598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8584,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8578,
											"end": 8598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8598,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8570,
											"end": 8640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 8570,
											"end": 8640,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8570,
											"end": 8640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8570,
											"end": 8640,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8570,
											"end": 8640,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8570,
											"end": 8640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8570,
											"end": 8640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8570,
											"end": 8640,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8570,
											"end": 8640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8570,
											"end": 8640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 8570,
											"end": 8640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8570,
											"end": 8640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 8570,
											"end": 8640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8570,
											"end": 8640,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 8570,
											"end": 8640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8570,
											"end": 8640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8570,
											"end": 8640,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8570,
											"end": 8640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8570,
											"end": 8640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8570,
											"end": 8640,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8570,
											"end": 8640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8570,
											"end": 8640,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8570,
											"end": 8640,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 8570,
											"end": 8640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8680,
											"end": 8681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8659,
											"end": 8682,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8659,
											"end": 8682,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8659,
											"end": 8668,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8659,
											"end": 8682,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8659,
											"end": 8682,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8659,
											"end": 8682,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8651,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 8651,
											"end": 8722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8651,
											"end": 8722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8651,
											"end": 8722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8651,
											"end": 8722,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8651,
											"end": 8722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8651,
											"end": 8722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8651,
											"end": 8722,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8651,
											"end": 8722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8651,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 8651,
											"end": 8722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8651,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 8651,
											"end": 8722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8651,
											"end": 8722,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 8651,
											"end": 8722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8651,
											"end": 8722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8651,
											"end": 8722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8651,
											"end": 8722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8651,
											"end": 8722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8651,
											"end": 8722,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8651,
											"end": 8722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8651,
											"end": 8722,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8651,
											"end": 8722,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 8651,
											"end": 8722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 8777,
											"end": 8783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8755,
											"end": 8826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8755,
											"end": 8826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8755,
											"end": 8826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 8755,
											"end": 8826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8755,
											"end": 8826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8826,
											"name": "PUSH data",
											"source": 0,
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 8755,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 8755,
											"end": 8826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8826,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8764,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8755,
											"end": 8772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8765,
											"end": 8771,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8772,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8755,
											"end": 8772,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8772,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8755,
											"end": 8772,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8772,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8772,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8755,
											"end": 8772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8772,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8772,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8755,
											"end": 8772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8755,
											"end": 8772,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8772,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 8755,
											"end": 8776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8826,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8755,
											"end": 8826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8755,
											"end": 8826,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 8755,
											"end": 8826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8744,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8735,
											"end": 8752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8745,
											"end": 8751,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8752,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8735,
											"end": 8752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8752,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8735,
											"end": 8752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8735,
											"end": 8752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8735,
											"end": 8752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8735,
											"end": 8752,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8826,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8860,
											"end": 8892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 8885,
											"end": 8891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8860,
											"end": 8869,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8860,
											"end": 8880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8879,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8860,
											"end": 8880,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8860,
											"end": 8880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8860,
											"end": 8880,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8860,
											"end": 8880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8860,
											"end": 8880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8860,
											"end": 8880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8860,
											"end": 8880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8860,
											"end": 8880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8860,
											"end": 8880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8860,
											"end": 8880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8860,
											"end": 8880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8860,
											"end": 8880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8860,
											"end": 8880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8860,
											"end": 8880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8860,
											"end": 8880,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8860,
											"end": 8880,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8860,
											"end": 8884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 8860,
											"end": 8884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8860,
											"end": 8892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8860,
											"end": 8892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8860,
											"end": 8892,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8860,
											"end": 8892,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8860,
											"end": 8892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8860,
											"end": 8892,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 8860,
											"end": 8892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8837,
											"end": 8846,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8837,
											"end": 8857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 8856,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8837,
											"end": 8857,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8837,
											"end": 8857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8837,
											"end": 8857,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8837,
											"end": 8857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8837,
											"end": 8857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8837,
											"end": 8857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8837,
											"end": 8857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8837,
											"end": 8857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8837,
											"end": 8857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8837,
											"end": 8857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8837,
											"end": 8857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8837,
											"end": 8857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8837,
											"end": 8857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8837,
											"end": 8857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8837,
											"end": 8857,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8837,
											"end": 8892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8837,
											"end": 8892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8837,
											"end": 8892,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8837,
											"end": 8892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8925,
											"end": 8934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8908,
											"end": 8943,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8908,
											"end": 8943,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8917,
											"end": 8923,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8908,
											"end": 8943,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8908,
											"end": 8943,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8908,
											"end": 8943,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8936,
											"end": 8942,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8908,
											"end": 8943,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8908,
											"end": 8943,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8908,
											"end": 8943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 8908,
											"end": 8943,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8908,
											"end": 8943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8908,
											"end": 8943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 8908,
											"end": 8943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8908,
											"end": 8943,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 8908,
											"end": 8943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8908,
											"end": 8943,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8908,
											"end": 8943,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8908,
											"end": 8943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8908,
											"end": 8943,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8908,
											"end": 8943,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8908,
											"end": 8943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8908,
											"end": 8943,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8480,
											"end": 8951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8480,
											"end": 8951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8480,
											"end": 8951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8480,
											"end": 8951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1817,
											"end": 2009,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1817,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1903,
											"end": 1910,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1937,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1932,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1937,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1937,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1951,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1923,
											"end": 1952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1979,
											"end": 1980,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1976,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 1975,
											"end": 1980,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 1975,
											"end": 1980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1980,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 1975,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 1980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 1980,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1993,
											"end": 2001,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1993,
											"end": 2001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1993,
											"end": 2001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 2009,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 2009,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 2009,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 2009,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 2009,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 2009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 914,
											"end": 1095,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 914,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 972,
											"end": 979,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 992,
											"end": 1001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1008,
											"end": 1009,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1005,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 1004,
											"end": 1009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 992,
											"end": 1009,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 992,
											"end": 1009,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1029,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1034,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1034,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 1020,
											"end": 1066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1086,
											"end": 1087,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1087,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 914,
											"end": 1095,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 914,
											"end": 1095,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 914,
											"end": 1095,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 914,
											"end": 1095,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 914,
											"end": 1095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9872,
											"end": 10220,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 9872,
											"end": 10220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9967,
											"end": 9968,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9948,
											"end": 9969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9948,
											"end": 9969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9948,
											"end": 9955,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9948,
											"end": 9969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9948,
											"end": 9969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9948,
											"end": 9969,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9940,
											"end": 10007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 9940,
											"end": 10007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9940,
											"end": 10007,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9940,
											"end": 10007,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9940,
											"end": 10007,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9940,
											"end": 10007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9940,
											"end": 10007,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9940,
											"end": 10007,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9940,
											"end": 10007,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9940,
											"end": 10007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 9940,
											"end": 10007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9940,
											"end": 10007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 9940,
											"end": 10007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9940,
											"end": 10007,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 9940,
											"end": 10007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9940,
											"end": 10007,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9940,
											"end": 10007,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9940,
											"end": 10007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9940,
											"end": 10007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9940,
											"end": 10007,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9940,
											"end": 10007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9940,
											"end": 10007,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9940,
											"end": 10007,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 9940,
											"end": 10007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 10064,
											"end": 10070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10041,
											"end": 10109,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10109,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10041,
											"end": 10109,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10041,
											"end": 10109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10109,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 10041,
											"end": 10109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10041,
											"end": 10109,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10109,
											"name": "PUSH data",
											"source": 0,
											"value": "DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032"
										},
										{
											"begin": 10041,
											"end": 10109,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 10041,
											"end": 10109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10109,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10050,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10041,
											"end": 10059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10051,
											"end": 10058,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10059,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10041,
											"end": 10059,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10059,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10041,
											"end": 10059,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10059,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10041,
											"end": 10059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10059,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10041,
											"end": 10059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10041,
											"end": 10059,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10059,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 10041,
											"end": 10063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10109,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10109,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10041,
											"end": 10109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10109,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 10041,
											"end": 10109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10029,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10020,
											"end": 10038,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10030,
											"end": 10037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10038,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10020,
											"end": 10038,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10038,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10020,
											"end": 10038,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10038,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10038,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10020,
											"end": 10038,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10038,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10038,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10020,
											"end": 10038,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10038,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10020,
											"end": 10038,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10109,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10020,
											"end": 10109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10135,
											"end": 10159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 10152,
											"end": 10158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10135,
											"end": 10147,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10135,
											"end": 10147,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10135,
											"end": 10151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 10135,
											"end": 10151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10135,
											"end": 10159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10135,
											"end": 10159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10135,
											"end": 10159,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10135,
											"end": 10159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10135,
											"end": 10159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10135,
											"end": 10159,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 10135,
											"end": 10159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10120,
											"end": 10132,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10120,
											"end": 10159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10120,
											"end": 10159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10120,
											"end": 10159,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10120,
											"end": 10159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10201,
											"end": 10202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10175,
											"end": 10212,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10175,
											"end": 10212,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10184,
											"end": 10191,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10212,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10175,
											"end": 10212,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10212,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10205,
											"end": 10211,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10175,
											"end": 10212,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 10175,
											"end": 10212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10175,
											"end": 10212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10212,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 10175,
											"end": 10212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10175,
											"end": 10212,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10212,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10175,
											"end": 10212,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 9872,
											"end": 10220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9872,
											"end": 10220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9872,
											"end": 10220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9232,
											"end": 9540,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 9232,
											"end": 9540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9327,
											"end": 9328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9308,
											"end": 9329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9308,
											"end": 9329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9308,
											"end": 9315,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9308,
											"end": 9329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9308,
											"end": 9329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9308,
											"end": 9329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9300,
											"end": 9365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 9300,
											"end": 9365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9300,
											"end": 9365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9300,
											"end": 9365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9300,
											"end": 9365,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9300,
											"end": 9365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9300,
											"end": 9365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9300,
											"end": 9365,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9300,
											"end": 9365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9300,
											"end": 9365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 9300,
											"end": 9365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9300,
											"end": 9365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 9300,
											"end": 9365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9300,
											"end": 9365,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 9300,
											"end": 9365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9300,
											"end": 9365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9300,
											"end": 9365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9300,
											"end": 9365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9300,
											"end": 9365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9300,
											"end": 9365,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9300,
											"end": 9365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9300,
											"end": 9365,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9300,
											"end": 9365,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 9300,
											"end": 9365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 9410,
											"end": 9416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9405,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9393,
											"end": 9405,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 9393,
											"end": 9409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9417,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9393,
											"end": 9417,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9417,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 9393,
											"end": 9417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9378,
											"end": 9390,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9378,
											"end": 9417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9378,
											"end": 9417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9378,
											"end": 9417,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9378,
											"end": 9417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 9472,
											"end": 9478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9449,
											"end": 9458,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9449,
											"end": 9467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9459,
											"end": 9466,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9449,
											"end": 9467,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9449,
											"end": 9467,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9449,
											"end": 9467,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9449,
											"end": 9467,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9449,
											"end": 9467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9449,
											"end": 9467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9449,
											"end": 9467,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9449,
											"end": 9467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9449,
											"end": 9467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9449,
											"end": 9467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9449,
											"end": 9467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9449,
											"end": 9467,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9449,
											"end": 9467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9449,
											"end": 9467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9449,
											"end": 9467,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9449,
											"end": 9467,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9449,
											"end": 9471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 9449,
											"end": 9471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9449,
											"end": 9479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 9449,
											"end": 9479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9437,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9428,
											"end": 9446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9438,
											"end": 9445,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9446,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9428,
											"end": 9446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9446,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9428,
											"end": 9446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9428,
											"end": 9446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9428,
											"end": 9446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9428,
											"end": 9446,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9479,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9428,
											"end": 9479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9516,
											"end": 9523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9495,
											"end": 9532,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9495,
											"end": 9532,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9512,
											"end": 9513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9495,
											"end": 9532,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9495,
											"end": 9532,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9495,
											"end": 9532,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9525,
											"end": 9531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9495,
											"end": 9532,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9495,
											"end": 9532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9495,
											"end": 9532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 9495,
											"end": 9532,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9495,
											"end": 9532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9495,
											"end": 9532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 9495,
											"end": 9532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9495,
											"end": 9532,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 9495,
											"end": 9532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9495,
											"end": 9532,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9495,
											"end": 9532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9495,
											"end": 9532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9495,
											"end": 9532,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9495,
											"end": 9532,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9495,
											"end": 9532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9495,
											"end": 9532,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 9232,
											"end": 9540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9232,
											"end": 9540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9232,
											"end": 9540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1514,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 1378,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1443,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 1467,
											"end": 1468,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1470,
											"end": 1471,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1463,
											"end": 1506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1456,
											"end": 1506,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1456,
											"end": 1506,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1514,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1514,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1514,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1514,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5296,
											"end": 5298,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5275,
											"end": 5282,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5271,
											"end": 5294,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5267,
											"end": 5299,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 5302,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 5423,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 5492,
											"end": 5499,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5483,
											"end": 5489,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5472,
											"end": 5481,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5468,
											"end": 5490,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 5447,
											"end": 5500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "tag",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5510,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 5628,
											"end": 5633,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 5610,
											"end": 5634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5605,
											"end": 5608,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5635,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5523,
											"end": 5641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5740,
											"end": 5744,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5780,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5767,
											"end": 5776,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5763,
											"end": 5781,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5781,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5781,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 5859,
											"end": 5860,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5848,
											"end": 5857,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5844,
											"end": 5861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5835,
											"end": 5841,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 5791,
											"end": 5862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5943,
											"end": 5949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 5957,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6000,
											"end": 6002,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5988,
											"end": 5997,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5979,
											"end": 5986,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5975,
											"end": 5998,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5971,
											"end": 6003,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 6006,
											"end": 6085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6126,
											"end": 6127,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 6196,
											"end": 6203,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6187,
											"end": 6193,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6176,
											"end": 6185,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6172,
											"end": 6194,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 6151,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "tag",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6141,
											"end": 6204,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6141,
											"end": 6204,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6214,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6253,
											"end": 6255,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 6324,
											"end": 6331,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6313,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6300,
											"end": 6322,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6279,
											"end": 6332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6269,
											"end": 6332,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6269,
											"end": 6332,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6224,
											"end": 6342,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 6349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6829,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 6355,
											"end": 6829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6423,
											"end": 6429,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6431,
											"end": 6437,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6480,
											"end": 6482,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6468,
											"end": 6477,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6466,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6455,
											"end": 6478,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6451,
											"end": 6483,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6448,
											"end": 6567,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6448,
											"end": 6567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 6448,
											"end": 6567,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6486,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 6486,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 6486,
											"end": 6565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6486,
											"end": 6565,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 6486,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6448,
											"end": 6567,
											"name": "tag",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 6448,
											"end": 6567,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6606,
											"end": 6607,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6631,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 6676,
											"end": 6683,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6667,
											"end": 6673,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6665,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6652,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6631,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6631,
											"end": 6684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6631,
											"end": 6684,
											"name": "tag",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 6631,
											"end": 6684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6621,
											"end": 6684,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6621,
											"end": 6684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6577,
											"end": 6694,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6733,
											"end": 6735,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6759,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 6804,
											"end": 6811,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6795,
											"end": 6801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6784,
											"end": 6793,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6780,
											"end": 6802,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6759,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6759,
											"end": 6812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6759,
											"end": 6812,
											"name": "tag",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 6759,
											"end": 6812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6749,
											"end": 6812,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6749,
											"end": 6812,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6822,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6829,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6829,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6829,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6829,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6829,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6835,
											"end": 7015,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 6835,
											"end": 7015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6883,
											"end": 6960,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6880,
											"end": 6881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6961,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6980,
											"end": 6984,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 6977,
											"end": 6978,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6970,
											"end": 6985,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7004,
											"end": 7008,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7001,
											"end": 7002,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6994,
											"end": 7009,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7341,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 7021,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7065,
											"end": 7071,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7102,
											"end": 7103,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7096,
											"end": 7100,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7092,
											"end": 7104,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7104,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7149,
											"end": 7150,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7143,
											"end": 7147,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7151,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7170,
											"end": 7188,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7160,
											"end": 7241,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 7160,
											"end": 7241,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7226,
											"end": 7230,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 7218,
											"end": 7224,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7214,
											"end": 7231,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7231,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7160,
											"end": 7241,
											"name": "tag",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 7160,
											"end": 7241,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7288,
											"end": 7290,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7280,
											"end": 7286,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7277,
											"end": 7291,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7257,
											"end": 7275,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7254,
											"end": 7292,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7251,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 7251,
											"end": 7335,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7307,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 7307,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 7307,
											"end": 7325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7307,
											"end": 7325,
											"name": "tag",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 7307,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7251,
											"end": 7335,
											"name": "tag",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 7251,
											"end": 7335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7072,
											"end": 7341,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7341,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7341,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7341,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7347,
											"end": 7529,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 7347,
											"end": 7529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7487,
											"end": 7521,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7483,
											"end": 7484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7481,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7471,
											"end": 7485,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7464,
											"end": 7522,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7347,
											"end": 7529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7347,
											"end": 7529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7535,
											"end": 7901,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 7535,
											"end": 7901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7677,
											"end": 7680,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7698,
											"end": 7765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 7762,
											"end": 7764,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7757,
											"end": 7760,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7698,
											"end": 7765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 7698,
											"end": 7765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7698,
											"end": 7765,
											"name": "tag",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 7698,
											"end": 7765,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7691,
											"end": 7765,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7691,
											"end": 7765,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7774,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 7863,
											"end": 7866,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7774,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 7774,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7774,
											"end": 7867,
											"name": "tag",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 7774,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7892,
											"end": 7894,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7887,
											"end": 7890,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7883,
											"end": 7895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 7895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 7895,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7535,
											"end": 7901,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7535,
											"end": 7901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7535,
											"end": 7901,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7535,
											"end": 7901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 8326,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 7907,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8073,
											"end": 8077,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8111,
											"end": 8113,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8100,
											"end": 8109,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8096,
											"end": 8114,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8114,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8114,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8160,
											"end": 8169,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8154,
											"end": 8158,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8150,
											"end": 8170,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8146,
											"end": 8147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8135,
											"end": 8144,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8131,
											"end": 8148,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8124,
											"end": 8171,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8188,
											"end": 8319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 8314,
											"end": 8318,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8188,
											"end": 8319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 8188,
											"end": 8319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8188,
											"end": 8319,
											"name": "tag",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 8188,
											"end": 8319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8180,
											"end": 8319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8180,
											"end": 8319,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 8326,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 8326,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 8326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 8326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8332,
											"end": 8508,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 8332,
											"end": 8508,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8472,
											"end": 8500,
											"name": "PUSH",
											"source": 6,
											"value": "7468697320746F6B656E206973206E6F74206D696E7461626C65000000000000"
										},
										{
											"begin": 8468,
											"end": 8469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8460,
											"end": 8466,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8456,
											"end": 8470,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8449,
											"end": 8501,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8332,
											"end": 8508,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8332,
											"end": 8508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 8880,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 8514,
											"end": 8880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8677,
											"end": 8744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 8741,
											"end": 8743,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 8736,
											"end": 8739,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8677,
											"end": 8744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 8677,
											"end": 8744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8677,
											"end": 8744,
											"name": "tag",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 8677,
											"end": 8744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8670,
											"end": 8744,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8670,
											"end": 8744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8753,
											"end": 8846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 8842,
											"end": 8845,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8753,
											"end": 8846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 8753,
											"end": 8846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8753,
											"end": 8846,
											"name": "tag",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 8753,
											"end": 8846,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8871,
											"end": 8873,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8866,
											"end": 8869,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8862,
											"end": 8874,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8855,
											"end": 8874,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8855,
											"end": 8874,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 8880,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 8880,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 8880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 8880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8886,
											"end": 9305,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 8886,
											"end": 9305,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9052,
											"end": 9056,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9090,
											"end": 9092,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9079,
											"end": 9088,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9075,
											"end": 9093,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9067,
											"end": 9093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9067,
											"end": 9093,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9139,
											"end": 9148,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9133,
											"end": 9137,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9129,
											"end": 9149,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9125,
											"end": 9126,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9114,
											"end": 9123,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9110,
											"end": 9127,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9103,
											"end": 9150,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9167,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 9293,
											"end": 9297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9167,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 9167,
											"end": 9298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9167,
											"end": 9298,
											"name": "tag",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 9167,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9159,
											"end": 9298,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9159,
											"end": 9298,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8886,
											"end": 9305,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8886,
											"end": 9305,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8886,
											"end": 9305,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8886,
											"end": 9305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9311,
											"end": 9491,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 9311,
											"end": 9491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9359,
											"end": 9436,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9356,
											"end": 9357,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9349,
											"end": 9437,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9456,
											"end": 9460,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 9453,
											"end": 9454,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9446,
											"end": 9461,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9480,
											"end": 9484,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9477,
											"end": 9478,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9470,
											"end": 9485,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9497,
											"end": 9907,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 9497,
											"end": 9907,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9537,
											"end": 9544,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9560,
											"end": 9580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 9578,
											"end": 9579,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9560,
											"end": 9580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 9560,
											"end": 9580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9560,
											"end": 9580,
											"name": "tag",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 9560,
											"end": 9580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9555,
											"end": 9580,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9555,
											"end": 9580,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9594,
											"end": 9614,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 9612,
											"end": 9613,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9594,
											"end": 9614,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 9594,
											"end": 9614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9594,
											"end": 9614,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 9594,
											"end": 9614,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9589,
											"end": 9614,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9589,
											"end": 9614,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9649,
											"end": 9650,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9646,
											"end": 9647,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9642,
											"end": 9651,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9671,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 9689,
											"end": 9700,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9671,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 9671,
											"end": 9701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9671,
											"end": 9701,
											"name": "tag",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 9671,
											"end": 9701,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9660,
											"end": 9701,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9660,
											"end": 9701,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9850,
											"end": 9851,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9841,
											"end": 9848,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9837,
											"end": 9852,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9834,
											"end": 9835,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9831,
											"end": 9853,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9804,
											"end": 9813,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9784,
											"end": 9867,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9761,
											"end": 9900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 9761,
											"end": 9900,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9880,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 9880,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 9880,
											"end": 9898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9880,
											"end": 9898,
											"name": "tag",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 9880,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9761,
											"end": 9900,
											"name": "tag",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 9761,
											"end": 9900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9545,
											"end": 9907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9497,
											"end": 9907,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9497,
											"end": 9907,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9497,
											"end": 9907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9497,
											"end": 9907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9497,
											"end": 9907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 10138,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 9913,
											"end": 10138,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10053,
											"end": 10087,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 10049,
											"end": 10050,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10041,
											"end": 10047,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10037,
											"end": 10051,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10030,
											"end": 10088,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10122,
											"end": 10130,
											"name": "PUSH",
											"source": 6,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10117,
											"end": 10119,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10109,
											"end": 10115,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10105,
											"end": 10120,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10098,
											"end": 10131,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 10138,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9913,
											"end": 10138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10144,
											"end": 10510,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 10144,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10286,
											"end": 10289,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10307,
											"end": 10374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 10371,
											"end": 10373,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 10366,
											"end": 10369,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10307,
											"end": 10374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 10307,
											"end": 10374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10307,
											"end": 10374,
											"name": "tag",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 10307,
											"end": 10374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10300,
											"end": 10374,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10300,
											"end": 10374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10383,
											"end": 10476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 10472,
											"end": 10475,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10383,
											"end": 10476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 10383,
											"end": 10476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10383,
											"end": 10476,
											"name": "tag",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 10383,
											"end": 10476,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10501,
											"end": 10503,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10496,
											"end": 10499,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10492,
											"end": 10504,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10485,
											"end": 10504,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10485,
											"end": 10504,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10144,
											"end": 10510,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10144,
											"end": 10510,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10144,
											"end": 10510,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10144,
											"end": 10510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10516,
											"end": 10935,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 10516,
											"end": 10935,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10682,
											"end": 10686,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10720,
											"end": 10722,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10709,
											"end": 10718,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10705,
											"end": 10723,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10723,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10778,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10763,
											"end": 10767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10759,
											"end": 10779,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10755,
											"end": 10756,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10744,
											"end": 10753,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10757,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10733,
											"end": 10780,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10797,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 10923,
											"end": 10927,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10797,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 10797,
											"end": 10928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10797,
											"end": 10928,
											"name": "tag",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 10797,
											"end": 10928,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10789,
											"end": 10928,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10789,
											"end": 10928,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10516,
											"end": 10935,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10516,
											"end": 10935,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10516,
											"end": 10935,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10516,
											"end": 10935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10941,
											"end": 11164,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 10941,
											"end": 11164,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11081,
											"end": 11115,
											"name": "PUSH",
											"source": 6,
											"value": "42455032303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 11077,
											"end": 11078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11069,
											"end": 11075,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11065,
											"end": 11079,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11058,
											"end": 11116,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11150,
											"end": 11156,
											"name": "PUSH",
											"source": 6,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11145,
											"end": 11147,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11137,
											"end": 11143,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11133,
											"end": 11148,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11126,
											"end": 11157,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10941,
											"end": 11164,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10941,
											"end": 11164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11170,
											"end": 11536,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 11170,
											"end": 11536,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11312,
											"end": 11315,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11333,
											"end": 11400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 11397,
											"end": 11399,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 11392,
											"end": 11395,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11333,
											"end": 11400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 11333,
											"end": 11400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11333,
											"end": 11400,
											"name": "tag",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 11333,
											"end": 11400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11326,
											"end": 11400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11326,
											"end": 11400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11409,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 11498,
											"end": 11501,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11409,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 11409,
											"end": 11502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11409,
											"end": 11502,
											"name": "tag",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 11409,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11527,
											"end": 11529,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11522,
											"end": 11525,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11518,
											"end": 11530,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11511,
											"end": 11530,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11511,
											"end": 11530,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11170,
											"end": 11536,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11170,
											"end": 11536,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11170,
											"end": 11536,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11170,
											"end": 11536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11542,
											"end": 11961,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 11542,
											"end": 11961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11708,
											"end": 11712,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11746,
											"end": 11748,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11735,
											"end": 11744,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11731,
											"end": 11749,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11723,
											"end": 11749,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11723,
											"end": 11749,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11795,
											"end": 11804,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11789,
											"end": 11793,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11785,
											"end": 11805,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11781,
											"end": 11782,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11770,
											"end": 11779,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11766,
											"end": 11783,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11759,
											"end": 11806,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11823,
											"end": 11954,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 11949,
											"end": 11953,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11823,
											"end": 11954,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 11823,
											"end": 11954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11823,
											"end": 11954,
											"name": "tag",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 11823,
											"end": 11954,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11815,
											"end": 11954,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11815,
											"end": 11954,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11542,
											"end": 11961,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11542,
											"end": 11961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11542,
											"end": 11961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11542,
											"end": 11961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11967,
											"end": 12188,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 11967,
											"end": 12188,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12107,
											"end": 12141,
											"name": "PUSH",
											"source": 6,
											"value": "42455032303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 12103,
											"end": 12104,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12095,
											"end": 12101,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12091,
											"end": 12105,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12084,
											"end": 12142,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12176,
											"end": 12180,
											"name": "PUSH",
											"source": 6,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12171,
											"end": 12173,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12163,
											"end": 12169,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12159,
											"end": 12174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12152,
											"end": 12181,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11967,
											"end": 12188,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11967,
											"end": 12188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12194,
											"end": 12560,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 12194,
											"end": 12560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12336,
											"end": 12339,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12357,
											"end": 12424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 12421,
											"end": 12423,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 12416,
											"end": 12419,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12357,
											"end": 12424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 12357,
											"end": 12424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12357,
											"end": 12424,
											"name": "tag",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 12357,
											"end": 12424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12350,
											"end": 12424,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12350,
											"end": 12424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12433,
											"end": 12526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "401"
										},
										{
											"begin": 12522,
											"end": 12525,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12433,
											"end": 12526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 12433,
											"end": 12526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12433,
											"end": 12526,
											"name": "tag",
											"source": 6,
											"value": "401"
										},
										{
											"begin": 12433,
											"end": 12526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12551,
											"end": 12553,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12546,
											"end": 12549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12542,
											"end": 12554,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12535,
											"end": 12554,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12535,
											"end": 12554,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12194,
											"end": 12560,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12194,
											"end": 12560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12194,
											"end": 12560,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12194,
											"end": 12560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12566,
											"end": 12985,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 12566,
											"end": 12985,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12732,
											"end": 12736,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12770,
											"end": 12772,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12759,
											"end": 12768,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12755,
											"end": 12773,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12747,
											"end": 12773,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12747,
											"end": 12773,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12819,
											"end": 12828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12813,
											"end": 12817,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12809,
											"end": 12829,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12805,
											"end": 12806,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12794,
											"end": 12803,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12790,
											"end": 12807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12830,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12847,
											"end": 12978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 12973,
											"end": 12977,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12847,
											"end": 12978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 12847,
											"end": 12978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12847,
											"end": 12978,
											"name": "tag",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 12847,
											"end": 12978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12839,
											"end": 12978,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12839,
											"end": 12978,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12566,
											"end": 12985,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12566,
											"end": 12985,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12566,
											"end": 12985,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12566,
											"end": 12985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12991,
											"end": 13215,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 12991,
											"end": 13215,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13131,
											"end": 13165,
											"name": "PUSH",
											"source": 6,
											"value": "42455032303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 13127,
											"end": 13128,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13119,
											"end": 13125,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13115,
											"end": 13129,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13108,
											"end": 13166,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13200,
											"end": 13207,
											"name": "PUSH",
											"source": 6,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13195,
											"end": 13197,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13187,
											"end": 13193,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13183,
											"end": 13198,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13176,
											"end": 13208,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12991,
											"end": 13215,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12991,
											"end": 13215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13221,
											"end": 13587,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 13221,
											"end": 13587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13363,
											"end": 13366,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13384,
											"end": 13451,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 13448,
											"end": 13450,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 13443,
											"end": 13446,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13384,
											"end": 13451,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 13384,
											"end": 13451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13384,
											"end": 13451,
											"name": "tag",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 13384,
											"end": 13451,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13377,
											"end": 13451,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13377,
											"end": 13451,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13460,
											"end": 13553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 13549,
											"end": 13552,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13460,
											"end": 13553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 13460,
											"end": 13553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13460,
											"end": 13553,
											"name": "tag",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 13460,
											"end": 13553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13578,
											"end": 13580,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13573,
											"end": 13576,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13569,
											"end": 13581,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13562,
											"end": 13581,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13562,
											"end": 13581,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13221,
											"end": 13587,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13221,
											"end": 13587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13221,
											"end": 13587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13221,
											"end": 13587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13593,
											"end": 14012,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 13593,
											"end": 14012,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13759,
											"end": 13763,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13797,
											"end": 13799,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13786,
											"end": 13795,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13782,
											"end": 13800,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13774,
											"end": 13800,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13774,
											"end": 13800,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13846,
											"end": 13855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13840,
											"end": 13844,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13836,
											"end": 13856,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13832,
											"end": 13833,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13821,
											"end": 13830,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13817,
											"end": 13834,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13810,
											"end": 13857,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13874,
											"end": 14005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 14000,
											"end": 14004,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13874,
											"end": 14005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 13874,
											"end": 14005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13874,
											"end": 14005,
											"name": "tag",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 13874,
											"end": 14005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13866,
											"end": 14005,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13866,
											"end": 14005,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13593,
											"end": 14012,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13593,
											"end": 14012,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13593,
											"end": 14012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13593,
											"end": 14012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14018,
											"end": 14240,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 14018,
											"end": 14240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14158,
											"end": 14192,
											"name": "PUSH",
											"source": 6,
											"value": "42455032303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 14154,
											"end": 14155,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14146,
											"end": 14152,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14142,
											"end": 14156,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14135,
											"end": 14193,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14227,
											"end": 14232,
											"name": "PUSH",
											"source": 6,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14222,
											"end": 14224,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14214,
											"end": 14220,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14210,
											"end": 14225,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14203,
											"end": 14233,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14018,
											"end": 14240,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14018,
											"end": 14240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14246,
											"end": 14612,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 14246,
											"end": 14612,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14388,
											"end": 14391,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14409,
											"end": 14476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 14473,
											"end": 14475,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 14468,
											"end": 14471,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14409,
											"end": 14476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 14409,
											"end": 14476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14409,
											"end": 14476,
											"name": "tag",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 14409,
											"end": 14476,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14402,
											"end": 14476,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14402,
											"end": 14476,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14485,
											"end": 14578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 14574,
											"end": 14577,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14485,
											"end": 14578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 14485,
											"end": 14578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14485,
											"end": 14578,
											"name": "tag",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 14485,
											"end": 14578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14603,
											"end": 14605,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 14598,
											"end": 14601,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14594,
											"end": 14606,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14587,
											"end": 14606,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14587,
											"end": 14606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14246,
											"end": 14612,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14246,
											"end": 14612,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14246,
											"end": 14612,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14246,
											"end": 14612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14618,
											"end": 15037,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 14618,
											"end": 15037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14784,
											"end": 14788,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14822,
											"end": 14824,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14811,
											"end": 14820,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14807,
											"end": 14825,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14799,
											"end": 14825,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14799,
											"end": 14825,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14871,
											"end": 14880,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14865,
											"end": 14869,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14861,
											"end": 14881,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 14857,
											"end": 14858,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14846,
											"end": 14855,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14842,
											"end": 14859,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14835,
											"end": 14882,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14899,
											"end": 15030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 15025,
											"end": 15029,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14899,
											"end": 15030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 14899,
											"end": 15030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14899,
											"end": 15030,
											"name": "tag",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 14899,
											"end": 15030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14891,
											"end": 15030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14891,
											"end": 15030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14618,
											"end": 15037,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14618,
											"end": 15037,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14618,
											"end": 15037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14618,
											"end": 15037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15043,
											"end": 15237,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 15043,
											"end": 15237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15083,
											"end": 15087,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15103,
											"end": 15123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 15121,
											"end": 15122,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15103,
											"end": 15123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 15103,
											"end": 15123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15103,
											"end": 15123,
											"name": "tag",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 15103,
											"end": 15123,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15098,
											"end": 15123,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15098,
											"end": 15123,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15137,
											"end": 15157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "418"
										},
										{
											"begin": 15155,
											"end": 15156,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15137,
											"end": 15157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 15137,
											"end": 15157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15137,
											"end": 15157,
											"name": "tag",
											"source": 6,
											"value": "418"
										},
										{
											"begin": 15137,
											"end": 15157,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15132,
											"end": 15157,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 15132,
											"end": 15157,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15181,
											"end": 15182,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15178,
											"end": 15179,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15174,
											"end": 15183,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15166,
											"end": 15183,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15166,
											"end": 15183,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15205,
											"end": 15206,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15199,
											"end": 15203,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15196,
											"end": 15207,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 15193,
											"end": 15230,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15193,
											"end": 15230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 15193,
											"end": 15230,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15210,
											"end": 15228,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 15210,
											"end": 15228,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 15210,
											"end": 15228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15210,
											"end": 15228,
											"name": "tag",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 15210,
											"end": 15228,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15193,
											"end": 15230,
											"name": "tag",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 15193,
											"end": 15230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15043,
											"end": 15237,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 15043,
											"end": 15237,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15043,
											"end": 15237,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15043,
											"end": 15237,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15043,
											"end": 15237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15243,
											"end": 15434,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 15243,
											"end": 15434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15283,
											"end": 15286,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15302,
											"end": 15322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 15320,
											"end": 15321,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15302,
											"end": 15322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 15302,
											"end": 15322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15302,
											"end": 15322,
											"name": "tag",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 15302,
											"end": 15322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15297,
											"end": 15322,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15297,
											"end": 15322,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15336,
											"end": 15356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 15354,
											"end": 15355,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15336,
											"end": 15356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 15336,
											"end": 15356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15336,
											"end": 15356,
											"name": "tag",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 15336,
											"end": 15356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15331,
											"end": 15356,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 15331,
											"end": 15356,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15379,
											"end": 15380,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15376,
											"end": 15377,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15372,
											"end": 15381,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15365,
											"end": 15381,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15365,
											"end": 15381,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15400,
											"end": 15403,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15397,
											"end": 15398,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15394,
											"end": 15404,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 15391,
											"end": 15427,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15391,
											"end": 15427,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 15391,
											"end": 15427,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15407,
											"end": 15425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 15407,
											"end": 15425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 15407,
											"end": 15425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15407,
											"end": 15425,
											"name": "tag",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 15407,
											"end": 15425,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15391,
											"end": 15427,
											"name": "tag",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 15391,
											"end": 15427,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15243,
											"end": 15434,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 15243,
											"end": 15434,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15243,
											"end": 15434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15243,
											"end": 15434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15243,
											"end": 15434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15440,
											"end": 15617,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 15440,
											"end": 15617,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15580,
											"end": 15609,
											"name": "PUSH",
											"source": 6,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 15576,
											"end": 15577,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15568,
											"end": 15574,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15564,
											"end": 15578,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15557,
											"end": 15610,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15440,
											"end": 15617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15440,
											"end": 15617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15623,
											"end": 15989,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 15623,
											"end": 15989,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15765,
											"end": 15768,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15786,
											"end": 15853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "428"
										},
										{
											"begin": 15850,
											"end": 15852,
											"name": "PUSH",
											"source": 6,
											"value": "1B"
										},
										{
											"begin": 15845,
											"end": 15848,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15786,
											"end": 15853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 15786,
											"end": 15853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15786,
											"end": 15853,
											"name": "tag",
											"source": 6,
											"value": "428"
										},
										{
											"begin": 15786,
											"end": 15853,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15779,
											"end": 15853,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15779,
											"end": 15853,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15862,
											"end": 15955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 15951,
											"end": 15954,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15862,
											"end": 15955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 15862,
											"end": 15955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15862,
											"end": 15955,
											"name": "tag",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 15862,
											"end": 15955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15980,
											"end": 15982,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15975,
											"end": 15978,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15971,
											"end": 15983,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15964,
											"end": 15983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15964,
											"end": 15983,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15623,
											"end": 15989,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15623,
											"end": 15989,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15623,
											"end": 15989,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15623,
											"end": 15989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15995,
											"end": 16414,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 15995,
											"end": 16414,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16161,
											"end": 16165,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16199,
											"end": 16201,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16188,
											"end": 16197,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16184,
											"end": 16202,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16176,
											"end": 16202,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16176,
											"end": 16202,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16248,
											"end": 16257,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16242,
											"end": 16246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16238,
											"end": 16258,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 16234,
											"end": 16235,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16223,
											"end": 16232,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16219,
											"end": 16236,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16212,
											"end": 16259,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16276,
											"end": 16407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "431"
										},
										{
											"begin": 16402,
											"end": 16406,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16276,
											"end": 16407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 16276,
											"end": 16407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16276,
											"end": 16407,
											"name": "tag",
											"source": 6,
											"value": "431"
										},
										{
											"begin": 16276,
											"end": 16407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16268,
											"end": 16407,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16268,
											"end": 16407,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15995,
											"end": 16414,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15995,
											"end": 16414,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15995,
											"end": 16414,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15995,
											"end": 16414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16420,
											"end": 16640,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 16420,
											"end": 16640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16560,
											"end": 16594,
											"name": "PUSH",
											"source": 6,
											"value": "42455032303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 16556,
											"end": 16557,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16548,
											"end": 16554,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16544,
											"end": 16558,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16537,
											"end": 16595,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16629,
											"end": 16632,
											"name": "PUSH",
											"source": 6,
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16624,
											"end": 16626,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16616,
											"end": 16622,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16612,
											"end": 16627,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16605,
											"end": 16633,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16420,
											"end": 16640,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16420,
											"end": 16640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16646,
											"end": 17012,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 16646,
											"end": 17012,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16788,
											"end": 16791,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16809,
											"end": 16876,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "434"
										},
										{
											"begin": 16873,
											"end": 16875,
											"name": "PUSH",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 16868,
											"end": 16871,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16809,
											"end": 16876,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 16809,
											"end": 16876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16809,
											"end": 16876,
											"name": "tag",
											"source": 6,
											"value": "434"
										},
										{
											"begin": 16809,
											"end": 16876,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16802,
											"end": 16876,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16802,
											"end": 16876,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16885,
											"end": 16978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 16974,
											"end": 16977,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16885,
											"end": 16978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 16885,
											"end": 16978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16885,
											"end": 16978,
											"name": "tag",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 16885,
											"end": 16978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17003,
											"end": 17005,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 16998,
											"end": 17001,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16994,
											"end": 17006,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16987,
											"end": 17006,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16987,
											"end": 17006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16646,
											"end": 17012,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16646,
											"end": 17012,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16646,
											"end": 17012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16646,
											"end": 17012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17018,
											"end": 17437,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 17018,
											"end": 17437,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17184,
											"end": 17188,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17222,
											"end": 17224,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17211,
											"end": 17220,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17207,
											"end": 17225,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17199,
											"end": 17225,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17199,
											"end": 17225,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17271,
											"end": 17280,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17265,
											"end": 17269,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17261,
											"end": 17281,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 17257,
											"end": 17258,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17246,
											"end": 17255,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17242,
											"end": 17259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17235,
											"end": 17282,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17299,
											"end": 17430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "437"
										},
										{
											"begin": 17425,
											"end": 17429,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17299,
											"end": 17430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 17299,
											"end": 17430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17299,
											"end": 17430,
											"name": "tag",
											"source": 6,
											"value": "437"
										},
										{
											"begin": 17299,
											"end": 17430,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17291,
											"end": 17430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17291,
											"end": 17430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17018,
											"end": 17437,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17018,
											"end": 17437,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17018,
											"end": 17437,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17018,
											"end": 17437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17443,
											"end": 17624,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 17443,
											"end": 17624,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17583,
											"end": 17616,
											"name": "PUSH",
											"source": 6,
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 17579,
											"end": 17580,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17571,
											"end": 17577,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17567,
											"end": 17581,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17560,
											"end": 17617,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17443,
											"end": 17624,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17443,
											"end": 17624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17630,
											"end": 17996,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 17630,
											"end": 17996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17772,
											"end": 17775,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17793,
											"end": 17860,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 17857,
											"end": 17859,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 17852,
											"end": 17855,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17793,
											"end": 17860,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 17793,
											"end": 17860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17793,
											"end": 17860,
											"name": "tag",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 17793,
											"end": 17860,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17786,
											"end": 17860,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17786,
											"end": 17860,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17869,
											"end": 17962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 17958,
											"end": 17961,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17869,
											"end": 17962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 17869,
											"end": 17962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17869,
											"end": 17962,
											"name": "tag",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 17869,
											"end": 17962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17987,
											"end": 17989,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17982,
											"end": 17985,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17978,
											"end": 17990,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17971,
											"end": 17990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17971,
											"end": 17990,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17630,
											"end": 17996,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17630,
											"end": 17996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17630,
											"end": 17996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17630,
											"end": 17996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18002,
											"end": 18421,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 18002,
											"end": 18421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18168,
											"end": 18172,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18206,
											"end": 18208,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 18195,
											"end": 18204,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18191,
											"end": 18209,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18183,
											"end": 18209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18183,
											"end": 18209,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18255,
											"end": 18264,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18249,
											"end": 18253,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18245,
											"end": 18265,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 18241,
											"end": 18242,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18230,
											"end": 18239,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18226,
											"end": 18243,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18219,
											"end": 18266,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18283,
											"end": 18414,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "443"
										},
										{
											"begin": 18409,
											"end": 18413,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18283,
											"end": 18414,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 18283,
											"end": 18414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18283,
											"end": 18414,
											"name": "tag",
											"source": 6,
											"value": "443"
										},
										{
											"begin": 18283,
											"end": 18414,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18275,
											"end": 18414,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18275,
											"end": 18414,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18002,
											"end": 18421,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18002,
											"end": 18421,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18002,
											"end": 18421,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18002,
											"end": 18421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									],
									".data": {
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365"
									}
								}
							},
							"sourceList": [
								"MGAS/BEP20TokenImplementation.sol",
								"MGAS/Context.sol",
								"MGAS/IBEP20.sol",
								"MGAS/ISwap.sol",
								"MGAS/Initializable.sol",
								"MGAS/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getETHValue(uint256)": "d5bda32d",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"mintTo(uint256,address)": "b723b34e",
							"mintable()": "4bf365df",
							"name()": "06fdde03",
							"pricePerToken()": "7b1b1de6",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"}],\"name\":\"getETHValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ethValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"mintTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pricePerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burn `amount` tokens and decreasing the total supply.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner - `_mintable` must be true\"},\"mintTo(uint256,address)\":{\"details\":\"Creates `amount` tokens and assigns them to `recipient`, increasing the total supply. Requirements - `msg.sender` must be the token owner - `_mintable` must be true\"},\"mintable()\":{\"details\":\"Returns if the token is mintable or not\"},\"name()\":{\"details\":\"Returns the token name.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MGAS/BEP20TokenImplementation.sol\":\"BEP20TokenImplementation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"MGAS/BEP20TokenImplementation.sol\":{\"keccak256\":\"0x2456270e801d4fc849a85591945db9c874fc63e48348d3cb73920841ed0dcc2d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://46a78627661e472a7fe8921e446621d4e32d6fb64248ef270610c92c1757a321\",\"dweb:/ipfs/QmZ46eix61FQ5xgHWjYwoQGFQ3fBS7h1a8bj98B5y67hkf\"]},\"MGAS/Context.sol\":{\"keccak256\":\"0x3110a86c43c9717226d50d1eb7ca1d114bdef57a6d2badeb07a63a434aa1743a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ec11ed416004616703423f3331bfa1d05010366754d9f782ade294f672848a74\",\"dweb:/ipfs/QmT72NQ4EUjtwsKXno5mymH7JFtfJugH1pmdPzxStARNGP\"]},\"MGAS/IBEP20.sol\":{\"keccak256\":\"0x935c73cf79b8e56fa41ac0578a8203b0f5d7081783c513666e9a41c34704cbbe\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dc4a0b2c2e6efcb04f7ef1ce084494609dc704f34dc6ea68b7d7c505d6e186d7\",\"dweb:/ipfs/QmbU76Q2D3WWAngexDja62Y5RkmXULsRhU9uiF2jrz6EZo\"]},\"MGAS/ISwap.sol\":{\"keccak256\":\"0x6db62b458b233970b0e5aa5f00191595628084e794d1e8ac43292b4f088876ce\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://82293cdd6c6d5a2e61f6b1b0849aa90e3c4f7f00cce909d679e0dadf18d05069\",\"dweb:/ipfs/QmfPSHUrbxJd2SsFCMwnBmmpfefi3niuvqr8x6NqdCxXkP\"]},\"MGAS/Initializable.sol\":{\"keccak256\":\"0xd569f2bd435d41a4d17b12e05c5de9920971489137a383abe1499a5c38bf3658\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://348c23a3a0f94698965bb37bd5a6e9d32f3bffd9827d2eb2b9207fefe731fb07\",\"dweb:/ipfs/QmSE7edvrJiCCnsNnPJNAU4K8RuAcj9EkHgRmP6MwEvokV\"]},\"MGAS/SafeMath.sol\":{\"keccak256\":\"0xa240d5fa80ad5e676ac8bc497ce293fd1ab6fc312adc03e9fbf24382134e2b21\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://53c99ed61a6943da5ded686541a4540b4311313411cd4ce32e332e392cf07483\",\"dweb:/ipfs/QmT64dPSEzFjGrZq3wzuiAsd1evgpuPxZBkzKho44gTaLU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 818,
								"contract": "MGAS/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 821,
								"contract": "MGAS/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 21,
								"contract": "MGAS/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 27,
								"contract": "MGAS/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 30,
								"contract": "MGAS/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 33,
								"contract": "MGAS/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 36,
								"contract": "MGAS/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 39,
								"contract": "MGAS/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_decimals",
								"offset": 0,
								"slot": "6",
								"type": "t_uint8"
							},
							{
								"astId": 41,
								"contract": "MGAS/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "pricePerToken",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 44,
								"contract": "MGAS/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_owner",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 52,
								"contract": "MGAS/BEP20TokenImplementation.sol:BEP20TokenImplementation",
								"label": "_mintable",
								"offset": 20,
								"slot": "8",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MGAS/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MGAS/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"MGAS/Context.sol\":{\"keccak256\":\"0x3110a86c43c9717226d50d1eb7ca1d114bdef57a6d2badeb07a63a434aa1743a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ec11ed416004616703423f3331bfa1d05010366754d9f782ade294f672848a74\",\"dweb:/ipfs/QmT72NQ4EUjtwsKXno5mymH7JFtfJugH1pmdPzxStARNGP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MGAS/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MGAS/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"MGAS/IBEP20.sol\":{\"keccak256\":\"0x935c73cf79b8e56fa41ac0578a8203b0f5d7081783c513666e9a41c34704cbbe\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dc4a0b2c2e6efcb04f7ef1ce084494609dc704f34dc6ea68b7d7c505d6e186d7\",\"dweb:/ipfs/QmbU76Q2D3WWAngexDja62Y5RkmXULsRhU9uiF2jrz6EZo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MGAS/ISwap.sol": {
				"ISwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "mintTo",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(uint256)": {
								"details": "Burn `amount` tokens and decreasing the total supply."
							},
							"mintTo(uint256,address)": {
								"details": "Creates `amount` tokens and assigns them to `recipient`, increasing the total supply. Requirements - `msg.sender` must be the token owner - `_mintable` must be true"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(uint256)": "42966c68",
							"mintTo(uint256,address)": "b723b34e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"mintTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(uint256)\":{\"details\":\"Burn `amount` tokens and decreasing the total supply.\"},\"mintTo(uint256,address)\":{\"details\":\"Creates `amount` tokens and assigns them to `recipient`, increasing the total supply. Requirements - `msg.sender` must be the token owner - `_mintable` must be true\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MGAS/ISwap.sol\":\"ISwap\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"MGAS/ISwap.sol\":{\"keccak256\":\"0x6db62b458b233970b0e5aa5f00191595628084e794d1e8ac43292b4f088876ce\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://82293cdd6c6d5a2e61f6b1b0849aa90e3c4f7f00cce909d679e0dadf18d05069\",\"dweb:/ipfs/QmfPSHUrbxJd2SsFCMwnBmmpfefi3niuvqr8x6NqdCxXkP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MGAS/Initializable.sol": {
				"Initializable": {
					"abi": [],
					"devdoc": {
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.  TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.  CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.  TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.  CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MGAS/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"MGAS/Initializable.sol\":{\"keccak256\":\"0xd569f2bd435d41a4d17b12e05c5de9920971489137a383abe1499a5c38bf3658\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://348c23a3a0f94698965bb37bd5a6e9d32f3bffd9827d2eb2b9207fefe731fb07\",\"dweb:/ipfs/QmSE7edvrJiCCnsNnPJNAU4K8RuAcj9EkHgRmP6MwEvokV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 818,
								"contract": "MGAS/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 821,
								"contract": "MGAS/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MGAS/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MGAS/SafeMath.sol\":651:5370  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"MGAS/SafeMath.sol\":651:5370  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207bce95e0fb69711d4c51b9e9e3a04610ea4b8b2ea916934dbee4f887f97359c564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207bce95e0fb69711d4c51b9e9e3a04610ea4b8b2ea916934dbee4f887f97359c564736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xCE95E0FB69711D4C51B9E9E3A04610EA4B8B2EA916934DBEE4F887F9 PUSH20 0x59C564736F6C6343000812003300000000000000 ",
							"sourceMap": "651:4719:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207bce95e0fb69711d4c51b9e9e3a04610ea4b8b2ea916934dbee4f887f97359c564736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xCE95E0FB69711D4C51B9E9E3A04610EA4B8B2EA916934DBEE4F887F9 PUSH20 0x59C564736F6C6343000812003300000000000000 ",
							"sourceMap": "651:4719:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 651,
									"end": 5370,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207bce95e0fb69711d4c51b9e9e3a04610ea4b8b2ea916934dbee4f887f97359c564736f6c63430008120033",
									".code": [
										{
											"begin": 651,
											"end": 5370,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 651,
											"end": 5370,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 651,
											"end": 5370,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 651,
											"end": 5370,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 651,
											"end": 5370,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 5370,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 651,
											"end": 5370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 651,
											"end": 5370,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 651,
											"end": 5370,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"MGAS/BEP20TokenImplementation.sol",
								"MGAS/Context.sol",
								"MGAS/IBEP20.sol",
								"MGAS/ISwap.sol",
								"MGAS/Initializable.sol",
								"MGAS/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MGAS/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"MGAS/SafeMath.sol\":{\"keccak256\":\"0xa240d5fa80ad5e676ac8bc497ce293fd1ab6fc312adc03e9fbf24382134e2b21\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://53c99ed61a6943da5ded686541a4540b4311313411cd4ce32e332e392cf07483\",\"dweb:/ipfs/QmT64dPSEzFjGrZq3wzuiAsd1evgpuPxZBkzKho44gTaLU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"MGAS/BEP20TokenImplementation.sol": {
				"ast": {
					"absolutePath": "MGAS/BEP20TokenImplementation.sol",
					"exportedSymbols": {
						"BEP20TokenImplementation": [
							667
						],
						"Context": [
							690
						],
						"IBEP20": [
							791
						],
						"ISwap": [
							812
						],
						"Initializable": [
							883
						],
						"SafeMath": [
							1079
						]
					},
					"id": 668,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"absolutePath": "MGAS/Context.sol",
							"file": "MGAS/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 668,
							"sourceUnit": 691,
							"src": "70:26:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "MGAS/IBEP20.sol",
							"file": "MGAS/IBEP20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 668,
							"sourceUnit": 792,
							"src": "98:25:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "MGAS/ISwap.sol",
							"file": "MGAS/ISwap.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 668,
							"sourceUnit": 813,
							"src": "125:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "MGAS/Initializable.sol",
							"file": "MGAS/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 668,
							"sourceUnit": 884,
							"src": "151:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "MGAS/SafeMath.sol",
							"file": "MGAS/SafeMath.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 668,
							"sourceUnit": 1080,
							"src": "185:27:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Context",
										"nameLocations": [
											"253:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 690,
										"src": "253:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "253:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IBEP20",
										"nameLocations": [
											"262:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 791,
										"src": "262:6:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "262:6:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ISwap",
										"nameLocations": [
											"270:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 812,
										"src": "270:5:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "270:5:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "Initializable",
										"nameLocations": [
											"277:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 883,
										"src": "277:13:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "277:13:0"
								}
							],
							"canonicalName": "BEP20TokenImplementation",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 667,
							"linearizedBaseContracts": [
								667,
								883,
								812,
								791,
								690
							],
							"name": "BEP20TokenImplementation",
							"nameLocation": "225:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 17,
									"libraryName": {
										"id": 15,
										"name": "SafeMath",
										"nameLocations": [
											"304:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1079,
										"src": "304:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "298:27:0",
									"typeName": {
										"id": 16,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "317:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "370:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 667,
									"src": "333:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 20,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 18,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "342:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "333:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 19,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "353:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "444:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 667,
									"src": "386:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 26,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 22,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "395:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "386:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 25,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 23,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "415:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "406:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 24,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "426:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 30,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "478:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 667,
									"src": "462:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 28,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "462:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030303030303030303030303030303030303030303030303030",
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "493:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000000000"
										},
										"value": "100000000000000000000000000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 33,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "542:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 667,
									"src": "527:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 31,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "527:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4d474153",
										"id": 32,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "550:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_37db44a9f53a31b2d9191a31f77d82ccc939bab068697bfc6345c20056a3d93e",
											"typeString": "literal_string \"MGAS\""
										},
										"value": "MGAS"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 36,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "578:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 667,
									"src": "563:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 34,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "563:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4d474153",
										"id": 35,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "588:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_37db44a9f53a31b2d9191a31f77d82ccc939bab068697bfc6345c20056a3d93e",
											"typeString": "literal_string \"MGAS\""
										},
										"value": "MGAS"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 39,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "615:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 667,
									"src": "601:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 37,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "601:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 38,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "627:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "7b1b1de6",
									"id": 41,
									"mutability": "mutable",
									"name": "pricePerToken",
									"nameLocation": "651:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 667,
									"src": "636:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 40,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "636:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 44,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "690:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 667,
									"src": "674:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 42,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "674:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307843456436374431313135463135303365366445323436344333373866343436623262443832393843",
										"id": 43,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "699:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xCEd67D1115F1503e6dE2464C378f446b2bD8298C"
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 50,
									"name": "OwnershipTransferred",
									"nameLocation": "754:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "791:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "775:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "822:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "806:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "806:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "774:57:0"
									},
									"src": "748:84:0"
								},
								{
									"constant": false,
									"id": 52,
									"mutability": "mutable",
									"name": "_mintable",
									"nameLocation": "853:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 667,
									"src": "840:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 51,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "840:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "886:83:0",
										"statements": [
											{
												"expression": {
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 55,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "897:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 58,
														"indexExpression": {
															"expression": {
																"id": 56,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "907:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "911:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "907:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "897:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 59,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "921:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "897:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "897:36:0"
											},
											{
												"expression": {
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 62,
														"name": "pricePerToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "944:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "35",
														"id": 63,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "960:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "944:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 65,
												"nodeType": "ExpressionStatement",
												"src": "944:17:0"
											}
										]
									},
									"id": 67,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "882:2:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "886:0:0"
									},
									"scope": 667,
									"src": "871:98:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "1059:54:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 74,
														"name": "_tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "1077:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 75,
														"name": "pricePerToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "1092:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1077:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 73,
												"id": 77,
												"nodeType": "Return",
												"src": "1070:35:0"
											}
										]
									},
									"functionSelector": "d5bda32d",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getETHValue",
									"nameLocation": "986:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "_tokenAmount",
												"nameLocation": "1006:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "998:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "998:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "997:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "ethValue",
												"nameLocation": "1049:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1041:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1040:18:0"
									},
									"scope": 667,
									"src": "977:136:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "1229:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 83,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "1248:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 84,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 678,
																	"src": "1258:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1258:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1272:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 82,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "1240:67:0"
											},
											{
												"id": 90,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "1123:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 92,
									"name": "onlyOwner",
									"nameLocation": "1217:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:0"
									},
									"src": "1208:119:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "2153:94:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 99,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "2190:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2206:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2198:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 100,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2198:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2198:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 98,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "2169:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2169:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 105,
												"nodeType": "EmitStatement",
												"src": "2164:45:0"
											},
											{
												"expression": {
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 106,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "2220:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2237:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2229:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2229:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2229:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2220:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 112,
												"nodeType": "ExpressionStatement",
												"src": "2220:19:0"
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "1770:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 96,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 95,
												"name": "onlyOwner",
												"nameLocations": [
													"2143:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 92,
												"src": "2143:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2143:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2116:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2133:2:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2153:0:0"
									},
									"scope": 667,
									"src": "2107:140:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2464:174:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 123,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "2483:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2503:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2495:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 124,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2495:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2495:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2483:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2507:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2475:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2475:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "2475:73:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 133,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "2585:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 134,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "2593:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 132,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "2564:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2564:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "EmitStatement",
												"src": "2559:43:0"
											},
											{
												"expression": {
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 137,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "2613:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 138,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "2622:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2613:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2613:17:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "2255:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 120,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 119,
												"name": "onlyOwner",
												"nameLocations": [
													"2454:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 92,
												"src": "2454:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2454:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2411:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2437:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2429:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:18:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2464:0:0"
									},
									"scope": 667,
									"src": "2402:236:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "2766:35:0",
										"statements": [
											{
												"expression": {
													"id": 148,
													"name": "_mintable",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 52,
													"src": "2784:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 147,
												"id": 149,
												"nodeType": "Return",
												"src": "2777:16:0"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "2646:65:0",
										"text": " @dev Returns if the token is mintable or not"
									},
									"functionSelector": "4bf365df",
									"id": 151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintable",
									"nameLocation": "2726:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2734:2:0"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "2760:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 145,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2760:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2759:6:0"
									},
									"scope": 667,
									"src": "2717:84:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										722
									],
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "2930:32:0",
										"statements": [
											{
												"expression": {
													"id": 158,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 44,
													"src": "2948:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 157,
												"id": 159,
												"nodeType": "Return",
												"src": "2941:13:0"
											}
										]
									},
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "2809:54:0",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "2878:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 154,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2898:8:0"
									},
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2886:2:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2921:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2921:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2920:9:0"
									},
									"scope": 667,
									"src": "2869:93:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										704
									],
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "3088:35:0",
										"statements": [
											{
												"expression": {
													"id": 168,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 39,
													"src": "3106:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 167,
												"id": 169,
												"nodeType": "Return",
												"src": "3099:16:0"
											}
										]
									},
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "2970:53:0",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3038:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 164,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3058:8:0"
									},
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3046:2:0"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "3081:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 165,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3081:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3080:7:0"
									},
									"scope": 667,
									"src": "3029:94:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										710
									],
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "3253:33:0",
										"statements": [
											{
												"expression": {
													"id": 178,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 36,
													"src": "3271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 177,
												"id": 179,
												"nodeType": "Return",
												"src": "3264:14:0"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "3131:51:0",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3197:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 174,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3215:8:0"
									},
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3203:2:0"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "3238:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3238:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3237:15:0"
									},
									"scope": 667,
									"src": "3188:98:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "3410:31:0",
										"statements": [
											{
												"expression": {
													"id": 188,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 33,
													"src": "3428:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 187,
												"id": 189,
												"nodeType": "Return",
												"src": "3421:12:0"
											}
										]
									},
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "3294:47:0",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3356:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 184,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3372:8:0"
									},
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3360:2:0"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "3395:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 185,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3395:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3394:15:0"
									},
									"scope": 667,
									"src": "3347:94:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										698
									],
									"body": {
										"id": 200,
										"nodeType": "Block",
										"src": "3569:38:0",
										"statements": [
											{
												"expression": {
													"id": 198,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 30,
													"src": "3587:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 197,
												"id": 199,
												"nodeType": "Return",
												"src": "3580:19:0"
											}
										]
									},
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "3449:50:0",
										"text": " @dev See {BEP20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3514:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 194,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3537:8:0"
									},
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3525:2:0"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "3560:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3559:9:0"
									},
									"scope": 667,
									"src": "3505:102:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										730
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3746:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 210,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "3764:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 212,
													"indexExpression": {
														"id": 211,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "3774:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3764:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 209,
												"id": 213,
												"nodeType": "Return",
												"src": "3757:25:0"
											}
										]
									},
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "3615:48:0",
										"text": " @dev See {BEP20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3678:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 206,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3714:8:0"
									},
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3696:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3688:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3688:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3687:17:0"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3737:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3736:9:0"
									},
									"scope": 667,
									"src": "3669:121:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										740
									],
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "4088:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 227,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "4109:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4109:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 229,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "4123:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 230,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "4134:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 226,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "4099:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4099:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "4099:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4159:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 225,
												"id": 234,
												"nodeType": "Return",
												"src": "4152:11:0"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3798:198:0",
										"text": " @dev See {BEP20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4011:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 222,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4064:8:0"
									},
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4028:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4020:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4020:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4047:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4039:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4039:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4019:35:0"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4082:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4082:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4081:6:0"
									},
									"scope": 667,
									"src": "4002:169:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										750
									],
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "4325:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 247,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "4343:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 249,
														"indexExpression": {
															"id": 248,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "4355:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4343:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 251,
													"indexExpression": {
														"id": 250,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "4362:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4343:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 246,
												"id": 252,
												"nodeType": "Return",
												"src": "4336:34:0"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "4179:48:0",
										"text": " @dev See {BEP20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4242:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 243,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4293:8:0"
									},
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4260:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "4252:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4252:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4275:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "4267:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4267:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4251:32:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "4316:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4316:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4315:9:0"
									},
									"scope": 667,
									"src": "4233:145:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										760
									],
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "4607:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 266,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "4627:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4627:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 268,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "4641:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 269,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "4650:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 265,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "4618:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "4618:39:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4675:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 264,
												"id": 273,
												"nodeType": "Return",
												"src": "4668:11:0"
											}
										]
									},
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "4386:132:0",
										"text": " @dev See {BEP20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4533:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 261,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4583:8:0"
									},
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4549:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "4541:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4541:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4566:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "4558:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4540:33:0"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "4601:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 262,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4601:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4600:6:0"
									},
									"scope": 667,
									"src": "4524:163:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										772
									],
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "5264:209:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 289,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "5285:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 290,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "5293:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 291,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "5304:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 288,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "5275:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5275:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 293,
												"nodeType": "ExpressionStatement",
												"src": "5275:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 295,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "5331:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 296,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "5339:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5339:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 305,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 282,
																	"src": "5391:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5399:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 298,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 27,
																			"src": "5353:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 300,
																		"indexExpression": {
																			"id": 299,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 278,
																			"src": "5365:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5353:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 303,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 301,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 678,
																			"src": "5373:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5373:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5353:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5387:3:0",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 957,
																"src": "5353:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5353:89:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 294,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "5322:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5322:121:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "5322:121:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5461:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 311,
												"nodeType": "Return",
												"src": "5454:11:0"
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "4695:457:0",
										"text": " @dev See {BEP20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {BEP20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for `sender`'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5167:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 284,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5240:8:0"
									},
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5188:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "5180:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5180:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5204:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "5196:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5196:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5223:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "5215:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5215:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5179:51:0"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "5258:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5258:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5257:6:0"
									},
									"scope": 667,
									"src": "5158:315:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "5967:124:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 324,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "5987:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5987:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 326,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "6001:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 334,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 318,
																	"src": "6049:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 327,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 27,
																			"src": "6010:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 330,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 328,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 678,
																				"src": "6022:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6022:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6010:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 332,
																	"indexExpression": {
																		"id": 331,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "6036:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6010:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6045:3:0",
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 912,
																"src": "6010:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6010:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 323,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "5978:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5978:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "5978:83:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 322,
												"id": 339,
												"nodeType": "Return",
												"src": "6072:11:0"
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "5481:394:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5890:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5916:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5908:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5908:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5933:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5925:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5925:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5907:37:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5961:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 320,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5961:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5960:6:0"
									},
									"scope": 667,
									"src": "5881:210:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "6684:170:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 352,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "6704:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6704:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 354,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "6718:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 362,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "6766:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6783:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 355,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 27,
																			"src": "6727:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 358,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 356,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 678,
																				"src": "6739:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6739:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6727:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 360,
																	"indexExpression": {
																		"id": 359,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 344,
																		"src": "6753:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6727:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6762:3:0",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 957,
																"src": "6727:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6727:96:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 351,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "6695:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6695:129:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "6695:129:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6842:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 350,
												"id": 368,
												"nodeType": "Return",
												"src": "6835:11:0"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "6099:488:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6602:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6628:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "6620:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6620:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6645:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "6637:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6637:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6619:42:0"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "6678:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 348,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6678:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6677:6:0"
									},
									"scope": 667,
									"src": "6593:261:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "7169:127:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 381,
															"name": "_mintable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "7188:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7468697320746f6b656e206973206e6f74206d696e7461626c65",
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7199:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386",
																"typeString": "literal_string \"this token is not mintable\""
															},
															"value": "this token is not mintable"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386",
																"typeString": "literal_string \"this token is not mintable\""
															}
														],
														"id": 380,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7180:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7180:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "7180:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 386,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "7245:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7245:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 388,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "7259:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 385,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "7239:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7239:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "7239:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7284:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 379,
												"id": 392,
												"nodeType": "Return",
												"src": "7277:11:0"
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "6862:239:0",
										"text": " @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n the total supply.\n Requirements\n - `msg.sender` must be the token owner\n - `_mintable` must be true"
									},
									"functionSelector": "a0712d68",
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 376,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 375,
												"name": "onlyOwner",
												"nameLocations": [
													"7144:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 92,
												"src": "7144:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "7144:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "7116:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7129:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "7121:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7120:16:0"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "7163:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 377,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7163:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7162:6:0"
									},
									"scope": 667,
									"src": "7107:189:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										803
									],
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "7642:124:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 408,
															"name": "_mintable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "7661:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7468697320746f6b656e206973206e6f74206d696e7461626c65",
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7672:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386",
																"typeString": "literal_string \"this token is not mintable\""
															},
															"value": "this token is not mintable"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386",
																"typeString": "literal_string \"this token is not mintable\""
															}
														],
														"id": 407,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7653:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7653:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "7653:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "7718:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 414,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "7729:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 412,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "7712:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7712:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "7712:24:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7754:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 406,
												"id": 418,
												"nodeType": "Return",
												"src": "7747:11:0"
											}
										]
									},
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "7304:238:0",
										"text": " @dev Creates `amount` tokens and assigns them to `recipient`, increasing\n the total supply.\n Requirements\n - `msg.sender` must be the token owner\n - `_mintable` must be true"
									},
									"functionSelector": "b723b34e",
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 403,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 402,
												"name": "onlyOwner",
												"nameLocations": [
													"7617:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 92,
												"src": "7617:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "7617:9:0"
										}
									],
									"name": "mintTo",
									"nameLocation": "7557:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 401,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7599:8:0"
									},
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7572:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "7564:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7564:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7588:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "7580:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7563:35:0"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "7636:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 404,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7636:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7635:6:0"
									},
									"scope": 667,
									"src": "7548:218:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										811
									],
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "7922:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 430,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "7939:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7939:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 432,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "7953:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 429,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "7933:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7933:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "7933:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7978:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 428,
												"id": 436,
												"nodeType": "Return",
												"src": "7971:11:0"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "7776:77:0",
										"text": " @dev Burn `amount` tokens and decreasing the total supply."
									},
									"functionSelector": "42966c68",
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "7868:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 425,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7889:8:0"
									},
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7881:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "7873:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7873:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7872:16:0"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "7916:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 426,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7916:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7915:6:0"
									},
									"scope": 667,
									"src": "7859:131:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "8559:392:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 449,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "8578:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8596:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8588:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 450,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8588:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8588:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8578:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8600:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 448,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8570:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8570:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "8570:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 459,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "8659:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8680:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8672:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 460,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8672:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 463,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8672:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8659:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8684:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 458,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8651:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8651:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 467,
												"nodeType": "ExpressionStatement",
												"src": "8651:71:0"
											},
											{
												"expression": {
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 468,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "8735:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 470,
														"indexExpression": {
															"id": 469,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "8745:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8735:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 475,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "8777:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8785:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 471,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "8755:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 473,
																"indexExpression": {
																	"id": 472,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "8765:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8755:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8773:3:0",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 957,
															"src": "8755:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8755:71:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8735:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "8735:91:0"
											},
											{
												"expression": {
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 480,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "8837:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 482,
														"indexExpression": {
															"id": 481,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "8847:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8837:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 487,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "8885:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 483,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "8860:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 485,
																"indexExpression": {
																	"id": 484,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 443,
																	"src": "8870:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8860:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8881:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 912,
															"src": "8860:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8860:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8837:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "8837:55:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 492,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "8917:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 493,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "8925:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 494,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "8936:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 491,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "8908:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8908:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "EmitStatement",
												"src": "8903:40:0"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "7998:476:0",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "8489:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "8507:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "8499:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8499:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "8523:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "8515:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8515:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8542:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "8534:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8534:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8498:51:0"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8559:0:0"
									},
									"scope": 667,
									"src": "8480:471:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "9289:251:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 507,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 501,
																"src": "9308:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9327:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9319:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 508,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9319:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 511,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9319:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9308:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9331:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 506,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9300:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9300:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "9300:65:0"
											},
											{
												"expression": {
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 516,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "9378:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 519,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 503,
																"src": "9410:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 517,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 30,
																"src": "9393:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9406:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 912,
															"src": "9393:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9393:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9378:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "9378:39:0"
											},
											{
												"expression": {
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 523,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "9428:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 525,
														"indexExpression": {
															"id": 524,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "9438:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9428:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 530,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 503,
																"src": "9472:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 526,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "9449:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 528,
																"indexExpression": {
																	"id": 527,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "9459:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9449:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9468:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 912,
															"src": "9449:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9449:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9428:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "9428:51:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9512:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9504:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 535,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9504:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9504:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 539,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "9516:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "9525:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 534,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "9495:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9495:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "EmitStatement",
												"src": "9490:42:0"
											}
										]
									},
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "8959:267:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
									},
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9241:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9255:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "9247:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9272:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "9264:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9264:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9246:33:0"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9289:0:0"
									},
									"scope": 667,
									"src": "9232:308:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "9929:291:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 553,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 547,
																"src": "9948:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9967:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9959:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 554,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9959:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9959:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9948:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9971:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 552,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9940:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9940:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "9940:67:0"
											},
											{
												"expression": {
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 562,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "10020:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 564,
														"indexExpression": {
															"id": 563,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10030:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10020:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 569,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 549,
																"src": "10064:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10072:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 565,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "10041:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 567,
																"indexExpression": {
																	"id": 566,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 547,
																	"src": "10051:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10041:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10060:3:0",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 957,
															"src": "10041:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10041:68:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10020:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "10020:89:0"
											},
											{
												"expression": {
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 574,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "10120:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 577,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 549,
																"src": "10152:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 575,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 30,
																"src": "10135:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10148:3:0",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 929,
															"src": "10135:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10135:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10120:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "10120:39:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 582,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10184:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10201:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10193:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 583,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10193:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10193:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 587,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "10205:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 581,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "10175:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10175:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 589,
												"nodeType": "EmitStatement",
												"src": "10170:42:0"
											}
										]
									},
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "9548:318:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9881:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9895:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "9887:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9887:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9912:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "9904:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9904:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9886:33:0"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9929:0:0"
									},
									"scope": 667,
									"src": "9872:348:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 635,
										"nodeType": "Block",
										"src": "10735:263:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 602,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "10754:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10771:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10763:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 603,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10763:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10763:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10754:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10775:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 601,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10746:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10746:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "10746:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 612,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 596,
																"src": "10833:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10852:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10844:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 613,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10844:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10844:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10833:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10856:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 611,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10825:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10825:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "10825:68:0"
											},
											{
												"expression": {
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 621,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "10906:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 624,
															"indexExpression": {
																"id": 622,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "10918:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10906:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 625,
														"indexExpression": {
															"id": 623,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "10925:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10906:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 626,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "10936:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10906:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "10906:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 630,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "10967:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 631,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "10974:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 632,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "10983:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "10958:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10958:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 634,
												"nodeType": "EmitStatement",
												"src": "10953:37:0"
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "10228:426:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10669:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10686:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "10678:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10678:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10701:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "10693:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10718:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "10710:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10710:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10677:48:0"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10735:0:0"
									},
									"scope": 667,
									"src": "10660:338:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "11245:171:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 645,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "11262:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 646,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "11271:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 644,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "11256:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11256:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "11256:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 650,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "11298:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 651,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "11307:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11307:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 660,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 641,
																	"src": "11360:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11368:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 653,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 27,
																			"src": "11321:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 655,
																		"indexExpression": {
																			"id": 654,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 639,
																			"src": "11333:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11321:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 658,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 656,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 678,
																			"src": "11342:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11342:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11321:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11356:3:0",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 957,
																"src": "11321:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11321:86:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 649,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "11289:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11289:119:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 664,
												"nodeType": "ExpressionStatement",
												"src": "11289:119:0"
											}
										]
									},
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "11006:172:0",
										"text": " @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n from the caller's allowance.\n See {_burn} and {_approve}."
									},
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nameLocation": "11193:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "11211:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "11203:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11203:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11228:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "11220:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11202:33:0"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11245:0:0"
									},
									"scope": 667,
									"src": "11184:232:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 668,
							"src": "216:11203:0",
							"usedErrors": []
						}
					],
					"src": "37:11382:0"
				},
				"id": 0
			},
			"MGAS/Context.sol": {
				"ast": {
					"absolutePath": "MGAS/Context.sol",
					"exportedSymbols": {
						"Context": [
							690
						]
					},
					"id": 691,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 669,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:31:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 690,
							"linearizedBaseContracts": [
								690
							],
							"name": "Context",
							"nameLocation": "604:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "681:36:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 674,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "699:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "703:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "699:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 673,
												"id": 676,
												"nodeType": "Return",
												"src": "692:17:1"
											}
										]
									},
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "628:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "638:2:1"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "672:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "671:9:1"
									},
									"scope": 690,
									"src": "619:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "790:168:1",
										"statements": [
											{
												"expression": {
													"id": 683,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "801:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$690",
														"typeString": "contract Context"
													}
												},
												"id": 684,
												"nodeType": "ExpressionStatement",
												"src": "801:4:1"
											},
											{
												"expression": {
													"expression": {
														"id": 685,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "942:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "946:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "942:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 682,
												"id": 687,
												"nodeType": "Return",
												"src": "935:15:1"
											}
										]
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "734:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "742:2:1"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "776:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 680,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "776:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "775:14:1"
									},
									"scope": 690,
									"src": "725:233:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 691,
							"src": "586:375:1",
							"usedErrors": []
						}
					],
					"src": "39:922:1"
				},
				"id": 1
			},
			"MGAS/IBEP20.sol": {
				"ast": {
					"absolutePath": "MGAS/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							791
						]
					},
					"id": 792,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 692,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBEP20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 791,
							"linearizedBaseContracts": [
								791
							],
							"name": "IBEP20",
							"nameLocation": "84:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 693,
										"nodeType": "StructuredDocumentation",
										"src": "98:68:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 698,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "181:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "192:2:2"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "218:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "218:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "217:9:2"
									},
									"scope": 791,
									"src": "172:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "235:53:2",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 704,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "303:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "311:2:2"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "337:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 701,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "337:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:7:2"
									},
									"scope": 791,
									"src": "294:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "352:51:2",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 710,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "418:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:2"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "450:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 707,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "450:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:15:2"
									},
									"scope": 791,
									"src": "409:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "473:47:2",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "535:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "539:2:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "565:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 713,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:15:2"
									},
									"scope": 791,
									"src": "526:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "588:54:2",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 722,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "657:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "665:2:2"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "691:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "690:9:2"
									},
									"scope": 791,
									"src": "648:52:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "708:74:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 730,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "797:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "815:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "807:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "807:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "806:17:2"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "847:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "846:9:2"
									},
									"scope": 791,
									"src": "788:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "864:215:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 740,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1094:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1111:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "1103:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1130:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "1122:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1122:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1102:35:2"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "1156:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 737,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1156:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1155:6:2"
									},
									"scope": 791,
									"src": "1085:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 741,
										"nodeType": "StructuredDocumentation",
										"src": "1170:270:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 750,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1455:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1473:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "1465:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1489:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "1481:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1481:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1464:33:2"
									},
									"returnParameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "1521:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1521:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1520:9:2"
									},
									"scope": 791,
									"src": "1446:84:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "1538:655:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 760,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2208:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2224:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "2216:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2216:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2241:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "2233:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2215:33:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "2267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 757,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2266:6:2"
									},
									"scope": 791,
									"src": "2199:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "2281:304:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 772,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2600:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2621:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "2613:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2613:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2637:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "2629:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2629:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2656:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "2648:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2648:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:51:2"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "2682:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 769,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2682:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2681:6:2"
									},
									"scope": 791,
									"src": "2591:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "2696:163:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 781,
									"name": "Transfer",
									"nameLocation": "2871:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2896:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "2880:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2918:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "2902:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2902:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2930:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "2922:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2922:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2879:57:2"
									},
									"src": "2865:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "2945:151:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 790,
									"name": "Approval",
									"nameLocation": "3108:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3133:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "3117:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3117:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3156:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "3140:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3140:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3173:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "3165:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3116:63:2"
									},
									"src": "3102:78:2"
								}
							],
							"scope": 792,
							"src": "74:3109:2",
							"usedErrors": []
						}
					],
					"src": "37:3148:2"
				},
				"id": 2
			},
			"MGAS/ISwap.sol": {
				"ast": {
					"absolutePath": "MGAS/ISwap.sol",
					"exportedSymbols": {
						"ISwap": [
							812
						]
					},
					"id": 813,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 793,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISwap",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 812,
							"linearizedBaseContracts": [
								812
							],
							"name": "ISwap",
							"nameLocation": "84:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "97:238:3",
										"text": " @dev Creates `amount` tokens and assigns them to `recipient`, increasing\n the total supply.\n Requirements\n - `msg.sender` must be the token owner\n - `_mintable` must be true"
									},
									"functionSelector": "b723b34e",
									"id": 803,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintTo",
									"nameLocation": "350:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "365:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "357:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "381:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "373:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:35:3"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "410:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 800,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "410:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:6:3"
									},
									"scope": 812,
									"src": "341:75:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "424:77:3",
										"text": " @dev Burn `amount` tokens and decreasing the total supply."
									},
									"functionSelector": "42966c68",
									"id": 811,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "516:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "529:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "521:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "521:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "520:16:3"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "555:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 808,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:6:3"
									},
									"scope": 812,
									"src": "507:54:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 813,
							"src": "74:490:3",
							"usedErrors": []
						}
					],
					"src": "37:527:3"
				},
				"id": 3
			},
			"MGAS/Initializable.sol": {
				"ast": {
					"absolutePath": "MGAS/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							883
						]
					},
					"id": 884,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 814,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 815,
								"nodeType": "StructuredDocumentation",
								"src": "72:951:4",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n \n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.\n \n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity."
							},
							"fullyImplemented": true,
							"id": 883,
							"linearizedBaseContracts": [
								883
							],
							"name": "Initializable",
							"nameLocation": "1043:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "1066:75:4",
										"text": " @dev Indicates that the contract has been initialized."
									},
									"id": 818,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "1160:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 883,
									"src": "1147:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 817,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1147:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "1181:93:4",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 821,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "1293:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 883,
									"src": "1280:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 820,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1280:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 859,
										"nodeType": "Block",
										"src": "1439:382:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 825,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 821,
																	"src": "1458:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 826,
																		"name": "_isConstructor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 882,
																		"src": "1475:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																			"typeString": "function () view returns (bool)"
																		}
																	},
																	"id": 827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1475:16:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1458:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "1495:13:4",
																"subExpression": {
																	"id": 829,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 818,
																	"src": "1496:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1458:50:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1510:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 824,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1450:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1450:109:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "1450:109:4"
											},
											{
												"assignments": [
													836
												],
												"declarations": [
													{
														"constant": false,
														"id": 836,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "1577:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 859,
														"src": "1572:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 835,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1572:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 839,
												"initialValue": {
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1594:14:4",
													"subExpression": {
														"id": 837,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "1595:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1572:36:4"
											},
											{
												"condition": {
													"id": 840,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 836,
													"src": "1623:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 850,
												"nodeType": "IfStatement",
												"src": "1619:101:4",
												"trueBody": {
													"id": 849,
													"nodeType": "Block",
													"src": "1639:81:4",
													"statements": [
														{
															"expression": {
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 841,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 821,
																	"src": "1654:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1670:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1654:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 844,
															"nodeType": "ExpressionStatement",
															"src": "1654:20:4"
														},
														{
															"expression": {
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 845,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 818,
																	"src": "1689:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1704:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1689:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 848,
															"nodeType": "ExpressionStatement",
															"src": "1689:19:4"
														}
													]
												}
											},
											{
												"id": 851,
												"nodeType": "PlaceholderStatement",
												"src": "1732:1:4"
											},
											{
												"condition": {
													"id": 852,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 836,
													"src": "1750:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 858,
												"nodeType": "IfStatement",
												"src": "1746:68:4",
												"trueBody": {
													"id": 857,
													"nodeType": "Block",
													"src": "1766:48:4",
													"statements": [
														{
															"expression": {
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 853,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 821,
																	"src": "1781:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1797:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "1781:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 856,
															"nodeType": "ExpressionStatement",
															"src": "1781:21:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "1315:95:4",
										"text": " @dev Modifier to protect an initializer function from being invoked twice."
									},
									"id": 860,
									"name": "initializer",
									"nameLocation": "1425:11:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1436:2:4"
									},
									"src": "1416:405:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "1968:550:4",
										"statements": [
											{
												"assignments": [
													867
												],
												"declarations": [
													{
														"constant": false,
														"id": 867,
														"mutability": "mutable",
														"name": "self",
														"nameLocation": "2341:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 881,
														"src": "2333:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 866,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2333:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 872,
												"initialValue": {
													"arguments": [
														{
															"id": 870,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "2356:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Initializable_$883",
																"typeString": "contract Initializable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_Initializable_$883",
																"typeString": "contract Initializable"
															}
														],
														"id": 869,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2348:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 868,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2348:7:4",
															"typeDescriptions": {}
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2348:13:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2333:28:4"
											},
											{
												"assignments": [
													874
												],
												"declarations": [
													{
														"constant": false,
														"id": 874,
														"mutability": "mutable",
														"name": "cs",
														"nameLocation": "2380:2:4",
														"nodeType": "VariableDeclaration",
														"scope": 881,
														"src": "2372:10:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 873,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2372:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 875,
												"nodeType": "VariableDeclarationStatement",
												"src": "2372:10:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2459:27:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2461:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "self",
																		"nodeType": "YulIdentifier",
																		"src": "2479:4:4"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "2467:11:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2467:17:4"
															},
															"variableNames": [
																{
																	"name": "cs",
																	"nodeType": "YulIdentifier",
																	"src": "2461:2:4"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 874,
														"isOffset": false,
														"isSlot": false,
														"src": "2461:2:4",
														"valueSize": 1
													},
													{
														"declaration": 867,
														"isOffset": false,
														"isSlot": false,
														"src": "2479:4:4",
														"valueSize": 1
													}
												],
												"id": 876,
												"nodeType": "InlineAssembly",
												"src": "2450:36:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 877,
														"name": "cs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "2503:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 878,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2509:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2503:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 865,
												"id": 880,
												"nodeType": "Return",
												"src": "2496:14:4"
											}
										]
									},
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "1829:79:4",
										"text": "@dev Returns true if and only if the function is running in the constructor"
									},
									"id": 882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isConstructor",
									"nameLocation": "1923:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1937:2:4"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "1962:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 863,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1962:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1961:6:4"
									},
									"scope": 883,
									"src": "1914:604:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 884,
							"src": "1025:1496:4",
							"usedErrors": []
						}
					],
					"src": "37:2486:4"
				},
				"id": 4
			},
			"MGAS/SafeMath.sol": {
				"ast": {
					"absolutePath": "MGAS/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1079
						]
					},
					"id": 1080,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 885,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 886,
								"nodeType": "StructuredDocumentation",
								"src": "74:575:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 1079,
							"linearizedBaseContracts": [
								1079
							],
							"name": "SafeMath",
							"nameLocation": "659:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 911,
										"nodeType": "Block",
										"src": "981:114:5",
										"statements": [
											{
												"assignments": [
													897
												],
												"declarations": [
													{
														"constant": false,
														"id": 897,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1000:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 911,
														"src": "992:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 896,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "992:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 901,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 898,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "1004:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 899,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "1008:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1004:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "992:17:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 903,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 897,
																"src": "1028:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 904,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "1033:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1028:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1036:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 902,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1020:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1020:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "1020:46:5"
											},
											{
												"expression": {
													"id": 909,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 897,
													"src": "1086:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 895,
												"id": 910,
												"nodeType": "Return",
												"src": "1079:8:5"
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "675:233:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "923:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "935:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "927:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "927:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "946:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "938:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "938:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "926:22:5"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "972:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:5"
									},
									"scope": 1079,
									"src": "914:181:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "1445:69:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 923,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1467:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 924,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "1470:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1473:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 922,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															929,
															957
														],
														"referencedDeclaration": 957,
														"src": "1463:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1463:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 921,
												"id": 927,
												"nodeType": "Return",
												"src": "1456:50:5"
											}
										]
									},
									"documentation": {
										"id": 913,
										"nodeType": "StructuredDocumentation",
										"src": "1103:269:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1387:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1399:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "1391:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1391:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1410:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "1402:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1402:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1390:22:5"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "1436:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1436:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:9:5"
									},
									"scope": 1079,
									"src": "1378:136:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 956,
										"nodeType": "Block",
										"src": "1912:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 942,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "1931:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 943,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 932,
																"src": "1936:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1931:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 945,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "1939:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 941,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1923:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1923:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 947,
												"nodeType": "ExpressionStatement",
												"src": "1923:29:5"
											},
											{
												"assignments": [
													949
												],
												"declarations": [
													{
														"constant": false,
														"id": 949,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1971:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 956,
														"src": "1963:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 948,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1963:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 953,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 950,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "1975:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 951,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "1979:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1975:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1963:17:5"
											},
											{
												"expression": {
													"id": 954,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 949,
													"src": "2000:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 940,
												"id": 955,
												"nodeType": "Return",
												"src": "1993:8:5"
											}
										]
									},
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "1522:289:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1826:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1838:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "1830:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1849:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "1841:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1841:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1866:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "1852:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 935,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1852:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1829:50:5"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "1903:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1902:9:5"
									},
									"scope": 1079,
									"src": "1817:192:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "2335:404:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 967,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "2571:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 968,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2576:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2571:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 973,
												"nodeType": "IfStatement",
												"src": "2567:47:5",
												"trueBody": {
													"id": 972,
													"nodeType": "Block",
													"src": "2579:35:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2601:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 966,
															"id": 971,
															"nodeType": "Return",
															"src": "2594:8:5"
														}
													]
												}
											},
											{
												"assignments": [
													975
												],
												"declarations": [
													{
														"constant": false,
														"id": 975,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2634:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 991,
														"src": "2626:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 974,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2626:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 979,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 976,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "2638:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 977,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "2642:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2638:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2626:17:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 981,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 975,
																	"src": "2662:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 982,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 960,
																	"src": "2666:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2662:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 984,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "2671:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2662:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2674:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 980,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2654:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2654:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "2654:56:5"
											},
											{
												"expression": {
													"id": 989,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 975,
													"src": "2730:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 966,
												"id": 990,
												"nodeType": "Return",
												"src": "2723:8:5"
											}
										]
									},
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "2017:245:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "2277:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2289:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "2281:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2281:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2300:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "2292:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2292:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2280:22:5"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "2326:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:9:5"
									},
									"scope": 1079,
									"src": "2268:471:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "3282:65:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1003,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "3304:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1004,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "3307:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3310:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 1002,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1009,
															1037
														],
														"referencedDeclaration": 1037,
														"src": "3300:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3300:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1001,
												"id": 1007,
												"nodeType": "Return",
												"src": "3293:46:5"
											}
										]
									},
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "2747:462:5",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3224:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3236:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "3228:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3228:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3247:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "3239:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3239:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3227:22:5"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "3273:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3273:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3272:9:5"
									},
									"scope": 1079,
									"src": "3215:132:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1036,
										"nodeType": "Block",
										"src": "3938:183:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1022,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "3957:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3961:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3957:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1025,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "3964:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1021,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3949:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3949:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "3949:28:5"
											},
											{
												"assignments": [
													1029
												],
												"declarations": [
													{
														"constant": false,
														"id": 1029,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "3996:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 1036,
														"src": "3988:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1028,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3988:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1033,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1030,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "4000:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1031,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "4004:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4000:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3988:17:5"
											},
											{
												"expression": {
													"id": 1034,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1029,
													"src": "4112:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1020,
												"id": 1035,
												"nodeType": "Return",
												"src": "4105:8:5"
											}
										]
									},
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "3355:482:5",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3852:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3864:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "3856:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3856:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3875:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "3867:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3867:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3892:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "3878:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1015,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3878:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3855:50:5"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "3929:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3929:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3928:9:5"
									},
									"scope": 1079,
									"src": "3843:278:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1053,
										"nodeType": "Block",
										"src": "4653:63:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1048,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "4675:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1049,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "4678:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4681:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 1047,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1054,
															1078
														],
														"referencedDeclaration": 1078,
														"src": "4671:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4671:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1046,
												"id": 1052,
												"nodeType": "Return",
												"src": "4664:44:5"
											}
										]
									},
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "4129:451:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4595:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4607:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "4599:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4599:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4618:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "4610:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4610:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4598:22:5"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "4644:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4644:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4643:9:5"
									},
									"scope": 1079,
									"src": "4586:130:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "5296:71:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1067,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "5315:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5320:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5315:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1070,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "5323:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1066,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5307:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5307:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "5307:29:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1073,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "5354:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1074,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "5358:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5354:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1065,
												"id": 1076,
												"nodeType": "Return",
												"src": "5347:12:5"
											}
										]
									},
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "4724:471:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "5210:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5222:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "5214:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5214:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5233:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "5225:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5225:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5250:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "5236:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1060,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5236:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5213:50:5"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "5287:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5287:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5286:9:5"
									},
									"scope": 1079,
									"src": "5201:166:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1080,
							"src": "651:4719:5",
							"usedErrors": []
						}
					],
					"src": "37:5335:5"
				},
				"id": 5
			}
		}
	}
}