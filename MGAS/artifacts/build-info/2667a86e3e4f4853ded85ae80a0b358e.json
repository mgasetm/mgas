{
	"id": "2667a86e3e4f4853ded85ae80a0b358e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"MGAS/MGAS.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\nimport \"MGAS/Context.sol\";\r\nimport \"MGAS/IBEP20.sol\";\r\nimport \"MGAS/ISwap.sol\";\r\nimport \"MGAS/Initializable.sol\";\r\nimport \"MGAS/SafeMath.sol\";\r\n\r\ncontract MGAS is Context, IBEP20, ISwap, Initializable {\r\n    using SafeMath for uint256;\r\n\r\n    mapping (address => uint256) private _balances;\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n    uint256 private _totalSupply = 100000000000000000000000000;\r\n    string private _name = \"MGAS\";\r\n    string private _symbol = \"MGAS\";\r\n    uint8 private _decimals = 18;\r\n    \r\n\r\n    address private _owner;\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    bool private _mintable;\r\n\r\n    constructor()  {\r\n        _balances[msg.sender] = _totalSupply;\r\n        _owner = msg.sender;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev sets initials supply and the owner\r\n     */\r\n    // function initialize(string memory name, string memory symbol, uint8 decimals, uint256 amount, bool mintable,\r\n    //  address owner) \r\n    // public initializer {\r\n    //     _owner = owner;\r\n    //     _name = name;\r\n    //     _symbol = symbol;\r\n    //     _decimals = decimals;\r\n    //     _mintable = mintable;\r\n    //     _mint(owner, amount);\r\n    // }\r\n\r\n    /**\r\n    * @dev Leaves the contract without owner. It will not be possible to call\r\n    * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n    *\r\n    * NOTE: Renouncing ownership will leave the contract without an owner,\r\n    * thereby removing any functionality that is only available to the owner.\r\n    */\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns if the token is mintable or not\r\n     */\r\n    function mintable() external view returns (bool) {\r\n        return _mintable;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external override view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() external override view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() external override view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n    * @dev Returns the token name.\r\n    */\r\n    function name() external override view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-totalSupply}.\r\n     */\r\n    function totalSupply() external override view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) external override view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `recipient` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external override returns (bool) {\r\n\r\n        _transfer(_msgSender(), recipient, amount);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) external override view returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-approve}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) external override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {BEP20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {BEP20};\r\n     *\r\n     * Requirements:\r\n     * - `sender` and `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for `sender`'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {BEP20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {BEP20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\r\n     * the total supply.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `msg.sender` must be the token owner\r\n     * - `_mintable` must be true\r\n     */\r\n    function mint(uint256 amount) public onlyOwner returns (bool) {\r\n        require(_mintable, \"this token is not mintable\");\r\n        _mint(_msgSender(), amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Creates `amount` tokens and assigns them to `recipient`, increasing\r\n     * the total supply.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `msg.sender` must be the token owner\r\n     * - `_mintable` must be true\r\n     */\r\n    function mintTo(uint256 amount, address recipient) override external onlyOwner returns (bool) {\r\n        require(_mintable, \"this token is not mintable\");\r\n        _mint(recipient, amount);\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n    * @dev Burn `amount` tokens and decreasing the total supply.\r\n    */\r\n    function burn(uint256 amount) override external returns (bool) {\r\n        _burn(_msgSender(), amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n     *\r\n     * This is internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` cannot be the zero address.\r\n     * - `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(address sender, address recipient, uint256 amount) internal {\r\n        require(sender != address(0), \"BEP20: transfer from the zero address\");\r\n        require(recipient != address(0), \"BEP20: transfer to the zero address\");\r\n\r\n        _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal {\r\n        require(account != address(0), \"BEP20: mint to the zero address\");\r\n\r\n        _totalSupply = _totalSupply.add(amount);\r\n        _balances[account] = _balances[account].add(amount);\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal {\r\n        require(account != address(0), \"BEP20: burn from the zero address\");\r\n\r\n        _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\r\n        _totalSupply = _totalSupply.sub(amount);\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\r\n     *\r\n     * This is internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(address owner, address spender, uint256 amount) internal {\r\n        require(owner != address(0), \"BEP20: approve from the zero address\");\r\n        require(spender != address(0), \"BEP20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\r\n     * from the caller's allowance.\r\n     *\r\n     * See {_burn} and {_approve}.\r\n     */\r\n    function _burnFrom(address account, uint256 amount) internal {\r\n        _burn(account, amount);\r\n        _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\r\n    }\r\n}"
			},
			"MGAS/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n"
			},
			"MGAS/Initializable.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\n/**\r\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\r\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\r\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\r\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\r\n * \r\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\r\n * possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.\r\n * \r\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\r\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\r\n */\r\nabstract contract Initializable {\r\n\r\n    /**\r\n     * @dev Indicates that the contract has been initialized.\r\n     */\r\n    bool private _initialized;\r\n\r\n    /**\r\n     * @dev Indicates that the contract is in the process of being initialized.\r\n     */\r\n    bool private _initializing;\r\n\r\n    /**\r\n     * @dev Modifier to protect an initializer function from being invoked twice.\r\n     */\r\n    modifier initializer() {\r\n        require(_initializing || _isConstructor() || !_initialized, \"Initializable: contract is already initialized\");\r\n\r\n        bool isTopLevelCall = !_initializing;\r\n        if (isTopLevelCall) {\r\n            _initializing = true;\r\n            _initialized = true;\r\n        }\r\n\r\n        _;\r\n\r\n        if (isTopLevelCall) {\r\n            _initializing = false;\r\n        }\r\n    }\r\n\r\n    /// @dev Returns true if and only if the function is running in the constructor\r\n    function _isConstructor() private view returns (bool) {\r\n        // extcodesize checks the size of the code stored in an address, and\r\n        // address returns the current address. Since the code is still not\r\n        // deployed when running a constructor, any checks on its code size will\r\n        // yield zero, making it an effective way to detect if a contract is\r\n        // under construction or not.\r\n        address self = address(this);\r\n        uint256 cs;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { cs := extcodesize(self) }\r\n        return cs == 0;\r\n    }\r\n}\r\n"
			},
			"MGAS/ISwap.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\n\r\ninterface ISwap {\r\n    /**\r\n     * @dev Creates `amount` tokens and assigns them to `recipient`, increasing\r\n     * the total supply.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `msg.sender` must be the token owner\r\n     * - `_mintable` must be true\r\n     */\r\n    function mintTo(uint256 amount, address recipient) external returns (bool);\r\n\r\n    /**\r\n    * @dev Burn `amount` tokens and decreasing the total supply.\r\n    */\r\n    function burn(uint256 amount) external returns (bool);\r\n}"
			},
			"MGAS/IBEP20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\n\r\ninterface IBEP20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the token decimals.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n\r\n    /**\r\n     * @dev Returns the token symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n    * @dev Returns the token name.\r\n    */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the bep token owner.\r\n     */\r\n    function getOwner() external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n"
			},
			"MGAS/Context.sol": {
				"content": "\r\n// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"MGAS/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MGAS/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"MGAS/Context.sol\":{\"keccak256\":\"0x3110a86c43c9717226d50d1eb7ca1d114bdef57a6d2badeb07a63a434aa1743a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ec11ed416004616703423f3331bfa1d05010366754d9f782ade294f672848a74\",\"dweb:/ipfs/QmT72NQ4EUjtwsKXno5mymH7JFtfJugH1pmdPzxStARNGP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MGAS/IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MGAS/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"MGAS/IBEP20.sol\":{\"keccak256\":\"0x935c73cf79b8e56fa41ac0578a8203b0f5d7081783c513666e9a41c34704cbbe\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dc4a0b2c2e6efcb04f7ef1ce084494609dc704f34dc6ea68b7d7c505d6e186d7\",\"dweb:/ipfs/QmbU76Q2D3WWAngexDja62Y5RkmXULsRhU9uiF2jrz6EZo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MGAS/ISwap.sol": {
				"ISwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "mintTo",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(uint256)": {
								"details": "Burn `amount` tokens and decreasing the total supply."
							},
							"mintTo(uint256,address)": {
								"details": "Creates `amount` tokens and assigns them to `recipient`, increasing the total supply. Requirements - `msg.sender` must be the token owner - `_mintable` must be true"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(uint256)": "42966c68",
							"mintTo(uint256,address)": "b723b34e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"mintTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(uint256)\":{\"details\":\"Burn `amount` tokens and decreasing the total supply.\"},\"mintTo(uint256,address)\":{\"details\":\"Creates `amount` tokens and assigns them to `recipient`, increasing the total supply. Requirements - `msg.sender` must be the token owner - `_mintable` must be true\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MGAS/ISwap.sol\":\"ISwap\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"MGAS/ISwap.sol\":{\"keccak256\":\"0x6db62b458b233970b0e5aa5f00191595628084e794d1e8ac43292b4f088876ce\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://82293cdd6c6d5a2e61f6b1b0849aa90e3c4f7f00cce909d679e0dadf18d05069\",\"dweb:/ipfs/QmfPSHUrbxJd2SsFCMwnBmmpfefi3niuvqr8x6NqdCxXkP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MGAS/Initializable.sol": {
				"Initializable": {
					"abi": [],
					"devdoc": {
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.  TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.  CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.  TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.  CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MGAS/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"MGAS/Initializable.sol\":{\"keccak256\":\"0xd569f2bd435d41a4d17b12e05c5de9920971489137a383abe1499a5c38bf3658\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://348c23a3a0f94698965bb37bd5a6e9d32f3bffd9827d2eb2b9207fefe731fb07\",\"dweb:/ipfs/QmSE7edvrJiCCnsNnPJNAU4K8RuAcj9EkHgRmP6MwEvokV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 150,
								"contract": "MGAS/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 153,
								"contract": "MGAS/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MGAS/MGAS.sol": {
				"MGAS": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "mintTo",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintable",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burn `amount` tokens and decreasing the total supply."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner - `_mintable` must be true"
							},
							"mintTo(uint256,address)": {
								"details": "Creates `amount` tokens and assigns them to `recipient`, increasing the total supply. Requirements - `msg.sender` must be the token owner - `_mintable` must be true"
							},
							"mintable()": {
								"details": "Returns if the token is mintable or not"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MGAS/MGAS.sol\":216:11184  contract MGAS is Context, IBEP20, ISwap, Initializable {... */\n  mstore(0x40, 0x80)\n    /* \"MGAS/MGAS.sol\":473:500  100000000000000000000000000 */\n  0x52b7d2dcc80cd2e4000000\n    /* \"MGAS/MGAS.sol\":442:500  uint256 private _totalSupply = 100000000000000000000000000 */\n  0x03\n  sstore\n    /* \"MGAS/MGAS.sol\":507:536  string private _name = \"MGAS\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4d47415300000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x04\n  swap1\n  dup2\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"MGAS/MGAS.sol\":543:574  string private _symbol = \"MGAS\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4d47415300000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x05\n  swap1\n  dup2\n  tag_3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_3:\n  pop\n    /* \"MGAS/MGAS.sol\":607:609  18 */\n  0x12\n    /* \"MGAS/MGAS.sol\":581:609  uint8 private _decimals = 18 */\n  0x06\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"MGAS/MGAS.sol\":776:876  constructor()  {... */\n  callvalue\n  dup1\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  pop\n    /* \"MGAS/MGAS.sol\":826:838  _totalSupply */\n  sload(0x03)\n    /* \"MGAS/MGAS.sol\":802:811  _balances */\n  0x01\n    /* \"MGAS/MGAS.sol\":802:823  _balances[msg.sender] */\n  0x00\n    /* \"MGAS/MGAS.sol\":812:822  msg.sender */\n  caller\n    /* \"MGAS/MGAS.sol\":802:823  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"MGAS/MGAS.sol\":802:838  _balances[msg.sender] = _totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"MGAS/MGAS.sol\":858:868  msg.sender */\n  caller\n    /* \"MGAS/MGAS.sol\":849:855  _owner */\n  0x06\n  0x01\n    /* \"MGAS/MGAS.sol\":849:868  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"MGAS/MGAS.sol\":216:11184  contract MGAS is Context, IBEP20, ISwap, Initializable {... */\n  jump(tag_7)\n    /* \"#utility.yul\":7:106   */\ntag_8:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_9:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_10:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_11:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_33:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_35\n  tag_10\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":714:798   */\ntag_34:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_12:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_13:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_14:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_15:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_40\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_14\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1429:1468   */\n  tag_41\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_14\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_16:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_17:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_18:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_45\n    /* \"#utility.yul\":1818:1852   */\n  tag_46\n    /* \"#utility.yul\":1827:1851   */\n  tag_47\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_16\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1818:1852   */\n  tag_17\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1800:1853   */\n  tag_16\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_19:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_20:\n    /* \"#utility.yul\":2056:2095   */\n  tag_50\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_18\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":2117:2208   */\n  tag_51\n    /* \"#utility.yul\":2166:2207   */\n  tag_52\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_19\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_15\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_21:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_22:\n    /* \"#utility.yul\":2377:2409   */\n  tag_55\n  tag_21\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2418:2483   */\n  tag_56\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_20\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_23:\n    /* \"#utility.yul\":2555:2675   */\ntag_58:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_61\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_22\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_58)\ntag_60:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_24:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_64\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_12\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2906:2935   */\n  tag_65\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_13\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_66:\n    /* \"#utility.yul\":3133:3213   */\n  tag_67\n    /* \"#utility.yul\":3189:3211   */\n  tag_68\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_13\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_23\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_63:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_25:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_26:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_71\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_25\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_27:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_73\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_26\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_2:\n    /* \"#utility.yul\":3950:3987   */\n  tag_75\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_8\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_77\n  tag_9\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":4038:4094   */\ntag_76:\n    /* \"#utility.yul\":4118:4156   */\n  tag_78\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_11\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":4203:4270   */\n  tag_79\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_24\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_81\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_82:\n    /* \"#utility.yul\":5144:5211   */\n  tag_83\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_27\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_80)\n    /* \"#utility.yul\":4365:4983   */\ntag_81:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_84\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_12\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_85:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_85)\ntag_87:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_89\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_26\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_88:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_80:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"MGAS/MGAS.sol\":216:11184  contract MGAS is Context, IBEP20, ISwap, Initializable {... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MGAS/MGAS.sol\":216:11184  contract MGAS is Context, IBEP20, ISwap, Initializable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb723b34e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x313ce567\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4bf365df\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"MGAS/MGAS.sol\":3108:3202  function name() external override view returns (string memory) {... */\n    tag_3:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/MGAS.sol\":4289:4452  function approve(address spender, uint256 amount) external override returns (bool) {... */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/MGAS.sol\":3266:3368  function totalSupply() external override view returns (uint256) {... */\n    tag_5:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/MGAS.sol\":4923:5238  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n    tag_6:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/MGAS.sol\":2790:2884  function decimals() external override view returns (uint8) {... */\n    tag_7:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/MGAS.sol\":5646:5856  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_8:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/MGAS.sol\":7624:7755  function burn(uint256 amount) override external returns (bool) {... */\n    tag_9:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/MGAS.sol\":2478:2562  function mintable() external view returns (bool) {... */\n    tag_10:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/MGAS.sol\":3430:3551  function balanceOf(address account) external override view returns (uint256) {... */\n    tag_11:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/MGAS.sol\":1868:2008  function renounceOwnership() public onlyOwner {... */\n    tag_12:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      stop\n        /* \"MGAS/MGAS.sol\":2630:2723  function getOwner() external override view returns (address) {... */\n    tag_13:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/MGAS.sol\":2949:3047  function symbol() external override view returns (string memory) {... */\n    tag_14:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/MGAS.sol\":6872:7061  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_15:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/MGAS.sol\":6358:6619  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_16:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/MGAS.sol\":3763:3936  function transfer(address recipient, uint256 amount) external override returns (bool) {... */\n    tag_17:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/MGAS.sol\":7313:7531  function mintTo(uint256 amount, address recipient) override external onlyOwner returns (bool) {... */\n    tag_18:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/MGAS.sol\":3998:4143  function allowance(address owner, address spender) external override view returns (uint256) {... */\n    tag_19:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      tag_93\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MGAS/MGAS.sol\":2163:2399  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_20:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      stop\n        /* \"MGAS/MGAS.sol\":3108:3202  function name() external override view returns (string memory) {... */\n    tag_25:\n        /* \"MGAS/MGAS.sol\":3156:3169  string memory */\n      0x60\n        /* \"MGAS/MGAS.sol\":3189:3194  _name */\n      0x04\n        /* \"MGAS/MGAS.sol\":3182:3194  return _name */\n      dup1\n      sload\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_100\n      jump\t// in\n    tag_101:\n      dup1\n      iszero\n      tag_102\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_103\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_102)\n    tag_103:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_104:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_104\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_102:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"MGAS/MGAS.sol\":3108:3202  function name() external override view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"MGAS/MGAS.sol\":4289:4452  function approve(address spender, uint256 amount) external override returns (bool) {... */\n    tag_31:\n        /* \"MGAS/MGAS.sol\":4366:4370  bool */\n      0x00\n        /* \"MGAS/MGAS.sol\":4383:4422  _approve(_msgSender(), spender, amount) */\n      tag_106\n        /* \"MGAS/MGAS.sol\":4392:4404  _msgSender() */\n      tag_107\n        /* \"MGAS/MGAS.sol\":4392:4402  _msgSender */\n      tag_108\n        /* \"MGAS/MGAS.sol\":4392:4404  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"MGAS/MGAS.sol\":4406:4413  spender */\n      dup5\n        /* \"MGAS/MGAS.sol\":4415:4421  amount */\n      dup5\n        /* \"MGAS/MGAS.sol\":4383:4391  _approve */\n      tag_109\n        /* \"MGAS/MGAS.sol\":4383:4422  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_106:\n        /* \"MGAS/MGAS.sol\":4440:4444  true */\n      0x01\n        /* \"MGAS/MGAS.sol\":4433:4444  return true */\n      swap1\n      pop\n        /* \"MGAS/MGAS.sol\":4289:4452  function approve(address spender, uint256 amount) external override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MGAS/MGAS.sol\":3266:3368  function totalSupply() external override view returns (uint256) {... */\n    tag_35:\n        /* \"MGAS/MGAS.sol\":3321:3328  uint256 */\n      0x00\n        /* \"MGAS/MGAS.sol\":3348:3360  _totalSupply */\n      sload(0x03)\n        /* \"MGAS/MGAS.sol\":3341:3360  return _totalSupply */\n      swap1\n      pop\n        /* \"MGAS/MGAS.sol\":3266:3368  function totalSupply() external override view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"MGAS/MGAS.sol\":4923:5238  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n    tag_41:\n        /* \"MGAS/MGAS.sol\":5023:5027  bool */\n      0x00\n        /* \"MGAS/MGAS.sol\":5040:5076  _transfer(sender, recipient, amount) */\n      tag_112\n        /* \"MGAS/MGAS.sol\":5050:5056  sender */\n      dup5\n        /* \"MGAS/MGAS.sol\":5058:5067  recipient */\n      dup5\n        /* \"MGAS/MGAS.sol\":5069:5075  amount */\n      dup5\n        /* \"MGAS/MGAS.sol\":5040:5049  _transfer */\n      tag_113\n        /* \"MGAS/MGAS.sol\":5040:5076  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_112:\n        /* \"MGAS/MGAS.sol\":5087:5208  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      tag_114\n        /* \"MGAS/MGAS.sol\":5096:5102  sender */\n      dup5\n        /* \"MGAS/MGAS.sol\":5104:5116  _msgSender() */\n      tag_115\n        /* \"MGAS/MGAS.sol\":5104:5114  _msgSender */\n      tag_108\n        /* \"MGAS/MGAS.sol\":5104:5116  _msgSender() */\n      jump\t// in\n    tag_115:\n        /* \"MGAS/MGAS.sol\":5118:5207  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      tag_116\n        /* \"MGAS/MGAS.sol\":5156:5162  amount */\n      dup6\n        /* \"MGAS/MGAS.sol\":5118:5207  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n        /* \"MGAS/MGAS.sol\":5118:5129  _allowances */\n      0x02\n        /* \"MGAS/MGAS.sol\":5118:5137  _allowances[sender] */\n      0x00\n        /* \"MGAS/MGAS.sol\":5130:5136  sender */\n      dup12\n        /* \"MGAS/MGAS.sol\":5118:5137  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MGAS/MGAS.sol\":5118:5151  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"MGAS/MGAS.sol\":5138:5150  _msgSender() */\n      tag_117\n        /* \"MGAS/MGAS.sol\":5138:5148  _msgSender */\n      tag_108\n        /* \"MGAS/MGAS.sol\":5138:5150  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"MGAS/MGAS.sol\":5118:5151  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"MGAS/MGAS.sol\":5118:5155  _allowances[sender][_msgSender()].sub */\n      tag_118\n      swap1\n        /* \"MGAS/MGAS.sol\":5118:5207  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_116:\n        /* \"MGAS/MGAS.sol\":5087:5095  _approve */\n      tag_109\n        /* \"MGAS/MGAS.sol\":5087:5208  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_114:\n        /* \"MGAS/MGAS.sol\":5226:5230  true */\n      0x01\n        /* \"MGAS/MGAS.sol\":5219:5230  return true */\n      swap1\n      pop\n        /* \"MGAS/MGAS.sol\":4923:5238  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MGAS/MGAS.sol\":2790:2884  function decimals() external override view returns (uint8) {... */\n    tag_44:\n        /* \"MGAS/MGAS.sol\":2842:2847  uint8 */\n      0x00\n        /* \"MGAS/MGAS.sol\":2867:2876  _decimals */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"MGAS/MGAS.sol\":2860:2876  return _decimals */\n      swap1\n      pop\n        /* \"MGAS/MGAS.sol\":2790:2884  function decimals() external override view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"MGAS/MGAS.sol\":5646:5856  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_49:\n        /* \"MGAS/MGAS.sol\":5726:5730  bool */\n      0x00\n        /* \"MGAS/MGAS.sol\":5743:5826  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_121\n        /* \"MGAS/MGAS.sol\":5752:5764  _msgSender() */\n      tag_122\n        /* \"MGAS/MGAS.sol\":5752:5762  _msgSender */\n      tag_108\n        /* \"MGAS/MGAS.sol\":5752:5764  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"MGAS/MGAS.sol\":5766:5773  spender */\n      dup5\n        /* \"MGAS/MGAS.sol\":5775:5825  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_123\n        /* \"MGAS/MGAS.sol\":5814:5824  addedValue */\n      dup6\n        /* \"MGAS/MGAS.sol\":5775:5786  _allowances */\n      0x02\n        /* \"MGAS/MGAS.sol\":5775:5800  _allowances[_msgSender()] */\n      0x00\n        /* \"MGAS/MGAS.sol\":5787:5799  _msgSender() */\n      tag_124\n        /* \"MGAS/MGAS.sol\":5787:5797  _msgSender */\n      tag_108\n        /* \"MGAS/MGAS.sol\":5787:5799  _msgSender() */\n      jump\t// in\n    tag_124:\n        /* \"MGAS/MGAS.sol\":5775:5800  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MGAS/MGAS.sol\":5775:5809  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"MGAS/MGAS.sol\":5801:5808  spender */\n      dup10\n        /* \"MGAS/MGAS.sol\":5775:5809  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"MGAS/MGAS.sol\":5775:5813  _allowances[_msgSender()][spender].add */\n      tag_125\n      swap1\n        /* \"MGAS/MGAS.sol\":5775:5825  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_123:\n        /* \"MGAS/MGAS.sol\":5743:5751  _approve */\n      tag_109\n        /* \"MGAS/MGAS.sol\":5743:5826  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_121:\n        /* \"MGAS/MGAS.sol\":5844:5848  true */\n      0x01\n        /* \"MGAS/MGAS.sol\":5837:5848  return true */\n      swap1\n      pop\n        /* \"MGAS/MGAS.sol\":5646:5856  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MGAS/MGAS.sol\":7624:7755  function burn(uint256 amount) override external returns (bool) {... */\n    tag_54:\n        /* \"MGAS/MGAS.sol\":7681:7685  bool */\n      0x00\n        /* \"MGAS/MGAS.sol\":7698:7725  _burn(_msgSender(), amount) */\n      tag_127\n        /* \"MGAS/MGAS.sol\":7704:7716  _msgSender() */\n      tag_128\n        /* \"MGAS/MGAS.sol\":7704:7714  _msgSender */\n      tag_108\n        /* \"MGAS/MGAS.sol\":7704:7716  _msgSender() */\n      jump\t// in\n    tag_128:\n        /* \"MGAS/MGAS.sol\":7718:7724  amount */\n      dup4\n        /* \"MGAS/MGAS.sol\":7698:7703  _burn */\n      tag_129\n        /* \"MGAS/MGAS.sol\":7698:7725  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_127:\n        /* \"MGAS/MGAS.sol\":7743:7747  true */\n      0x01\n        /* \"MGAS/MGAS.sol\":7736:7747  return true */\n      swap1\n      pop\n        /* \"MGAS/MGAS.sol\":7624:7755  function burn(uint256 amount) override external returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"MGAS/MGAS.sol\":2478:2562  function mintable() external view returns (bool) {... */\n    tag_57:\n        /* \"MGAS/MGAS.sol\":2521:2525  bool */\n      0x00\n        /* \"MGAS/MGAS.sol\":2545:2554  _mintable */\n      0x06\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"MGAS/MGAS.sol\":2538:2554  return _mintable */\n      swap1\n      pop\n        /* \"MGAS/MGAS.sol\":2478:2562  function mintable() external view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"MGAS/MGAS.sol\":3430:3551  function balanceOf(address account) external override view returns (uint256) {... */\n    tag_62:\n        /* \"MGAS/MGAS.sol\":3498:3505  uint256 */\n      0x00\n        /* \"MGAS/MGAS.sol\":3525:3534  _balances */\n      0x01\n        /* \"MGAS/MGAS.sol\":3525:3543  _balances[account] */\n      0x00\n        /* \"MGAS/MGAS.sol\":3535:3542  account */\n      dup4\n        /* \"MGAS/MGAS.sol\":3525:3543  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"MGAS/MGAS.sol\":3518:3543  return _balances[account] */\n      swap1\n      pop\n        /* \"MGAS/MGAS.sol\":3430:3551  function balanceOf(address account) external override view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"MGAS/MGAS.sol\":1868:2008  function renounceOwnership() public onlyOwner {... */\n    tag_65:\n        /* \"MGAS/MGAS.sol\":1019:1031  _msgSender() */\n      tag_133\n        /* \"MGAS/MGAS.sol\":1019:1029  _msgSender */\n      tag_108\n        /* \"MGAS/MGAS.sol\":1019:1031  _msgSender() */\n      jump\t// in\n    tag_133:\n        /* \"MGAS/MGAS.sol\":1009:1031  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/MGAS.sol\":1009:1015  _owner */\n      0x06\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/MGAS.sol\":1009:1031  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"MGAS/MGAS.sol\":1001:1068  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"MGAS/MGAS.sol\":1967:1968  0 */\n      0x00\n        /* \"MGAS/MGAS.sol\":1930:1970  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/MGAS.sol\":1951:1957  _owner */\n      0x06\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/MGAS.sol\":1930:1970  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"MGAS/MGAS.sol\":1998:1999  0 */\n      0x00\n        /* \"MGAS/MGAS.sol\":1981:1987  _owner */\n      0x06\n      0x01\n        /* \"MGAS/MGAS.sol\":1981:2000  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"MGAS/MGAS.sol\":1868:2008  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"MGAS/MGAS.sol\":2630:2723  function getOwner() external override view returns (address) {... */\n    tag_67:\n        /* \"MGAS/MGAS.sol\":2682:2689  address */\n      0x00\n        /* \"MGAS/MGAS.sol\":2709:2715  _owner */\n      0x06\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/MGAS.sol\":2702:2715  return _owner */\n      swap1\n      pop\n        /* \"MGAS/MGAS.sol\":2630:2723  function getOwner() external override view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"MGAS/MGAS.sol\":2949:3047  function symbol() external override view returns (string memory) {... */\n    tag_71:\n        /* \"MGAS/MGAS.sol\":2999:3012  string memory */\n      0x60\n        /* \"MGAS/MGAS.sol\":3032:3039  _symbol */\n      0x05\n        /* \"MGAS/MGAS.sol\":3025:3039  return _symbol */\n      dup1\n      sload\n      tag_140\n      swap1\n      tag_100\n      jump\t// in\n    tag_140:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_141\n      swap1\n      tag_100\n      jump\t// in\n    tag_141:\n      dup1\n      iszero\n      tag_142\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_143\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_142)\n    tag_143:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_144:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_144\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_142:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"MGAS/MGAS.sol\":2949:3047  function symbol() external override view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"MGAS/MGAS.sol\":6872:7061  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_75:\n        /* \"MGAS/MGAS.sol\":6928:6932  bool */\n      0x00\n        /* \"MGAS/MGAS.sol\":1019:1031  _msgSender() */\n      tag_146\n        /* \"MGAS/MGAS.sol\":1019:1029  _msgSender */\n      tag_108\n        /* \"MGAS/MGAS.sol\":1019:1031  _msgSender() */\n      jump\t// in\n    tag_146:\n        /* \"MGAS/MGAS.sol\":1009:1031  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/MGAS.sol\":1009:1015  _owner */\n      0x06\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/MGAS.sol\":1009:1031  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"MGAS/MGAS.sol\":1001:1068  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_136\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"MGAS/MGAS.sol\":6953:6962  _mintable */\n      0x06\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"MGAS/MGAS.sol\":6945:6993  require(_mintable, \"this token is not mintable\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"MGAS/MGAS.sol\":7004:7031  _mint(_msgSender(), amount) */\n      tag_153\n        /* \"MGAS/MGAS.sol\":7010:7022  _msgSender() */\n      tag_154\n        /* \"MGAS/MGAS.sol\":7010:7020  _msgSender */\n      tag_108\n        /* \"MGAS/MGAS.sol\":7010:7022  _msgSender() */\n      jump\t// in\n    tag_154:\n        /* \"MGAS/MGAS.sol\":7024:7030  amount */\n      dup4\n        /* \"MGAS/MGAS.sol\":7004:7009  _mint */\n      tag_155\n        /* \"MGAS/MGAS.sol\":7004:7031  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_153:\n        /* \"MGAS/MGAS.sol\":7049:7053  true */\n      0x01\n        /* \"MGAS/MGAS.sol\":7042:7053  return true */\n      swap1\n      pop\n        /* \"MGAS/MGAS.sol\":6872:7061  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"MGAS/MGAS.sol\":6358:6619  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_79:\n        /* \"MGAS/MGAS.sol\":6443:6447  bool */\n      0x00\n        /* \"MGAS/MGAS.sol\":6460:6589  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      tag_157\n        /* \"MGAS/MGAS.sol\":6469:6481  _msgSender() */\n      tag_158\n        /* \"MGAS/MGAS.sol\":6469:6479  _msgSender */\n      tag_108\n        /* \"MGAS/MGAS.sol\":6469:6481  _msgSender() */\n      jump\t// in\n    tag_158:\n        /* \"MGAS/MGAS.sol\":6483:6490  spender */\n      dup5\n        /* \"MGAS/MGAS.sol\":6492:6588  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      tag_159\n        /* \"MGAS/MGAS.sol\":6531:6546  subtractedValue */\n      dup6\n        /* \"MGAS/MGAS.sol\":6492:6588  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"MGAS/MGAS.sol\":6492:6503  _allowances */\n      0x02\n        /* \"MGAS/MGAS.sol\":6492:6517  _allowances[_msgSender()] */\n      0x00\n        /* \"MGAS/MGAS.sol\":6504:6516  _msgSender() */\n      tag_160\n        /* \"MGAS/MGAS.sol\":6504:6514  _msgSender */\n      tag_108\n        /* \"MGAS/MGAS.sol\":6504:6516  _msgSender() */\n      jump\t// in\n    tag_160:\n        /* \"MGAS/MGAS.sol\":6492:6517  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MGAS/MGAS.sol\":6492:6526  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"MGAS/MGAS.sol\":6518:6525  spender */\n      dup11\n        /* \"MGAS/MGAS.sol\":6492:6526  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"MGAS/MGAS.sol\":6492:6530  _allowances[_msgSender()][spender].sub */\n      tag_118\n      swap1\n        /* \"MGAS/MGAS.sol\":6492:6588  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_159:\n        /* \"MGAS/MGAS.sol\":6460:6468  _approve */\n      tag_109\n        /* \"MGAS/MGAS.sol\":6460:6589  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_157:\n        /* \"MGAS/MGAS.sol\":6607:6611  true */\n      0x01\n        /* \"MGAS/MGAS.sol\":6600:6611  return true */\n      swap1\n      pop\n        /* \"MGAS/MGAS.sol\":6358:6619  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MGAS/MGAS.sol\":3763:3936  function transfer(address recipient, uint256 amount) external override returns (bool) {... */\n    tag_83:\n        /* \"MGAS/MGAS.sol\":3843:3847  bool */\n      0x00\n        /* \"MGAS/MGAS.sol\":3862:3904  _transfer(_msgSender(), recipient, amount) */\n      tag_162\n        /* \"MGAS/MGAS.sol\":3872:3884  _msgSender() */\n      tag_163\n        /* \"MGAS/MGAS.sol\":3872:3882  _msgSender */\n      tag_108\n        /* \"MGAS/MGAS.sol\":3872:3884  _msgSender() */\n      jump\t// in\n    tag_163:\n        /* \"MGAS/MGAS.sol\":3886:3895  recipient */\n      dup5\n        /* \"MGAS/MGAS.sol\":3897:3903  amount */\n      dup5\n        /* \"MGAS/MGAS.sol\":3862:3871  _transfer */\n      tag_113\n        /* \"MGAS/MGAS.sol\":3862:3904  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_162:\n        /* \"MGAS/MGAS.sol\":3924:3928  true */\n      0x01\n        /* \"MGAS/MGAS.sol\":3917:3928  return true */\n      swap1\n      pop\n        /* \"MGAS/MGAS.sol\":3763:3936  function transfer(address recipient, uint256 amount) external override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MGAS/MGAS.sol\":7313:7531  function mintTo(uint256 amount, address recipient) override external onlyOwner returns (bool) {... */\n    tag_88:\n        /* \"MGAS/MGAS.sol\":7401:7405  bool */\n      0x00\n        /* \"MGAS/MGAS.sol\":1019:1031  _msgSender() */\n      tag_165\n        /* \"MGAS/MGAS.sol\":1019:1029  _msgSender */\n      tag_108\n        /* \"MGAS/MGAS.sol\":1019:1031  _msgSender() */\n      jump\t// in\n    tag_165:\n        /* \"MGAS/MGAS.sol\":1009:1031  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/MGAS.sol\":1009:1015  _owner */\n      0x06\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/MGAS.sol\":1009:1031  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"MGAS/MGAS.sol\":1001:1068  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap1\n      tag_136\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"MGAS/MGAS.sol\":7426:7435  _mintable */\n      0x06\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"MGAS/MGAS.sol\":7418:7466  require(_mintable, \"this token is not mintable\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_152\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"MGAS/MGAS.sol\":7477:7501  _mint(recipient, amount) */\n      tag_171\n        /* \"MGAS/MGAS.sol\":7483:7492  recipient */\n      dup3\n        /* \"MGAS/MGAS.sol\":7494:7500  amount */\n      dup5\n        /* \"MGAS/MGAS.sol\":7477:7482  _mint */\n      tag_155\n        /* \"MGAS/MGAS.sol\":7477:7501  _mint(recipient, amount) */\n      jump\t// in\n    tag_171:\n        /* \"MGAS/MGAS.sol\":7519:7523  true */\n      0x01\n        /* \"MGAS/MGAS.sol\":7512:7523  return true */\n      swap1\n      pop\n        /* \"MGAS/MGAS.sol\":7313:7531  function mintTo(uint256 amount, address recipient) override external onlyOwner returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MGAS/MGAS.sol\":3998:4143  function allowance(address owner, address spender) external override view returns (uint256) {... */\n    tag_93:\n        /* \"MGAS/MGAS.sol\":4081:4088  uint256 */\n      0x00\n        /* \"MGAS/MGAS.sol\":4108:4119  _allowances */\n      0x02\n        /* \"MGAS/MGAS.sol\":4108:4126  _allowances[owner] */\n      0x00\n        /* \"MGAS/MGAS.sol\":4120:4125  owner */\n      dup5\n        /* \"MGAS/MGAS.sol\":4108:4126  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MGAS/MGAS.sol\":4108:4135  _allowances[owner][spender] */\n      0x00\n        /* \"MGAS/MGAS.sol\":4127:4134  spender */\n      dup4\n        /* \"MGAS/MGAS.sol\":4108:4135  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"MGAS/MGAS.sol\":4101:4135  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"MGAS/MGAS.sol\":3998:4143  function allowance(address owner, address spender) external override view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MGAS/MGAS.sol\":2163:2399  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_97:\n        /* \"MGAS/MGAS.sol\":1019:1031  _msgSender() */\n      tag_174\n        /* \"MGAS/MGAS.sol\":1019:1029  _msgSender */\n      tag_108\n        /* \"MGAS/MGAS.sol\":1019:1031  _msgSender() */\n      jump\t// in\n    tag_174:\n        /* \"MGAS/MGAS.sol\":1009:1031  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/MGAS.sol\":1009:1015  _owner */\n      0x06\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/MGAS.sol\":1009:1031  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"MGAS/MGAS.sol\":1001:1068  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_136\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"MGAS/MGAS.sol\":2264:2265  0 */\n      0x00\n        /* \"MGAS/MGAS.sol\":2244:2266  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/MGAS.sol\":2244:2252  newOwner */\n      dup2\n        /* \"MGAS/MGAS.sol\":2244:2266  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"MGAS/MGAS.sol\":2236:2309  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"MGAS/MGAS.sol\":2354:2362  newOwner */\n      dup1\n        /* \"MGAS/MGAS.sol\":2325:2363  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/MGAS.sol\":2346:2352  _owner */\n      0x06\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/MGAS.sol\":2325:2363  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"MGAS/MGAS.sol\":2383:2391  newOwner */\n      dup1\n        /* \"MGAS/MGAS.sol\":2374:2380  _owner */\n      0x06\n      0x01\n        /* \"MGAS/MGAS.sol\":2374:2391  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"MGAS/MGAS.sol\":2163:2399  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"MGAS/Context.sol\":619:717  function _msgSender() internal view virtual returns (address) {... */\n    tag_108:\n        /* \"MGAS/Context.sol\":672:679  address */\n      0x00\n        /* \"MGAS/Context.sol\":699:709  msg.sender */\n      caller\n        /* \"MGAS/Context.sol\":692:709  return msg.sender */\n      swap1\n      pop\n        /* \"MGAS/Context.sol\":619:717  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"MGAS/MGAS.sol\":10425:10763  function _approve(address owner, address spender, uint256 amount) internal {... */\n    tag_109:\n        /* \"MGAS/MGAS.sol\":10536:10537  0 */\n      0x00\n        /* \"MGAS/MGAS.sol\":10519:10538  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/MGAS.sol\":10519:10524  owner */\n      dup4\n        /* \"MGAS/MGAS.sol\":10519:10538  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"MGAS/MGAS.sol\":10511:10579  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"MGAS/MGAS.sol\":10617:10618  0 */\n      0x00\n        /* \"MGAS/MGAS.sol\":10598:10619  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/MGAS.sol\":10598:10605  spender */\n      dup3\n        /* \"MGAS/MGAS.sol\":10598:10619  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"MGAS/MGAS.sol\":10590:10658  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"MGAS/MGAS.sol\":10701:10707  amount */\n      dup1\n        /* \"MGAS/MGAS.sol\":10671:10682  _allowances */\n      0x02\n        /* \"MGAS/MGAS.sol\":10671:10689  _allowances[owner] */\n      0x00\n        /* \"MGAS/MGAS.sol\":10683:10688  owner */\n      dup6\n        /* \"MGAS/MGAS.sol\":10671:10689  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MGAS/MGAS.sol\":10671:10698  _allowances[owner][spender] */\n      0x00\n        /* \"MGAS/MGAS.sol\":10690:10697  spender */\n      dup5\n        /* \"MGAS/MGAS.sol\":10671:10698  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MGAS/MGAS.sol\":10671:10707  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MGAS/MGAS.sol\":10739:10746  spender */\n      dup2\n        /* \"MGAS/MGAS.sol\":10723:10755  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/MGAS.sol\":10732:10737  owner */\n      dup4\n        /* \"MGAS/MGAS.sol\":10723:10755  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"MGAS/MGAS.sol\":10748:10754  amount */\n      dup4\n        /* \"MGAS/MGAS.sol\":10723:10755  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_189\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"MGAS/MGAS.sol\":10425:10763  function _approve(address owner, address spender, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MGAS/MGAS.sol\":8245:8716  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_113:\n        /* \"MGAS/MGAS.sol\":8361:8362  0 */\n      0x00\n        /* \"MGAS/MGAS.sol\":8343:8363  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/MGAS.sol\":8343:8349  sender */\n      dup4\n        /* \"MGAS/MGAS.sol\":8343:8363  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"MGAS/MGAS.sol\":8335:8405  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"MGAS/MGAS.sol\":8445:8446  0 */\n      0x00\n        /* \"MGAS/MGAS.sol\":8424:8447  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/MGAS.sol\":8424:8433  recipient */\n      dup3\n        /* \"MGAS/MGAS.sol\":8424:8447  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"MGAS/MGAS.sol\":8416:8487  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_194:\n        /* \"MGAS/MGAS.sol\":8520:8591  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_197\n        /* \"MGAS/MGAS.sol\":8542:8548  amount */\n      dup2\n        /* \"MGAS/MGAS.sol\":8520:8591  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n        /* \"MGAS/MGAS.sol\":8520:8529  _balances */\n      0x01\n        /* \"MGAS/MGAS.sol\":8520:8537  _balances[sender] */\n      0x00\n        /* \"MGAS/MGAS.sol\":8530:8536  sender */\n      dup8\n        /* \"MGAS/MGAS.sol\":8520:8537  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"MGAS/MGAS.sol\":8520:8541  _balances[sender].sub */\n      tag_118\n      swap1\n        /* \"MGAS/MGAS.sol\":8520:8591  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_197:\n        /* \"MGAS/MGAS.sol\":8500:8509  _balances */\n      0x01\n        /* \"MGAS/MGAS.sol\":8500:8517  _balances[sender] */\n      0x00\n        /* \"MGAS/MGAS.sol\":8510:8516  sender */\n      dup6\n        /* \"MGAS/MGAS.sol\":8500:8517  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MGAS/MGAS.sol\":8500:8591  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MGAS/MGAS.sol\":8625:8657  _balances[recipient].add(amount) */\n      tag_198\n        /* \"MGAS/MGAS.sol\":8650:8656  amount */\n      dup2\n        /* \"MGAS/MGAS.sol\":8625:8634  _balances */\n      0x01\n        /* \"MGAS/MGAS.sol\":8625:8645  _balances[recipient] */\n      0x00\n        /* \"MGAS/MGAS.sol\":8635:8644  recipient */\n      dup6\n        /* \"MGAS/MGAS.sol\":8625:8645  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"MGAS/MGAS.sol\":8625:8649  _balances[recipient].add */\n      tag_125\n      swap1\n        /* \"MGAS/MGAS.sol\":8625:8657  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_198:\n        /* \"MGAS/MGAS.sol\":8602:8611  _balances */\n      0x01\n        /* \"MGAS/MGAS.sol\":8602:8622  _balances[recipient] */\n      0x00\n        /* \"MGAS/MGAS.sol\":8612:8621  recipient */\n      dup5\n        /* \"MGAS/MGAS.sol\":8602:8622  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MGAS/MGAS.sol\":8602:8657  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MGAS/MGAS.sol\":8690:8699  recipient */\n      dup2\n        /* \"MGAS/MGAS.sol\":8673:8708  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/MGAS.sol\":8682:8688  sender */\n      dup4\n        /* \"MGAS/MGAS.sol\":8673:8708  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"MGAS/MGAS.sol\":8701:8707  amount */\n      dup4\n        /* \"MGAS/MGAS.sol\":8673:8708  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_199\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"MGAS/MGAS.sol\":8245:8716  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MGAS/SafeMath.sol\":1817:2009  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_118:\n        /* \"MGAS/SafeMath.sol\":1903:1910  uint256 */\n      0x00\n        /* \"MGAS/SafeMath.sol\":1936:1937  a */\n      dup4\n        /* \"MGAS/SafeMath.sol\":1931:1932  b */\n      dup4\n        /* \"MGAS/SafeMath.sol\":1931:1937  b <= a */\n      gt\n      iszero\n        /* \"MGAS/SafeMath.sol\":1939:1951  errorMessage */\n      dup3\n        /* \"MGAS/SafeMath.sol\":1923:1952  require(b <= a, errorMessage) */\n      swap1\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n      pop\n        /* \"MGAS/SafeMath.sol\":1963:1972  uint256 c */\n      0x00\n        /* \"MGAS/SafeMath.sol\":1979:1980  b */\n      dup4\n        /* \"MGAS/SafeMath.sol\":1975:1976  a */\n      dup6\n        /* \"MGAS/SafeMath.sol\":1975:1980  a - b */\n      tag_203\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n        /* \"MGAS/SafeMath.sol\":1963:1980  uint256 c = a - b */\n      swap1\n      pop\n        /* \"MGAS/SafeMath.sol\":2000:2001  c */\n      dup1\n        /* \"MGAS/SafeMath.sol\":1993:2001  return c */\n      swap2\n      pop\n      pop\n        /* \"MGAS/SafeMath.sol\":1817:2009  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MGAS/SafeMath.sol\":914:1095  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_125:\n        /* \"MGAS/SafeMath.sol\":972:979  uint256 */\n      0x00\n        /* \"MGAS/SafeMath.sol\":992:1001  uint256 c */\n      dup1\n        /* \"MGAS/SafeMath.sol\":1008:1009  b */\n      dup3\n        /* \"MGAS/SafeMath.sol\":1004:1005  a */\n      dup5\n        /* \"MGAS/SafeMath.sol\":1004:1009  a + b */\n      tag_206\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"MGAS/SafeMath.sol\":992:1009  uint256 c = a + b */\n      swap1\n      pop\n        /* \"MGAS/SafeMath.sol\":1033:1034  a */\n      dup4\n        /* \"MGAS/SafeMath.sol\":1028:1029  c */\n      dup2\n        /* \"MGAS/SafeMath.sol\":1028:1034  c >= a */\n      lt\n      iszero\n        /* \"MGAS/SafeMath.sol\":1020:1066  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"MGAS/SafeMath.sol\":1086:1087  c */\n      dup1\n        /* \"MGAS/SafeMath.sol\":1079:1087  return c */\n      swap2\n      pop\n      pop\n        /* \"MGAS/SafeMath.sol\":914:1095  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MGAS/MGAS.sol\":9637:9985  function _burn(address account, uint256 amount) internal {... */\n    tag_129:\n        /* \"MGAS/MGAS.sol\":9732:9733  0 */\n      0x00\n        /* \"MGAS/MGAS.sol\":9713:9734  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/MGAS.sol\":9713:9720  account */\n      dup3\n        /* \"MGAS/MGAS.sol\":9713:9734  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"MGAS/MGAS.sol\":9705:9772  require(account != address(0), \"BEP20: burn from the zero address\") */\n      tag_212\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_212:\n        /* \"MGAS/MGAS.sol\":9806:9874  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      tag_215\n        /* \"MGAS/MGAS.sol\":9829:9835  amount */\n      dup2\n        /* \"MGAS/MGAS.sol\":9806:9874  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032\n      0x22\n      swap2\n      codecopy\n        /* \"MGAS/MGAS.sol\":9806:9815  _balances */\n      0x01\n        /* \"MGAS/MGAS.sol\":9806:9824  _balances[account] */\n      0x00\n        /* \"MGAS/MGAS.sol\":9816:9823  account */\n      dup7\n        /* \"MGAS/MGAS.sol\":9806:9824  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"MGAS/MGAS.sol\":9806:9828  _balances[account].sub */\n      tag_118\n      swap1\n        /* \"MGAS/MGAS.sol\":9806:9874  _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_215:\n        /* \"MGAS/MGAS.sol\":9785:9794  _balances */\n      0x01\n        /* \"MGAS/MGAS.sol\":9785:9803  _balances[account] */\n      0x00\n        /* \"MGAS/MGAS.sol\":9795:9802  account */\n      dup5\n        /* \"MGAS/MGAS.sol\":9785:9803  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MGAS/MGAS.sol\":9785:9874  _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MGAS/MGAS.sol\":9900:9924  _totalSupply.sub(amount) */\n      tag_216\n        /* \"MGAS/MGAS.sol\":9917:9923  amount */\n      dup2\n        /* \"MGAS/MGAS.sol\":9900:9912  _totalSupply */\n      sload(0x03)\n        /* \"MGAS/MGAS.sol\":9900:9916  _totalSupply.sub */\n      tag_217\n      swap1\n        /* \"MGAS/MGAS.sol\":9900:9924  _totalSupply.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_216:\n        /* \"MGAS/MGAS.sol\":9885:9897  _totalSupply */\n      0x03\n        /* \"MGAS/MGAS.sol\":9885:9924  _totalSupply = _totalSupply.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MGAS/MGAS.sol\":9966:9967  0 */\n      0x00\n        /* \"MGAS/MGAS.sol\":9940:9977  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/MGAS.sol\":9949:9956  account */\n      dup3\n        /* \"MGAS/MGAS.sol\":9940:9977  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"MGAS/MGAS.sol\":9970:9976  amount */\n      dup4\n        /* \"MGAS/MGAS.sol\":9940:9977  Transfer(account, address(0), amount) */\n      mload(0x40)\n      tag_218\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"MGAS/MGAS.sol\":9637:9985  function _burn(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MGAS/MGAS.sol\":8997:9305  function _mint(address account, uint256 amount) internal {... */\n    tag_155:\n        /* \"MGAS/MGAS.sol\":9092:9093  0 */\n      0x00\n        /* \"MGAS/MGAS.sol\":9073:9094  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/MGAS.sol\":9073:9080  account */\n      dup3\n        /* \"MGAS/MGAS.sol\":9073:9094  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"MGAS/MGAS.sol\":9065:9130  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_220:\n        /* \"MGAS/MGAS.sol\":9158:9182  _totalSupply.add(amount) */\n      tag_223\n        /* \"MGAS/MGAS.sol\":9175:9181  amount */\n      dup2\n        /* \"MGAS/MGAS.sol\":9158:9170  _totalSupply */\n      sload(0x03)\n        /* \"MGAS/MGAS.sol\":9158:9174  _totalSupply.add */\n      tag_125\n      swap1\n        /* \"MGAS/MGAS.sol\":9158:9182  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_223:\n        /* \"MGAS/MGAS.sol\":9143:9155  _totalSupply */\n      0x03\n        /* \"MGAS/MGAS.sol\":9143:9182  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MGAS/MGAS.sol\":9214:9244  _balances[account].add(amount) */\n      tag_224\n        /* \"MGAS/MGAS.sol\":9237:9243  amount */\n      dup2\n        /* \"MGAS/MGAS.sol\":9214:9223  _balances */\n      0x01\n        /* \"MGAS/MGAS.sol\":9214:9232  _balances[account] */\n      0x00\n        /* \"MGAS/MGAS.sol\":9224:9231  account */\n      dup6\n        /* \"MGAS/MGAS.sol\":9214:9232  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"MGAS/MGAS.sol\":9214:9236  _balances[account].add */\n      tag_125\n      swap1\n        /* \"MGAS/MGAS.sol\":9214:9244  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_224:\n        /* \"MGAS/MGAS.sol\":9193:9202  _balances */\n      0x01\n        /* \"MGAS/MGAS.sol\":9193:9211  _balances[account] */\n      0x00\n        /* \"MGAS/MGAS.sol\":9203:9210  account */\n      dup5\n        /* \"MGAS/MGAS.sol\":9193:9211  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MGAS/MGAS.sol\":9193:9244  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MGAS/MGAS.sol\":9281:9288  account */\n      dup2\n        /* \"MGAS/MGAS.sol\":9260:9297  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MGAS/MGAS.sol\":9277:9278  0 */\n      0x00\n        /* \"MGAS/MGAS.sol\":9260:9297  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"MGAS/MGAS.sol\":9290:9296  amount */\n      dup4\n        /* \"MGAS/MGAS.sol\":9260:9297  Transfer(address(0), account, amount) */\n      mload(0x40)\n      tag_225\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"MGAS/MGAS.sol\":8997:9305  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MGAS/SafeMath.sol\":1378:1514  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_217:\n        /* \"MGAS/SafeMath.sol\":1436:1443  uint256 */\n      0x00\n        /* \"MGAS/SafeMath.sol\":1463:1506  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_227\n        /* \"MGAS/SafeMath.sol\":1467:1468  a */\n      dup4\n        /* \"MGAS/SafeMath.sol\":1470:1471  b */\n      dup4\n        /* \"MGAS/SafeMath.sol\":1463:1506  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"MGAS/SafeMath.sol\":1463:1466  sub */\n      tag_118\n        /* \"MGAS/SafeMath.sol\":1463:1506  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_227:\n        /* \"MGAS/SafeMath.sol\":1456:1506  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"MGAS/SafeMath.sol\":1378:1514  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_228:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_229:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_230:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_275:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_275)\n    tag_277:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_231:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_232:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_280\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_228\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":818:889   */\n      tag_281\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_229\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_282\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_230\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":988:1017   */\n      tag_283\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_231\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_27:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_285\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_232\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_234:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_236:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_237:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_291\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_236\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_238:\n        /* \"#utility.yul\":1983:2007   */\n      tag_293\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_237\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_294\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_294:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_239:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_296\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_238\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_240:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_241:\n        /* \"#utility.yul\":2339:2363   */\n      tag_299\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_240\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_300\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_300:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_242:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_302\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_241\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_30:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_305\n      tag_234\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":2632:2751   */\n    tag_304:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_306\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_239\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_307\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_242\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_243:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_244:\n        /* \"#utility.yul\":3196:3217   */\n      tag_310\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_243\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_33:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_312\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_244\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_245:\n        /* \"#utility.yul\":3533:3557   */\n      tag_314\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_240\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_37:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_316\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_245\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_40:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_319\n      tag_234\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":3908:4027   */\n    tag_318:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_320\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_239\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_321\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_239\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_322\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_242\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_246:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_247:\n        /* \"#utility.yul\":4598:4620   */\n      tag_325\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_246\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_46:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_327\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_247\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_53:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_330\n      tag_234\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":4929:5048   */\n    tag_329:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_331\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_242\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5517   */\n    tag_61:\n        /* \"#utility.yul\":5247:5253   */\n      0x00\n        /* \"#utility.yul\":5296:5298   */\n      0x20\n        /* \"#utility.yul\":5284:5293   */\n      dup3\n        /* \"#utility.yul\":5275:5282   */\n      dup5\n        /* \"#utility.yul\":5271:5294   */\n      sub\n        /* \"#utility.yul\":5267:5299   */\n      slt\n        /* \"#utility.yul\":5264:5383   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":5302:5381   */\n      tag_334\n      tag_234\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":5264:5383   */\n    tag_333:\n        /* \"#utility.yul\":5422:5423   */\n      0x00\n        /* \"#utility.yul\":5447:5500   */\n      tag_335\n        /* \"#utility.yul\":5492:5499   */\n      dup5\n        /* \"#utility.yul\":5483:5489   */\n      dup3\n        /* \"#utility.yul\":5472:5481   */\n      dup6\n        /* \"#utility.yul\":5468:5490   */\n      add\n        /* \"#utility.yul\":5447:5500   */\n      tag_239\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":5437:5500   */\n      swap2\n      pop\n        /* \"#utility.yul\":5393:5510   */\n      pop\n        /* \"#utility.yul\":5188:5517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5523:5641   */\n    tag_248:\n        /* \"#utility.yul\":5610:5634   */\n      tag_337\n        /* \"#utility.yul\":5628:5633   */\n      dup2\n        /* \"#utility.yul\":5610:5634   */\n      tag_237\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":5605:5608   */\n      dup3\n        /* \"#utility.yul\":5598:5635   */\n      mstore\n        /* \"#utility.yul\":5523:5641   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5647:5869   */\n    tag_69:\n        /* \"#utility.yul\":5740:5744   */\n      0x00\n        /* \"#utility.yul\":5778:5780   */\n      0x20\n        /* \"#utility.yul\":5767:5776   */\n      dup3\n        /* \"#utility.yul\":5763:5781   */\n      add\n        /* \"#utility.yul\":5755:5781   */\n      swap1\n      pop\n        /* \"#utility.yul\":5791:5862   */\n      tag_339\n        /* \"#utility.yul\":5859:5860   */\n      0x00\n        /* \"#utility.yul\":5848:5857   */\n      dup4\n        /* \"#utility.yul\":5844:5861   */\n      add\n        /* \"#utility.yul\":5835:5841   */\n      dup5\n        /* \"#utility.yul\":5791:5862   */\n      tag_248\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":5647:5869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5875:6349   */\n    tag_87:\n        /* \"#utility.yul\":5943:5949   */\n      0x00\n        /* \"#utility.yul\":5951:5957   */\n      dup1\n        /* \"#utility.yul\":6000:6002   */\n      0x40\n        /* \"#utility.yul\":5988:5997   */\n      dup4\n        /* \"#utility.yul\":5979:5986   */\n      dup6\n        /* \"#utility.yul\":5975:5998   */\n      sub\n        /* \"#utility.yul\":5971:6003   */\n      slt\n        /* \"#utility.yul\":5968:6087   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":6006:6085   */\n      tag_342\n      tag_234\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":5968:6087   */\n    tag_341:\n        /* \"#utility.yul\":6126:6127   */\n      0x00\n        /* \"#utility.yul\":6151:6204   */\n      tag_343\n        /* \"#utility.yul\":6196:6203   */\n      dup6\n        /* \"#utility.yul\":6187:6193   */\n      dup3\n        /* \"#utility.yul\":6176:6185   */\n      dup7\n        /* \"#utility.yul\":6172:6194   */\n      add\n        /* \"#utility.yul\":6151:6204   */\n      tag_242\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":6141:6204   */\n      swap3\n      pop\n        /* \"#utility.yul\":6097:6214   */\n      pop\n        /* \"#utility.yul\":6253:6255   */\n      0x20\n        /* \"#utility.yul\":6279:6332   */\n      tag_344\n        /* \"#utility.yul\":6324:6331   */\n      dup6\n        /* \"#utility.yul\":6315:6321   */\n      dup3\n        /* \"#utility.yul\":6304:6313   */\n      dup7\n        /* \"#utility.yul\":6300:6322   */\n      add\n        /* \"#utility.yul\":6279:6332   */\n      tag_239\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":6269:6332   */\n      swap2\n      pop\n        /* \"#utility.yul\":6224:6342   */\n      pop\n        /* \"#utility.yul\":5875:6349   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6355:6829   */\n    tag_92:\n        /* \"#utility.yul\":6423:6429   */\n      0x00\n        /* \"#utility.yul\":6431:6437   */\n      dup1\n        /* \"#utility.yul\":6480:6482   */\n      0x40\n        /* \"#utility.yul\":6468:6477   */\n      dup4\n        /* \"#utility.yul\":6459:6466   */\n      dup6\n        /* \"#utility.yul\":6455:6478   */\n      sub\n        /* \"#utility.yul\":6451:6483   */\n      slt\n        /* \"#utility.yul\":6448:6567   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":6486:6565   */\n      tag_347\n      tag_234\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":6448:6567   */\n    tag_346:\n        /* \"#utility.yul\":6606:6607   */\n      0x00\n        /* \"#utility.yul\":6631:6684   */\n      tag_348\n        /* \"#utility.yul\":6676:6683   */\n      dup6\n        /* \"#utility.yul\":6667:6673   */\n      dup3\n        /* \"#utility.yul\":6656:6665   */\n      dup7\n        /* \"#utility.yul\":6652:6674   */\n      add\n        /* \"#utility.yul\":6631:6684   */\n      tag_239\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":6621:6684   */\n      swap3\n      pop\n        /* \"#utility.yul\":6577:6694   */\n      pop\n        /* \"#utility.yul\":6733:6735   */\n      0x20\n        /* \"#utility.yul\":6759:6812   */\n      tag_349\n        /* \"#utility.yul\":6804:6811   */\n      dup6\n        /* \"#utility.yul\":6795:6801   */\n      dup3\n        /* \"#utility.yul\":6784:6793   */\n      dup7\n        /* \"#utility.yul\":6780:6802   */\n      add\n        /* \"#utility.yul\":6759:6812   */\n      tag_239\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":6749:6812   */\n      swap2\n      pop\n        /* \"#utility.yul\":6704:6822   */\n      pop\n        /* \"#utility.yul\":6355:6829   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6835:7015   */\n    tag_249:\n        /* \"#utility.yul\":6883:6960   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6880:6881   */\n      0x00\n        /* \"#utility.yul\":6873:6961   */\n      mstore\n        /* \"#utility.yul\":6980:6984   */\n      0x22\n        /* \"#utility.yul\":6977:6978   */\n      0x04\n        /* \"#utility.yul\":6970:6985   */\n      mstore\n        /* \"#utility.yul\":7004:7008   */\n      0x24\n        /* \"#utility.yul\":7001:7002   */\n      0x00\n        /* \"#utility.yul\":6994:7009   */\n      revert\n        /* \"#utility.yul\":7021:7341   */\n    tag_100:\n        /* \"#utility.yul\":7065:7071   */\n      0x00\n        /* \"#utility.yul\":7102:7103   */\n      0x02\n        /* \"#utility.yul\":7096:7100   */\n      dup3\n        /* \"#utility.yul\":7092:7104   */\n      div\n        /* \"#utility.yul\":7082:7104   */\n      swap1\n      pop\n        /* \"#utility.yul\":7149:7150   */\n      0x01\n        /* \"#utility.yul\":7143:7147   */\n      dup3\n        /* \"#utility.yul\":7139:7151   */\n      and\n        /* \"#utility.yul\":7170:7188   */\n      dup1\n        /* \"#utility.yul\":7160:7241   */\n      tag_352\n      jumpi\n        /* \"#utility.yul\":7226:7230   */\n      0x7f\n        /* \"#utility.yul\":7218:7224   */\n      dup3\n        /* \"#utility.yul\":7214:7231   */\n      and\n        /* \"#utility.yul\":7204:7231   */\n      swap2\n      pop\n        /* \"#utility.yul\":7160:7241   */\n    tag_352:\n        /* \"#utility.yul\":7288:7290   */\n      0x20\n        /* \"#utility.yul\":7280:7286   */\n      dup3\n        /* \"#utility.yul\":7277:7291   */\n      lt\n        /* \"#utility.yul\":7257:7275   */\n      dup2\n        /* \"#utility.yul\":7254:7292   */\n      sub\n        /* \"#utility.yul\":7251:7335   */\n      tag_353\n      jumpi\n        /* \"#utility.yul\":7307:7325   */\n      tag_354\n      tag_249\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":7251:7335   */\n    tag_353:\n        /* \"#utility.yul\":7072:7341   */\n      pop\n        /* \"#utility.yul\":7021:7341   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7347:7529   */\n    tag_250:\n        /* \"#utility.yul\":7487:7521   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7483:7484   */\n      0x00\n        /* \"#utility.yul\":7475:7481   */\n      dup3\n        /* \"#utility.yul\":7471:7485   */\n      add\n        /* \"#utility.yul\":7464:7522   */\n      mstore\n        /* \"#utility.yul\":7347:7529   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7535:7901   */\n    tag_251:\n        /* \"#utility.yul\":7677:7680   */\n      0x00\n        /* \"#utility.yul\":7698:7765   */\n      tag_357\n        /* \"#utility.yul\":7762:7764   */\n      0x20\n        /* \"#utility.yul\":7757:7760   */\n      dup4\n        /* \"#utility.yul\":7698:7765   */\n      tag_229\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":7691:7765   */\n      swap2\n      pop\n        /* \"#utility.yul\":7774:7867   */\n      tag_358\n        /* \"#utility.yul\":7863:7866   */\n      dup3\n        /* \"#utility.yul\":7774:7867   */\n      tag_250\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":7892:7894   */\n      0x20\n        /* \"#utility.yul\":7887:7890   */\n      dup3\n        /* \"#utility.yul\":7883:7895   */\n      add\n        /* \"#utility.yul\":7876:7895   */\n      swap1\n      pop\n        /* \"#utility.yul\":7535:7901   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7907:8326   */\n    tag_136:\n        /* \"#utility.yul\":8073:8077   */\n      0x00\n        /* \"#utility.yul\":8111:8113   */\n      0x20\n        /* \"#utility.yul\":8100:8109   */\n      dup3\n        /* \"#utility.yul\":8096:8114   */\n      add\n        /* \"#utility.yul\":8088:8114   */\n      swap1\n      pop\n        /* \"#utility.yul\":8160:8169   */\n      dup2\n        /* \"#utility.yul\":8154:8158   */\n      dup2\n        /* \"#utility.yul\":8150:8170   */\n      sub\n        /* \"#utility.yul\":8146:8147   */\n      0x00\n        /* \"#utility.yul\":8135:8144   */\n      dup4\n        /* \"#utility.yul\":8131:8148   */\n      add\n        /* \"#utility.yul\":8124:8171   */\n      mstore\n        /* \"#utility.yul\":8188:8319   */\n      tag_360\n        /* \"#utility.yul\":8314:8318   */\n      dup2\n        /* \"#utility.yul\":8188:8319   */\n      tag_251\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":8180:8319   */\n      swap1\n      pop\n        /* \"#utility.yul\":7907:8326   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8332:8508   */\n    tag_252:\n        /* \"#utility.yul\":8472:8500   */\n      0x7468697320746f6b656e206973206e6f74206d696e7461626c65000000000000\n        /* \"#utility.yul\":8468:8469   */\n      0x00\n        /* \"#utility.yul\":8460:8466   */\n      dup3\n        /* \"#utility.yul\":8456:8470   */\n      add\n        /* \"#utility.yul\":8449:8501   */\n      mstore\n        /* \"#utility.yul\":8332:8508   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8514:8880   */\n    tag_253:\n        /* \"#utility.yul\":8656:8659   */\n      0x00\n        /* \"#utility.yul\":8677:8744   */\n      tag_363\n        /* \"#utility.yul\":8741:8743   */\n      0x1a\n        /* \"#utility.yul\":8736:8739   */\n      dup4\n        /* \"#utility.yul\":8677:8744   */\n      tag_229\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":8670:8744   */\n      swap2\n      pop\n        /* \"#utility.yul\":8753:8846   */\n      tag_364\n        /* \"#utility.yul\":8842:8845   */\n      dup3\n        /* \"#utility.yul\":8753:8846   */\n      tag_252\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":8871:8873   */\n      0x20\n        /* \"#utility.yul\":8866:8869   */\n      dup3\n        /* \"#utility.yul\":8862:8874   */\n      add\n        /* \"#utility.yul\":8855:8874   */\n      swap1\n      pop\n        /* \"#utility.yul\":8514:8880   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8886:9305   */\n    tag_152:\n        /* \"#utility.yul\":9052:9056   */\n      0x00\n        /* \"#utility.yul\":9090:9092   */\n      0x20\n        /* \"#utility.yul\":9079:9088   */\n      dup3\n        /* \"#utility.yul\":9075:9093   */\n      add\n        /* \"#utility.yul\":9067:9093   */\n      swap1\n      pop\n        /* \"#utility.yul\":9139:9148   */\n      dup2\n        /* \"#utility.yul\":9133:9137   */\n      dup2\n        /* \"#utility.yul\":9129:9149   */\n      sub\n        /* \"#utility.yul\":9125:9126   */\n      0x00\n        /* \"#utility.yul\":9114:9123   */\n      dup4\n        /* \"#utility.yul\":9110:9127   */\n      add\n        /* \"#utility.yul\":9103:9150   */\n      mstore\n        /* \"#utility.yul\":9167:9298   */\n      tag_366\n        /* \"#utility.yul\":9293:9297   */\n      dup2\n        /* \"#utility.yul\":9167:9298   */\n      tag_253\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":9159:9298   */\n      swap1\n      pop\n        /* \"#utility.yul\":8886:9305   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9311:9536   */\n    tag_254:\n        /* \"#utility.yul\":9451:9485   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":9447:9448   */\n      0x00\n        /* \"#utility.yul\":9439:9445   */\n      dup3\n        /* \"#utility.yul\":9435:9449   */\n      add\n        /* \"#utility.yul\":9428:9486   */\n      mstore\n        /* \"#utility.yul\":9520:9528   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9515:9517   */\n      0x20\n        /* \"#utility.yul\":9507:9513   */\n      dup3\n        /* \"#utility.yul\":9503:9518   */\n      add\n        /* \"#utility.yul\":9496:9529   */\n      mstore\n        /* \"#utility.yul\":9311:9536   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9542:9908   */\n    tag_255:\n        /* \"#utility.yul\":9684:9687   */\n      0x00\n        /* \"#utility.yul\":9705:9772   */\n      tag_369\n        /* \"#utility.yul\":9769:9771   */\n      0x26\n        /* \"#utility.yul\":9764:9767   */\n      dup4\n        /* \"#utility.yul\":9705:9772   */\n      tag_229\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":9698:9772   */\n      swap2\n      pop\n        /* \"#utility.yul\":9781:9874   */\n      tag_370\n        /* \"#utility.yul\":9870:9873   */\n      dup3\n        /* \"#utility.yul\":9781:9874   */\n      tag_254\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":9899:9901   */\n      0x40\n        /* \"#utility.yul\":9894:9897   */\n      dup3\n        /* \"#utility.yul\":9890:9902   */\n      add\n        /* \"#utility.yul\":9883:9902   */\n      swap1\n      pop\n        /* \"#utility.yul\":9542:9908   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9914:10333   */\n    tag_180:\n        /* \"#utility.yul\":10080:10084   */\n      0x00\n        /* \"#utility.yul\":10118:10120   */\n      0x20\n        /* \"#utility.yul\":10107:10116   */\n      dup3\n        /* \"#utility.yul\":10103:10121   */\n      add\n        /* \"#utility.yul\":10095:10121   */\n      swap1\n      pop\n        /* \"#utility.yul\":10167:10176   */\n      dup2\n        /* \"#utility.yul\":10161:10165   */\n      dup2\n        /* \"#utility.yul\":10157:10177   */\n      sub\n        /* \"#utility.yul\":10153:10154   */\n      0x00\n        /* \"#utility.yul\":10142:10151   */\n      dup4\n        /* \"#utility.yul\":10138:10155   */\n      add\n        /* \"#utility.yul\":10131:10178   */\n      mstore\n        /* \"#utility.yul\":10195:10326   */\n      tag_372\n        /* \"#utility.yul\":10321:10325   */\n      dup2\n        /* \"#utility.yul\":10195:10326   */\n      tag_255\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":10187:10326   */\n      swap1\n      pop\n        /* \"#utility.yul\":9914:10333   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10339:10562   */\n    tag_256:\n        /* \"#utility.yul\":10479:10513   */\n      0x42455032303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":10475:10476   */\n      0x00\n        /* \"#utility.yul\":10467:10473   */\n      dup3\n        /* \"#utility.yul\":10463:10477   */\n      add\n        /* \"#utility.yul\":10456:10514   */\n      mstore\n        /* \"#utility.yul\":10548:10554   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10543:10545   */\n      0x20\n        /* \"#utility.yul\":10535:10541   */\n      dup3\n        /* \"#utility.yul\":10531:10546   */\n      add\n        /* \"#utility.yul\":10524:10555   */\n      mstore\n        /* \"#utility.yul\":10339:10562   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10568:10934   */\n    tag_257:\n        /* \"#utility.yul\":10710:10713   */\n      0x00\n        /* \"#utility.yul\":10731:10798   */\n      tag_375\n        /* \"#utility.yul\":10795:10797   */\n      0x24\n        /* \"#utility.yul\":10790:10793   */\n      dup4\n        /* \"#utility.yul\":10731:10798   */\n      tag_229\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":10724:10798   */\n      swap2\n      pop\n        /* \"#utility.yul\":10807:10900   */\n      tag_376\n        /* \"#utility.yul\":10896:10899   */\n      dup3\n        /* \"#utility.yul\":10807:10900   */\n      tag_256\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":10925:10927   */\n      0x40\n        /* \"#utility.yul\":10920:10923   */\n      dup3\n        /* \"#utility.yul\":10916:10928   */\n      add\n        /* \"#utility.yul\":10909:10928   */\n      swap1\n      pop\n        /* \"#utility.yul\":10568:10934   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10940:11359   */\n    tag_185:\n        /* \"#utility.yul\":11106:11110   */\n      0x00\n        /* \"#utility.yul\":11144:11146   */\n      0x20\n        /* \"#utility.yul\":11133:11142   */\n      dup3\n        /* \"#utility.yul\":11129:11147   */\n      add\n        /* \"#utility.yul\":11121:11147   */\n      swap1\n      pop\n        /* \"#utility.yul\":11193:11202   */\n      dup2\n        /* \"#utility.yul\":11187:11191   */\n      dup2\n        /* \"#utility.yul\":11183:11203   */\n      sub\n        /* \"#utility.yul\":11179:11180   */\n      0x00\n        /* \"#utility.yul\":11168:11177   */\n      dup4\n        /* \"#utility.yul\":11164:11181   */\n      add\n        /* \"#utility.yul\":11157:11204   */\n      mstore\n        /* \"#utility.yul\":11221:11352   */\n      tag_378\n        /* \"#utility.yul\":11347:11351   */\n      dup2\n        /* \"#utility.yul\":11221:11352   */\n      tag_257\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":11213:11352   */\n      swap1\n      pop\n        /* \"#utility.yul\":10940:11359   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11365:11586   */\n    tag_258:\n        /* \"#utility.yul\":11505:11539   */\n      0x42455032303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":11501:11502   */\n      0x00\n        /* \"#utility.yul\":11493:11499   */\n      dup3\n        /* \"#utility.yul\":11489:11503   */\n      add\n        /* \"#utility.yul\":11482:11540   */\n      mstore\n        /* \"#utility.yul\":11574:11578   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11569:11571   */\n      0x20\n        /* \"#utility.yul\":11561:11567   */\n      dup3\n        /* \"#utility.yul\":11557:11572   */\n      add\n        /* \"#utility.yul\":11550:11579   */\n      mstore\n        /* \"#utility.yul\":11365:11586   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11592:11958   */\n    tag_259:\n        /* \"#utility.yul\":11734:11737   */\n      0x00\n        /* \"#utility.yul\":11755:11822   */\n      tag_381\n        /* \"#utility.yul\":11819:11821   */\n      0x22\n        /* \"#utility.yul\":11814:11817   */\n      dup4\n        /* \"#utility.yul\":11755:11822   */\n      tag_229\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":11748:11822   */\n      swap2\n      pop\n        /* \"#utility.yul\":11831:11924   */\n      tag_382\n        /* \"#utility.yul\":11920:11923   */\n      dup3\n        /* \"#utility.yul\":11831:11924   */\n      tag_258\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":11949:11951   */\n      0x40\n        /* \"#utility.yul\":11944:11947   */\n      dup3\n        /* \"#utility.yul\":11940:11952   */\n      add\n        /* \"#utility.yul\":11933:11952   */\n      swap1\n      pop\n        /* \"#utility.yul\":11592:11958   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11964:12383   */\n    tag_188:\n        /* \"#utility.yul\":12130:12134   */\n      0x00\n        /* \"#utility.yul\":12168:12170   */\n      0x20\n        /* \"#utility.yul\":12157:12166   */\n      dup3\n        /* \"#utility.yul\":12153:12171   */\n      add\n        /* \"#utility.yul\":12145:12171   */\n      swap1\n      pop\n        /* \"#utility.yul\":12217:12226   */\n      dup2\n        /* \"#utility.yul\":12211:12215   */\n      dup2\n        /* \"#utility.yul\":12207:12227   */\n      sub\n        /* \"#utility.yul\":12203:12204   */\n      0x00\n        /* \"#utility.yul\":12192:12201   */\n      dup4\n        /* \"#utility.yul\":12188:12205   */\n      add\n        /* \"#utility.yul\":12181:12228   */\n      mstore\n        /* \"#utility.yul\":12245:12376   */\n      tag_384\n        /* \"#utility.yul\":12371:12375   */\n      dup2\n        /* \"#utility.yul\":12245:12376   */\n      tag_259\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":12237:12376   */\n      swap1\n      pop\n        /* \"#utility.yul\":11964:12383   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12389:12613   */\n    tag_260:\n        /* \"#utility.yul\":12529:12563   */\n      0x42455032303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":12525:12526   */\n      0x00\n        /* \"#utility.yul\":12517:12523   */\n      dup3\n        /* \"#utility.yul\":12513:12527   */\n      add\n        /* \"#utility.yul\":12506:12564   */\n      mstore\n        /* \"#utility.yul\":12598:12605   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12593:12595   */\n      0x20\n        /* \"#utility.yul\":12585:12591   */\n      dup3\n        /* \"#utility.yul\":12581:12596   */\n      add\n        /* \"#utility.yul\":12574:12606   */\n      mstore\n        /* \"#utility.yul\":12389:12613   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12619:12985   */\n    tag_261:\n        /* \"#utility.yul\":12761:12764   */\n      0x00\n        /* \"#utility.yul\":12782:12849   */\n      tag_387\n        /* \"#utility.yul\":12846:12848   */\n      0x25\n        /* \"#utility.yul\":12841:12844   */\n      dup4\n        /* \"#utility.yul\":12782:12849   */\n      tag_229\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":12775:12849   */\n      swap2\n      pop\n        /* \"#utility.yul\":12858:12951   */\n      tag_388\n        /* \"#utility.yul\":12947:12950   */\n      dup3\n        /* \"#utility.yul\":12858:12951   */\n      tag_260\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":12976:12978   */\n      0x40\n        /* \"#utility.yul\":12971:12974   */\n      dup3\n        /* \"#utility.yul\":12967:12979   */\n      add\n        /* \"#utility.yul\":12960:12979   */\n      swap1\n      pop\n        /* \"#utility.yul\":12619:12985   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12991:13410   */\n    tag_193:\n        /* \"#utility.yul\":13157:13161   */\n      0x00\n        /* \"#utility.yul\":13195:13197   */\n      0x20\n        /* \"#utility.yul\":13184:13193   */\n      dup3\n        /* \"#utility.yul\":13180:13198   */\n      add\n        /* \"#utility.yul\":13172:13198   */\n      swap1\n      pop\n        /* \"#utility.yul\":13244:13253   */\n      dup2\n        /* \"#utility.yul\":13238:13242   */\n      dup2\n        /* \"#utility.yul\":13234:13254   */\n      sub\n        /* \"#utility.yul\":13230:13231   */\n      0x00\n        /* \"#utility.yul\":13219:13228   */\n      dup4\n        /* \"#utility.yul\":13215:13232   */\n      add\n        /* \"#utility.yul\":13208:13255   */\n      mstore\n        /* \"#utility.yul\":13272:13403   */\n      tag_390\n        /* \"#utility.yul\":13398:13402   */\n      dup2\n        /* \"#utility.yul\":13272:13403   */\n      tag_261\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":13264:13403   */\n      swap1\n      pop\n        /* \"#utility.yul\":12991:13410   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13416:13638   */\n    tag_262:\n        /* \"#utility.yul\":13556:13590   */\n      0x42455032303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":13552:13553   */\n      0x00\n        /* \"#utility.yul\":13544:13550   */\n      dup3\n        /* \"#utility.yul\":13540:13554   */\n      add\n        /* \"#utility.yul\":13533:13591   */\n      mstore\n        /* \"#utility.yul\":13625:13630   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13620:13622   */\n      0x20\n        /* \"#utility.yul\":13612:13618   */\n      dup3\n        /* \"#utility.yul\":13608:13623   */\n      add\n        /* \"#utility.yul\":13601:13631   */\n      mstore\n        /* \"#utility.yul\":13416:13638   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13644:14010   */\n    tag_263:\n        /* \"#utility.yul\":13786:13789   */\n      0x00\n        /* \"#utility.yul\":13807:13874   */\n      tag_393\n        /* \"#utility.yul\":13871:13873   */\n      0x23\n        /* \"#utility.yul\":13866:13869   */\n      dup4\n        /* \"#utility.yul\":13807:13874   */\n      tag_229\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":13800:13874   */\n      swap2\n      pop\n        /* \"#utility.yul\":13883:13976   */\n      tag_394\n        /* \"#utility.yul\":13972:13975   */\n      dup3\n        /* \"#utility.yul\":13883:13976   */\n      tag_262\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":14001:14003   */\n      0x40\n        /* \"#utility.yul\":13996:13999   */\n      dup3\n        /* \"#utility.yul\":13992:14004   */\n      add\n        /* \"#utility.yul\":13985:14004   */\n      swap1\n      pop\n        /* \"#utility.yul\":13644:14010   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14016:14435   */\n    tag_196:\n        /* \"#utility.yul\":14182:14186   */\n      0x00\n        /* \"#utility.yul\":14220:14222   */\n      0x20\n        /* \"#utility.yul\":14209:14218   */\n      dup3\n        /* \"#utility.yul\":14205:14223   */\n      add\n        /* \"#utility.yul\":14197:14223   */\n      swap1\n      pop\n        /* \"#utility.yul\":14269:14278   */\n      dup2\n        /* \"#utility.yul\":14263:14267   */\n      dup2\n        /* \"#utility.yul\":14259:14279   */\n      sub\n        /* \"#utility.yul\":14255:14256   */\n      0x00\n        /* \"#utility.yul\":14244:14253   */\n      dup4\n        /* \"#utility.yul\":14240:14257   */\n      add\n        /* \"#utility.yul\":14233:14280   */\n      mstore\n        /* \"#utility.yul\":14297:14428   */\n      tag_396\n        /* \"#utility.yul\":14423:14427   */\n      dup2\n        /* \"#utility.yul\":14297:14428   */\n      tag_263\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":14289:14428   */\n      swap1\n      pop\n        /* \"#utility.yul\":14016:14435   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14441:14621   */\n    tag_264:\n        /* \"#utility.yul\":14489:14566   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14486:14487   */\n      0x00\n        /* \"#utility.yul\":14479:14567   */\n      mstore\n        /* \"#utility.yul\":14586:14590   */\n      0x11\n        /* \"#utility.yul\":14583:14584   */\n      0x04\n        /* \"#utility.yul\":14576:14591   */\n      mstore\n        /* \"#utility.yul\":14610:14614   */\n      0x24\n        /* \"#utility.yul\":14607:14608   */\n      0x00\n        /* \"#utility.yul\":14600:14615   */\n      revert\n        /* \"#utility.yul\":14627:14821   */\n    tag_204:\n        /* \"#utility.yul\":14667:14671   */\n      0x00\n        /* \"#utility.yul\":14687:14707   */\n      tag_399\n        /* \"#utility.yul\":14705:14706   */\n      dup3\n        /* \"#utility.yul\":14687:14707   */\n      tag_240\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":14682:14707   */\n      swap2\n      pop\n        /* \"#utility.yul\":14721:14741   */\n      tag_400\n        /* \"#utility.yul\":14739:14740   */\n      dup4\n        /* \"#utility.yul\":14721:14741   */\n      tag_240\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":14716:14741   */\n      swap3\n      pop\n        /* \"#utility.yul\":14765:14766   */\n      dup3\n        /* \"#utility.yul\":14762:14763   */\n      dup3\n        /* \"#utility.yul\":14758:14767   */\n      sub\n        /* \"#utility.yul\":14750:14767   */\n      swap1\n      pop\n        /* \"#utility.yul\":14789:14790   */\n      dup2\n        /* \"#utility.yul\":14783:14787   */\n      dup2\n        /* \"#utility.yul\":14780:14791   */\n      gt\n        /* \"#utility.yul\":14777:14814   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":14794:14812   */\n      tag_402\n      tag_264\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":14777:14814   */\n    tag_401:\n        /* \"#utility.yul\":14627:14821   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14827:15018   */\n    tag_207:\n        /* \"#utility.yul\":14867:14870   */\n      0x00\n        /* \"#utility.yul\":14886:14906   */\n      tag_404\n        /* \"#utility.yul\":14904:14905   */\n      dup3\n        /* \"#utility.yul\":14886:14906   */\n      tag_240\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":14881:14906   */\n      swap2\n      pop\n        /* \"#utility.yul\":14920:14940   */\n      tag_405\n        /* \"#utility.yul\":14938:14939   */\n      dup4\n        /* \"#utility.yul\":14920:14940   */\n      tag_240\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":14915:14940   */\n      swap3\n      pop\n        /* \"#utility.yul\":14963:14964   */\n      dup3\n        /* \"#utility.yul\":14960:14961   */\n      dup3\n        /* \"#utility.yul\":14956:14965   */\n      add\n        /* \"#utility.yul\":14949:14965   */\n      swap1\n      pop\n        /* \"#utility.yul\":14984:14987   */\n      dup1\n        /* \"#utility.yul\":14981:14982   */\n      dup3\n        /* \"#utility.yul\":14978:14988   */\n      gt\n        /* \"#utility.yul\":14975:15011   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":14991:15009   */\n      tag_407\n      tag_264\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":14975:15011   */\n    tag_406:\n        /* \"#utility.yul\":14827:15018   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15024:15201   */\n    tag_265:\n        /* \"#utility.yul\":15164:15193   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":15160:15161   */\n      0x00\n        /* \"#utility.yul\":15152:15158   */\n      dup3\n        /* \"#utility.yul\":15148:15162   */\n      add\n        /* \"#utility.yul\":15141:15194   */\n      mstore\n        /* \"#utility.yul\":15024:15201   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15207:15573   */\n    tag_266:\n        /* \"#utility.yul\":15349:15352   */\n      0x00\n        /* \"#utility.yul\":15370:15437   */\n      tag_410\n        /* \"#utility.yul\":15434:15436   */\n      0x1b\n        /* \"#utility.yul\":15429:15432   */\n      dup4\n        /* \"#utility.yul\":15370:15437   */\n      tag_229\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":15363:15437   */\n      swap2\n      pop\n        /* \"#utility.yul\":15446:15539   */\n      tag_411\n        /* \"#utility.yul\":15535:15538   */\n      dup3\n        /* \"#utility.yul\":15446:15539   */\n      tag_265\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":15564:15566   */\n      0x20\n        /* \"#utility.yul\":15559:15562   */\n      dup3\n        /* \"#utility.yul\":15555:15567   */\n      add\n        /* \"#utility.yul\":15548:15567   */\n      swap1\n      pop\n        /* \"#utility.yul\":15207:15573   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15579:15998   */\n    tag_210:\n        /* \"#utility.yul\":15745:15749   */\n      0x00\n        /* \"#utility.yul\":15783:15785   */\n      0x20\n        /* \"#utility.yul\":15772:15781   */\n      dup3\n        /* \"#utility.yul\":15768:15786   */\n      add\n        /* \"#utility.yul\":15760:15786   */\n      swap1\n      pop\n        /* \"#utility.yul\":15832:15841   */\n      dup2\n        /* \"#utility.yul\":15826:15830   */\n      dup2\n        /* \"#utility.yul\":15822:15842   */\n      sub\n        /* \"#utility.yul\":15818:15819   */\n      0x00\n        /* \"#utility.yul\":15807:15816   */\n      dup4\n        /* \"#utility.yul\":15803:15820   */\n      add\n        /* \"#utility.yul\":15796:15843   */\n      mstore\n        /* \"#utility.yul\":15860:15991   */\n      tag_413\n        /* \"#utility.yul\":15986:15990   */\n      dup2\n        /* \"#utility.yul\":15860:15991   */\n      tag_266\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":15852:15991   */\n      swap1\n      pop\n        /* \"#utility.yul\":15579:15998   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16004:16224   */\n    tag_267:\n        /* \"#utility.yul\":16144:16178   */\n      0x42455032303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":16140:16141   */\n      0x00\n        /* \"#utility.yul\":16132:16138   */\n      dup3\n        /* \"#utility.yul\":16128:16142   */\n      add\n        /* \"#utility.yul\":16121:16179   */\n      mstore\n        /* \"#utility.yul\":16213:16216   */\n      0x7300000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16208:16210   */\n      0x20\n        /* \"#utility.yul\":16200:16206   */\n      dup3\n        /* \"#utility.yul\":16196:16211   */\n      add\n        /* \"#utility.yul\":16189:16217   */\n      mstore\n        /* \"#utility.yul\":16004:16224   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16230:16596   */\n    tag_268:\n        /* \"#utility.yul\":16372:16375   */\n      0x00\n        /* \"#utility.yul\":16393:16460   */\n      tag_416\n        /* \"#utility.yul\":16457:16459   */\n      0x21\n        /* \"#utility.yul\":16452:16455   */\n      dup4\n        /* \"#utility.yul\":16393:16460   */\n      tag_229\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":16386:16460   */\n      swap2\n      pop\n        /* \"#utility.yul\":16469:16562   */\n      tag_417\n        /* \"#utility.yul\":16558:16561   */\n      dup3\n        /* \"#utility.yul\":16469:16562   */\n      tag_267\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":16587:16589   */\n      0x40\n        /* \"#utility.yul\":16582:16585   */\n      dup3\n        /* \"#utility.yul\":16578:16590   */\n      add\n        /* \"#utility.yul\":16571:16590   */\n      swap1\n      pop\n        /* \"#utility.yul\":16230:16596   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16602:17021   */\n    tag_214:\n        /* \"#utility.yul\":16768:16772   */\n      0x00\n        /* \"#utility.yul\":16806:16808   */\n      0x20\n        /* \"#utility.yul\":16795:16804   */\n      dup3\n        /* \"#utility.yul\":16791:16809   */\n      add\n        /* \"#utility.yul\":16783:16809   */\n      swap1\n      pop\n        /* \"#utility.yul\":16855:16864   */\n      dup2\n        /* \"#utility.yul\":16849:16853   */\n      dup2\n        /* \"#utility.yul\":16845:16865   */\n      sub\n        /* \"#utility.yul\":16841:16842   */\n      0x00\n        /* \"#utility.yul\":16830:16839   */\n      dup4\n        /* \"#utility.yul\":16826:16843   */\n      add\n        /* \"#utility.yul\":16819:16866   */\n      mstore\n        /* \"#utility.yul\":16883:17014   */\n      tag_419\n        /* \"#utility.yul\":17009:17013   */\n      dup2\n        /* \"#utility.yul\":16883:17014   */\n      tag_268\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":16875:17014   */\n      swap1\n      pop\n        /* \"#utility.yul\":16602:17021   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17027:17208   */\n    tag_269:\n        /* \"#utility.yul\":17167:17200   */\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":17163:17164   */\n      0x00\n        /* \"#utility.yul\":17155:17161   */\n      dup3\n        /* \"#utility.yul\":17151:17165   */\n      add\n        /* \"#utility.yul\":17144:17201   */\n      mstore\n        /* \"#utility.yul\":17027:17208   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17214:17580   */\n    tag_270:\n        /* \"#utility.yul\":17356:17359   */\n      0x00\n        /* \"#utility.yul\":17377:17444   */\n      tag_422\n        /* \"#utility.yul\":17441:17443   */\n      0x1f\n        /* \"#utility.yul\":17436:17439   */\n      dup4\n        /* \"#utility.yul\":17377:17444   */\n      tag_229\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":17370:17444   */\n      swap2\n      pop\n        /* \"#utility.yul\":17453:17546   */\n      tag_423\n        /* \"#utility.yul\":17542:17545   */\n      dup3\n        /* \"#utility.yul\":17453:17546   */\n      tag_269\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":17571:17573   */\n      0x20\n        /* \"#utility.yul\":17566:17569   */\n      dup3\n        /* \"#utility.yul\":17562:17574   */\n      add\n        /* \"#utility.yul\":17555:17574   */\n      swap1\n      pop\n        /* \"#utility.yul\":17214:17580   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17586:18005   */\n    tag_222:\n        /* \"#utility.yul\":17752:17756   */\n      0x00\n        /* \"#utility.yul\":17790:17792   */\n      0x20\n        /* \"#utility.yul\":17779:17788   */\n      dup3\n        /* \"#utility.yul\":17775:17793   */\n      add\n        /* \"#utility.yul\":17767:17793   */\n      swap1\n      pop\n        /* \"#utility.yul\":17839:17848   */\n      dup2\n        /* \"#utility.yul\":17833:17837   */\n      dup2\n        /* \"#utility.yul\":17829:17849   */\n      sub\n        /* \"#utility.yul\":17825:17826   */\n      0x00\n        /* \"#utility.yul\":17814:17823   */\n      dup4\n        /* \"#utility.yul\":17810:17827   */\n      add\n        /* \"#utility.yul\":17803:17850   */\n      mstore\n        /* \"#utility.yul\":17867:17998   */\n      tag_425\n        /* \"#utility.yul\":17993:17997   */\n      dup2\n        /* \"#utility.yul\":17867:17998   */\n      tag_270\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":17859:17998   */\n      swap1\n      pop\n        /* \"#utility.yul\":17586:18005   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032 42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365\n\n    auxdata: 0xa264697066735822122069685b5bd3acb4a88fec328e3d502473857a272705882af9cd2e1e4676a54f7764736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_281": {
									"entryPoint": null,
									"id": 281,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 823,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 402,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 355,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 552,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 708,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 751,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5231:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "140:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "157:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "160:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "150:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "150:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "254:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "257:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "247:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "281:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "271:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "326:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "346:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "467:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "457:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "457:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "535:269:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "545:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "565:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "612:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "602:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "580:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "653:51:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "689:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:26:6"
															},
															"nodeType": "YulIf",
															"src": "623:81:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "756:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "751:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:38:6"
															},
															"nodeType": "YulIf",
															"src": "714:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "519:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "528:6:6",
														"type": ""
													}
												],
												"src": "484:320:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "864:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "874:11:6",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "882:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "902:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:14:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "895:14:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "918:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "936:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "851:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "859:4:6",
														"type": ""
													}
												],
												"src": "810:141:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1001:49:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1011:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "984:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "994:6:6",
														"type": ""
													}
												],
												"src": "957:93:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1119:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:6"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "1084:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1090:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "1100:8:6",
														"type": ""
													}
												],
												"src": "1056:107:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1245:317:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1417:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1429:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1477:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1516:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:6"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1206:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "1213:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "1225:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1238:6:6",
														"type": ""
													}
												],
												"src": "1169:393:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1634:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1595:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1605:7:6",
														"type": ""
													}
												],
												"src": "1568:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1683:28:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1693:12:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1700:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1669:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1679:3:6",
														"type": ""
													}
												],
												"src": "1651:60:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1777:82:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1787:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1757:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1767:9:6",
														"type": ""
													}
												],
												"src": "1717:142:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1912:28:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1922:12:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1929:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1898:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1908:3:6",
														"type": ""
													}
												],
												"src": "1865:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2022:193:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:6"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:105:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1999:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2005:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "2013:7:6",
														"type": ""
													}
												],
												"src": "1946:269:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2270:24:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2280:8:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2287:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2266:3:6",
														"type": ""
													}
												],
												"src": "2221:73:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2353:136:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:6"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2339:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2345:6:6",
														"type": ""
													}
												],
												"src": "2300:189:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2545:136:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2612:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:14:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2577:26:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2579:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2559:2:6",
																"statements": []
															},
															"src": "2555:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "2533:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2540:3:6",
														"type": ""
													}
												],
												"src": "2495:186:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2766:464:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2792:431:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3093:27:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3095:23:6",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:6"
																		},
																		"nodeType": "YulIf",
																		"src": "3071:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:11:6"
															},
															"nodeType": "YulIf",
															"src": "2777:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2742:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2749:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2754:10:6",
														"type": ""
													}
												],
												"src": "2687:543:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3299:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3309:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:6"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "3274:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3280:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3290:8:6",
														"type": ""
													}
												],
												"src": "3236:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3410:118:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3432:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3497:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:6"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3387:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "3393:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3403:6:6",
														"type": ""
													}
												],
												"src": "3359:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3614:214:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3747:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:6"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3755:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3595:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3601:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3609:4:6",
														"type": ""
													}
												],
												"src": "3533:295:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3925:1303:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3950:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4072:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:30:6"
															},
															"nodeType": "YulIf",
															"src": "4038:56:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4118:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:6"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4203:67:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4297:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4308:17:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4321:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4372:611:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4569:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:6"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4646:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:6"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4687:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:6"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "4547:21:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4549:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "4528:3:6",
																					"statements": []
																				},
																				"src": "4524:208:6"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4768:156:6",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:6"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:6"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:6"
																				},
																				"nodeType": "YulIf",
																				"src": "4745:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:6"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4365:618:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5000:222:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5051:67:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5069:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:6"
																				},
																				"nodeType": "YulIf",
																				"src": "5041:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:6"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4992:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:14:6"
															},
															"nodeType": "YulSwitch",
															"src": "4335:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3914:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3920:3:6",
														"type": ""
													}
												],
												"src": "3833:1395:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526a52b7d2dcc80cd2e40000006003556040518060400160405280600481526020017f4d4741530000000000000000000000000000000000000000000000000000000081525060049081620000599190620003d2565b506040518060400160405280600481526020017f4d4741530000000000000000000000000000000000000000000000000000000081525060059081620000a09190620003d2565b506012600660006101000a81548160ff021916908360ff160217905550348015620000ca57600080fd5b50600354600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620004b9565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620001da57607f821691505b602082108103620001f057620001ef62000192565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200025a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200021b565b6200026686836200021b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620002b3620002ad620002a7846200027e565b62000288565b6200027e565b9050919050565b6000819050919050565b620002cf8362000292565b620002e7620002de82620002ba565b84845462000228565b825550505050565b600090565b620002fe620002ef565b6200030b818484620002c4565b505050565b5b81811015620003335762000327600082620002f4565b60018101905062000311565b5050565b601f82111562000382576200034c81620001f6565b62000357846200020b565b8101602085101562000367578190505b6200037f62000376856200020b565b83018262000310565b50505b505050565b600082821c905092915050565b6000620003a76000198460080262000387565b1980831691505092915050565b6000620003c2838362000394565b9150826002028217905092915050565b620003dd8262000158565b67ffffffffffffffff811115620003f957620003f862000163565b5b620004058254620001c1565b6200041282828562000337565b600060209050601f8311600181146200044a576000841562000435578287015190505b620004418582620003b4565b865550620004b1565b601f1984166200045a86620001f6565b60005b8281101562000484578489015182556001820191506020850194506020810190506200045d565b86831015620004a45784890151620004a0601f89168262000394565b8355505b6001600288020188555050505b505050505050565b6120e480620004c96000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063a457c2d711610071578063a457c2d7146102f9578063a9059cbb14610329578063b723b34e14610359578063dd62ed3e14610389578063f2fde38b146103b957610116565b8063715018a614610283578063893d20e81461028d57806395d89b41146102ab578063a0712d68146102c957610116565b8063313ce567116100e9578063313ce567146101b757806339509351146101d557806342966c68146102055780634bf365df1461023557806370a082311461025357610116565b806306fdde031461011b578063095ea7b31461013957806318160ddd1461016957806323b872dd14610187575b600080fd5b6101236103d5565b604051610130919061171d565b60405180910390f35b610153600480360381019061014e91906117d8565b610467565b6040516101609190611833565b60405180910390f35b610171610485565b60405161017e919061185d565b60405180910390f35b6101a1600480360381019061019c9190611878565b61048f565b6040516101ae9190611833565b60405180910390f35b6101bf610568565b6040516101cc91906118e7565b60405180910390f35b6101ef60048036038101906101ea91906117d8565b61057f565b6040516101fc9190611833565b60405180910390f35b61021f600480360381019061021a9190611902565b610632565b60405161022c9190611833565b60405180910390f35b61023d61064e565b60405161024a9190611833565b60405180910390f35b61026d6004803603810190610268919061192f565b610665565b60405161027a919061185d565b60405180910390f35b61028b6106ae565b005b610295610806565b6040516102a2919061196b565b60405180910390f35b6102b3610830565b6040516102c0919061171d565b60405180910390f35b6102e360048036038101906102de9190611902565b6108c2565b6040516102f09190611833565b60405180910390f35b610313600480360381019061030e91906117d8565b6109c4565b6040516103209190611833565b60405180910390f35b610343600480360381019061033e91906117d8565b610a91565b6040516103509190611833565b60405180910390f35b610373600480360381019061036e9190611986565b610aaf565b6040516103809190611833565b60405180910390f35b6103a3600480360381019061039e91906119c6565b610bab565b6040516103b0919061185d565b60405180910390f35b6103d360048036038101906103ce919061192f565b610c32565b005b6060600480546103e490611a35565b80601f016020809104026020016040519081016040528092919081815260200182805461041090611a35565b801561045d5780601f106104325761010080835404028352916020019161045d565b820191906000526020600020905b81548152906001019060200180831161044057829003601f168201915b5050505050905090565b600061047b610474610df8565b8484610e00565b6001905092915050565b6000600354905090565b600061049c848484610fc9565b61055d846104a8610df8565b6105588560405180606001604052806028815260200161201a60289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061050e610df8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112559092919063ffffffff16565b610e00565b600190509392505050565b6000600660009054906101000a900460ff16905090565b600061062861058c610df8565b84610623856002600061059d610df8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112b990919063ffffffff16565b610e00565b6001905092915050565b600061064561063f610df8565b83611317565b60019050919050565b6000600660159054906101000a900460ff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6106b6610df8565b73ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610745576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073c90611ab2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606005805461083f90611a35565b80601f016020809104026020016040519081016040528092919081815260200182805461086b90611a35565b80156108b85780601f1061088d576101008083540402835291602001916108b8565b820191906000526020600020905b81548152906001019060200180831161089b57829003601f168201915b5050505050905090565b60006108cc610df8565b73ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461095b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095290611ab2565b60405180910390fd5b600660159054906101000a900460ff166109aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a190611b1e565b60405180910390fd5b6109bb6109b5610df8565b836114ba565b60019050919050565b6000610a876109d1610df8565b84610a828560405180606001604052806025815260200161206860259139600260006109fb610df8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112559092919063ffffffff16565b610e00565b6001905092915050565b6000610aa5610a9e610df8565b8484610fc9565b6001905092915050565b6000610ab9610df8565b73ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3f90611ab2565b60405180910390fd5b600660159054906101000a900460ff16610b97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8e90611b1e565b60405180910390fd5b610ba182846114ba565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610c3a610df8565b73ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610cc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc090611ab2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2f90611bb0565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6690611c42565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ede576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed590611cd4565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610fbc919061185d565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611038576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102f90611d66565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109e90611df8565b60405180910390fd5b6111138160405180606001604052806026815260200161204260269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112559092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506111a881600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112b990919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611248919061185d565b60405180910390a3505050565b600083831115829061129d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611294919061171d565b60405180910390fd5b50600083856112ac9190611e47565b9050809150509392505050565b60008082846112c89190611e7b565b90508381101561130d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130490611efb565b60405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611386576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137d90611f8d565b60405180910390fd5b6113f28160405180606001604052806022815260200161208d60229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112559092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061144a8160035461164390919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516114ae919061185d565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611529576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152090611ff9565b60405180910390fd5b61153e816003546112b990919063ffffffff16565b60038190555061159681600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112b990919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611637919061185d565b60405180910390a35050565b600061168583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611255565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156116c75780820151818401526020810190506116ac565b60008484015250505050565b6000601f19601f8301169050919050565b60006116ef8261168d565b6116f98185611698565b93506117098185602086016116a9565b611712816116d3565b840191505092915050565b6000602082019050818103600083015261173781846116e4565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061176f82611744565b9050919050565b61177f81611764565b811461178a57600080fd5b50565b60008135905061179c81611776565b92915050565b6000819050919050565b6117b5816117a2565b81146117c057600080fd5b50565b6000813590506117d2816117ac565b92915050565b600080604083850312156117ef576117ee61173f565b5b60006117fd8582860161178d565b925050602061180e858286016117c3565b9150509250929050565b60008115159050919050565b61182d81611818565b82525050565b60006020820190506118486000830184611824565b92915050565b611857816117a2565b82525050565b6000602082019050611872600083018461184e565b92915050565b6000806000606084860312156118915761189061173f565b5b600061189f8682870161178d565b93505060206118b08682870161178d565b92505060406118c1868287016117c3565b9150509250925092565b600060ff82169050919050565b6118e1816118cb565b82525050565b60006020820190506118fc60008301846118d8565b92915050565b6000602082840312156119185761191761173f565b5b6000611926848285016117c3565b91505092915050565b6000602082840312156119455761194461173f565b5b60006119538482850161178d565b91505092915050565b61196581611764565b82525050565b6000602082019050611980600083018461195c565b92915050565b6000806040838503121561199d5761199c61173f565b5b60006119ab858286016117c3565b92505060206119bc8582860161178d565b9150509250929050565b600080604083850312156119dd576119dc61173f565b5b60006119eb8582860161178d565b92505060206119fc8582860161178d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a4d57607f821691505b602082108103611a6057611a5f611a06565b5b50919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611a9c602083611698565b9150611aa782611a66565b602082019050919050565b60006020820190508181036000830152611acb81611a8f565b9050919050565b7f7468697320746f6b656e206973206e6f74206d696e7461626c65000000000000600082015250565b6000611b08601a83611698565b9150611b1382611ad2565b602082019050919050565b60006020820190508181036000830152611b3781611afb565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611b9a602683611698565b9150611ba582611b3e565b604082019050919050565b60006020820190508181036000830152611bc981611b8d565b9050919050565b7f42455032303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611c2c602483611698565b9150611c3782611bd0565b604082019050919050565b60006020820190508181036000830152611c5b81611c1f565b9050919050565b7f42455032303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611cbe602283611698565b9150611cc982611c62565b604082019050919050565b60006020820190508181036000830152611ced81611cb1565b9050919050565b7f42455032303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611d50602583611698565b9150611d5b82611cf4565b604082019050919050565b60006020820190508181036000830152611d7f81611d43565b9050919050565b7f42455032303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611de2602383611698565b9150611ded82611d86565b604082019050919050565b60006020820190508181036000830152611e1181611dd5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e52826117a2565b9150611e5d836117a2565b9250828203905081811115611e7557611e74611e18565b5b92915050565b6000611e86826117a2565b9150611e91836117a2565b9250828201905080821115611ea957611ea8611e18565b5b92915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b6000611ee5601b83611698565b9150611ef082611eaf565b602082019050919050565b60006020820190508181036000830152611f1481611ed8565b9050919050565b7f42455032303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611f77602183611698565b9150611f8282611f1b565b604082019050919050565b60006020820190508181036000830152611fa681611f6a565b9050919050565b7f42455032303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611fe3601f83611698565b9150611fee82611fad565b602082019050919050565b6000602082019050818103600083015261201281611fd6565b905091905056fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365a264697066735822122069685b5bd3acb4a88fec328e3d502473857a272705882af9cd2e1e4676a54f7764736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH11 0x52B7D2DCC80CD2E4000000 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D47415300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x4 SWAP1 DUP2 PUSH3 0x59 SWAP2 SWAP1 PUSH3 0x3D2 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D47415300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x5 SWAP1 DUP2 PUSH3 0xA0 SWAP2 SWAP1 PUSH3 0x3D2 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0xCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x6 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x4B9 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1DA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1F0 JUMPI PUSH3 0x1EF PUSH3 0x192 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x25A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x21B JUMP JUMPDEST PUSH3 0x266 DUP7 DUP4 PUSH3 0x21B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2B3 PUSH3 0x2AD PUSH3 0x2A7 DUP5 PUSH3 0x27E JUMP JUMPDEST PUSH3 0x288 JUMP JUMPDEST PUSH3 0x27E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2CF DUP4 PUSH3 0x292 JUMP JUMPDEST PUSH3 0x2E7 PUSH3 0x2DE DUP3 PUSH3 0x2BA JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x228 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x2FE PUSH3 0x2EF JUMP JUMPDEST PUSH3 0x30B DUP2 DUP5 DUP5 PUSH3 0x2C4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x333 JUMPI PUSH3 0x327 PUSH1 0x0 DUP3 PUSH3 0x2F4 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x311 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x382 JUMPI PUSH3 0x34C DUP2 PUSH3 0x1F6 JUMP JUMPDEST PUSH3 0x357 DUP5 PUSH3 0x20B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x367 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x37F PUSH3 0x376 DUP6 PUSH3 0x20B JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x310 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x387 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3C2 DUP4 DUP4 PUSH3 0x394 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x3DD DUP3 PUSH3 0x158 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3F9 JUMPI PUSH3 0x3F8 PUSH3 0x163 JUMP JUMPDEST JUMPDEST PUSH3 0x405 DUP3 SLOAD PUSH3 0x1C1 JUMP JUMPDEST PUSH3 0x412 DUP3 DUP3 DUP6 PUSH3 0x337 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x44A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x435 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x441 DUP6 DUP3 PUSH3 0x3B4 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x4B1 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x45A DUP7 PUSH3 0x1F6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x484 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x45D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x4A4 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x4A0 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x394 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x20E4 DUP1 PUSH3 0x4C9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0xB723B34E EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3B9 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2C9 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x4BF365DF EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x253 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x187 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x171D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x17D8 JUMP JUMPDEST PUSH2 0x467 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH2 0x485 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x1878 JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x568 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x17D8 JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23D PUSH2 0x64E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x192F JUMP JUMPDEST PUSH2 0x665 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH2 0x6AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x295 PUSH2 0x806 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B3 PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x171D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x313 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x17D8 JUMP JUMPDEST PUSH2 0x9C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x343 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x17D8 JUMP JUMPDEST PUSH2 0xA91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x373 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x1986 JUMP JUMPDEST PUSH2 0xAAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x19C6 JUMP JUMPDEST PUSH2 0xBAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x192F JUMP JUMPDEST PUSH2 0xC32 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3E4 SWAP1 PUSH2 0x1A35 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x410 SWAP1 PUSH2 0x1A35 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x45D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x432 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x45D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x440 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47B PUSH2 0x474 PUSH2 0xDF8 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49C DUP5 DUP5 DUP5 PUSH2 0xFC9 JUMP JUMPDEST PUSH2 0x55D DUP5 PUSH2 0x4A8 PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0x558 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x201A PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x50E PUSH2 0xDF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1255 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x628 PUSH2 0x58C PUSH2 0xDF8 JUMP JUMPDEST DUP5 PUSH2 0x623 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x59D PUSH2 0xDF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12B9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x645 PUSH2 0x63F PUSH2 0xDF8 JUMP JUMPDEST DUP4 PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6B6 PUSH2 0xDF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x745 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73C SWAP1 PUSH2 0x1AB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x6 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x83F SWAP1 PUSH2 0x1A35 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x86B SWAP1 PUSH2 0x1A35 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8B8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x88D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8B8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x89B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8CC PUSH2 0xDF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x95B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x952 SWAP1 PUSH2 0x1AB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x9AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A1 SWAP1 PUSH2 0x1B1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9BB PUSH2 0x9B5 PUSH2 0xDF8 JUMP JUMPDEST DUP4 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA87 PUSH2 0x9D1 PUSH2 0xDF8 JUMP JUMPDEST DUP5 PUSH2 0xA82 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2068 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x9FB PUSH2 0xDF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1255 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA5 PUSH2 0xA9E PUSH2 0xDF8 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xFC9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB9 PUSH2 0xDF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3F SWAP1 PUSH2 0x1AB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xB97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8E SWAP1 PUSH2 0x1B1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBA1 DUP3 DUP5 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC3A PUSH2 0xDF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x1AB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2F SWAP1 PUSH2 0x1BB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x6 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE66 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEDE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED5 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFBC SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1038 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102F SWAP1 PUSH2 0x1D66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109E SWAP1 PUSH2 0x1DF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1113 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2042 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1255 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x11A8 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12B9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1248 SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x129D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1294 SWAP2 SWAP1 PUSH2 0x171D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x12AC SWAP2 SWAP1 PUSH2 0x1E47 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x12C8 SWAP2 SWAP1 PUSH2 0x1E7B JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x130D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1304 SWAP1 PUSH2 0x1EFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1386 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x137D SWAP1 PUSH2 0x1F8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F2 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x208D PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1255 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x144A DUP2 PUSH1 0x3 SLOAD PUSH2 0x1643 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x14AE SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1529 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1520 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x153E DUP2 PUSH1 0x3 SLOAD PUSH2 0x12B9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1596 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12B9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1637 SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1685 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1255 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16C7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16EF DUP3 PUSH2 0x168D JUMP JUMPDEST PUSH2 0x16F9 DUP2 DUP6 PUSH2 0x1698 JUMP JUMPDEST SWAP4 POP PUSH2 0x1709 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x1712 DUP2 PUSH2 0x16D3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1737 DUP2 DUP5 PUSH2 0x16E4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x176F DUP3 PUSH2 0x1744 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x177F DUP2 PUSH2 0x1764 JUMP JUMPDEST DUP2 EQ PUSH2 0x178A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x179C DUP2 PUSH2 0x1776 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17B5 DUP2 PUSH2 0x17A2 JUMP JUMPDEST DUP2 EQ PUSH2 0x17C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17D2 DUP2 PUSH2 0x17AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17EF JUMPI PUSH2 0x17EE PUSH2 0x173F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17FD DUP6 DUP3 DUP7 ADD PUSH2 0x178D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x180E DUP6 DUP3 DUP7 ADD PUSH2 0x17C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x182D DUP2 PUSH2 0x1818 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1848 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1824 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1857 DUP2 PUSH2 0x17A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1872 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x184E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1891 JUMPI PUSH2 0x1890 PUSH2 0x173F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x189F DUP7 DUP3 DUP8 ADD PUSH2 0x178D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18B0 DUP7 DUP3 DUP8 ADD PUSH2 0x178D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18C1 DUP7 DUP3 DUP8 ADD PUSH2 0x17C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E1 DUP2 PUSH2 0x18CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18FC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1918 JUMPI PUSH2 0x1917 PUSH2 0x173F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1926 DUP5 DUP3 DUP6 ADD PUSH2 0x17C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1945 JUMPI PUSH2 0x1944 PUSH2 0x173F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1953 DUP5 DUP3 DUP6 ADD PUSH2 0x178D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1965 DUP2 PUSH2 0x1764 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1980 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x195C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x199D JUMPI PUSH2 0x199C PUSH2 0x173F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19AB DUP6 DUP3 DUP7 ADD PUSH2 0x17C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19BC DUP6 DUP3 DUP7 ADD PUSH2 0x178D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19DD JUMPI PUSH2 0x19DC PUSH2 0x173F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19EB DUP6 DUP3 DUP7 ADD PUSH2 0x178D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19FC DUP6 DUP3 DUP7 ADD PUSH2 0x178D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A4D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A60 JUMPI PUSH2 0x1A5F PUSH2 0x1A06 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A9C PUSH1 0x20 DUP4 PUSH2 0x1698 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA7 DUP3 PUSH2 0x1A66 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ACB DUP2 PUSH2 0x1A8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7468697320746F6B656E206973206E6F74206D696E7461626C65000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B08 PUSH1 0x1A DUP4 PUSH2 0x1698 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B13 DUP3 PUSH2 0x1AD2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B37 DUP2 PUSH2 0x1AFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B9A PUSH1 0x26 DUP4 PUSH2 0x1698 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BA5 DUP3 PUSH2 0x1B3E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BC9 DUP2 PUSH2 0x1B8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C2C PUSH1 0x24 DUP4 PUSH2 0x1698 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C37 DUP3 PUSH2 0x1BD0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C5B DUP2 PUSH2 0x1C1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CBE PUSH1 0x22 DUP4 PUSH2 0x1698 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC9 DUP3 PUSH2 0x1C62 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CED DUP2 PUSH2 0x1CB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D50 PUSH1 0x25 DUP4 PUSH2 0x1698 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D5B DUP3 PUSH2 0x1CF4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D7F DUP2 PUSH2 0x1D43 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DE2 PUSH1 0x23 DUP4 PUSH2 0x1698 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DED DUP3 PUSH2 0x1D86 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E11 DUP2 PUSH2 0x1DD5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E52 DUP3 PUSH2 0x17A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E5D DUP4 PUSH2 0x17A2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1E75 JUMPI PUSH2 0x1E74 PUSH2 0x1E18 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E86 DUP3 PUSH2 0x17A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E91 DUP4 PUSH2 0x17A2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1EA9 JUMPI PUSH2 0x1EA8 PUSH2 0x1E18 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE5 PUSH1 0x1B DUP4 PUSH2 0x1698 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF0 DUP3 PUSH2 0x1EAF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F14 DUP2 PUSH2 0x1ED8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F77 PUSH1 0x21 DUP4 PUSH2 0x1698 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F82 DUP3 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FA6 DUP2 PUSH2 0x1F6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE3 PUSH1 0x1F DUP4 PUSH2 0x1698 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FEE DUP3 PUSH2 0x1FAD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2012 DUP2 PUSH2 0x1FD6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726F42455032303A206275 PUSH19 0x6E20616D6F756E742065786365656473206261 PUSH13 0x616E6365A26469706673582212 KECCAK256 PUSH10 0x685B5BD3ACB4A88FEC32 DUP15 RETURNDATASIZE POP 0x24 PUSH20 0x857A272705882AF9CD2E1E4676A54F7764736F6C PUSH4 0x43000812 STOP CALLER ",
							"sourceMap": "216:10968:4:-:0;;;473:27;442:58;;507:29;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;543:31;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;607:2;581:28;;;;;;;;;;;;;;;;;;;;776:100;;;;;;;;;;826:12;;802:9;:21;812:10;802:21;;;;;;;;;;;;;;;:36;;;;858:10;849:6;;:19;;;;;;;;;;;;;;;;;;216:10968;;7:99:6;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;216:10968:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_838": {
									"entryPoint": 3584,
									"id": 838,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_793": {
									"entryPoint": 4887,
									"id": 793,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_746": {
									"entryPoint": 5306,
									"id": 746,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_10": {
									"entryPoint": 3576,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_700": {
									"entryPoint": 4041,
									"id": 700,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_898": {
									"entryPoint": 4793,
									"id": 898,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_456": {
									"entryPoint": 2987,
									"id": 456,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_477": {
									"entryPoint": 1127,
									"id": 477,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_417": {
									"entryPoint": 1637,
									"id": 417,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_640": {
									"entryPoint": 1586,
									"id": 640,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_373": {
									"entryPoint": 1384,
									"id": 373,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_572": {
									"entryPoint": 2500,
									"id": 572,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getOwner_363": {
									"entryPoint": 2054,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increaseAllowance_543": {
									"entryPoint": 1407,
									"id": 543,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mintTo_622": {
									"entryPoint": 2735,
									"id": 622,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_596": {
									"entryPoint": 2242,
									"id": 596,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintable_353": {
									"entryPoint": 1614,
									"id": 353,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_393": {
									"entryPoint": 981,
									"id": 393,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_316": {
									"entryPoint": 1710,
									"id": 316,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_915": {
									"entryPoint": 5699,
									"id": 915,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_943": {
									"entryPoint": 4693,
									"id": 943,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_383": {
									"entryPoint": 2096,
									"id": 383,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_403": {
									"entryPoint": 1157,
									"id": 403,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_515": {
									"entryPoint": 1167,
									"id": 515,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_344": {
									"entryPoint": 3122,
									"id": 344,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_438": {
									"entryPoint": 2705,
									"id": 438,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 6534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5801,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7704,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6662,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5951,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57": {
									"entryPoint": 7412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386": {
									"entryPoint": 6866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4": {
									"entryPoint": 7120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 6974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a": {
									"entryPoint": 7855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3": {
									"entryPoint": 8109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 6758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2": {
									"entryPoint": 7558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855": {
									"entryPoint": 7963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5": {
									"entryPoint": 7266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18008:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:6",
														"type": ""
													}
												],
												"src": "112:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:6",
																"statements": []
															},
															"src": "378:113:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:6"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:6",
														"type": ""
													}
												],
												"src": "287:246:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:6",
														"type": ""
													}
												],
												"src": "539:102:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:6",
														"type": ""
													}
												],
												"src": "647:377:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:6"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:6",
														"type": ""
													}
												],
												"src": "1030:313:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:6",
														"type": ""
													}
												],
												"src": "1349:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:6",
														"type": ""
													}
												],
												"src": "1676:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:6",
														"type": ""
													}
												],
												"src": "1808:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:6"
															},
															"nodeType": "YulIf",
															"src": "1963:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:6",
														"type": ""
													}
												],
												"src": "1910:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:6",
														"type": ""
													}
												],
												"src": "2038:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:6",
														"type": ""
													}
												],
												"src": "2183:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:6"
															},
															"nodeType": "YulIf",
															"src": "2319:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:6",
														"type": ""
													}
												],
												"src": "2266:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:6",
														"type": ""
													}
												],
												"src": "2394:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:6"
															},
															"nodeType": "YulIf",
															"src": "2632:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:6",
														"type": ""
													}
												],
												"src": "2539:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:6",
														"type": ""
													}
												],
												"src": "3019:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:6",
														"type": ""
													}
												],
												"src": "3115:109:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:6",
														"type": ""
													}
												],
												"src": "3230:210:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:6",
														"type": ""
													}
												],
												"src": "3446:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:6",
														"type": ""
													}
												],
												"src": "3570:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:519:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3944:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:32:6"
															},
															"nodeType": "YulIf",
															"src": "3908:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "4037:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4081:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4164:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4209:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4337:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3852:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3863:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3875:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3883:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3891:6:6",
														"type": ""
													}
												],
												"src": "3798:619:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:43:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4476:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4448:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4458:7:6",
														"type": ""
													}
												],
												"src": "4423:86:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4564:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4571:3:6",
														"type": ""
													}
												],
												"src": "4515:112:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4727:120:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4737:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:67:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4699:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4711:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4722:4:6",
														"type": ""
													}
												],
												"src": "4633:214:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4919:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4965:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:32:6"
															},
															"nodeType": "YulIf",
															"src": "4929:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "5058:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5102:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4889:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4900:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4912:6:6",
														"type": ""
													}
												],
												"src": "4853:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5254:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5300:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5302:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5302:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5302:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5275:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5284:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5271:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5271:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5296:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5267:32:6"
															},
															"nodeType": "YulIf",
															"src": "5264:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "5393:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5408:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5422:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5412:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5437:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5472:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5483:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5468:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5468:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5492:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5447:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5447:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5437:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5224:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5235:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5247:6:6",
														"type": ""
													}
												],
												"src": "5188:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5588:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5605:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5628:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5610:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5610:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5598:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5598:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5598:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5576:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5583:3:6",
														"type": ""
													}
												],
												"src": "5523:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5745:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5755:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5767:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5778:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5763:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5763:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5755:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5835:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5848:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5859:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5844:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5844:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5791:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5791:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5791:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5717:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5729:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5740:4:6",
														"type": ""
													}
												],
												"src": "5647:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5958:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6004:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6006:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6006:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6006:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5979:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5988:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5975:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5975:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6000:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5971:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5971:32:6"
															},
															"nodeType": "YulIf",
															"src": "5968:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "6097:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6112:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6126:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6116:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6141:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6176:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6187:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6172:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6172:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6196:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6151:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6151:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6141:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6224:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6239:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6253:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6243:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6269:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6304:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6315:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6300:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6300:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6324:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6279:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6279:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6269:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5920:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5931:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5943:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5951:6:6",
														"type": ""
													}
												],
												"src": "5875:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6438:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6484:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6486:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6486:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6486:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6459:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6468:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6455:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6455:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6480:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6451:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6451:32:6"
															},
															"nodeType": "YulIf",
															"src": "6448:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "6577:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6592:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6606:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6596:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6621:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6656:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6667:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6652:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6652:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6676:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6631:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6631:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6621:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6704:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6719:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6733:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6723:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6749:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6784:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6795:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6780:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6780:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6804:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6759:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6759:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6749:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6400:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6411:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6423:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6431:6:6",
														"type": ""
													}
												],
												"src": "6355:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6863:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6880:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6883:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6873:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6873:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6873:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6977:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6980:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6970:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6970:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6970:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7001:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7004:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6994:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6994:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6994:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "6835:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7072:269:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7082:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7096:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7102:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7092:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7092:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7082:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7113:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7143:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7149:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7139:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7139:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "7117:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7190:51:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7204:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "7218:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7226:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7214:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7214:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7204:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7170:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7163:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7163:26:6"
															},
															"nodeType": "YulIf",
															"src": "7160:81:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7293:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "7307:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7307:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7307:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7257:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7280:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7288:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7277:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7277:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7254:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7254:38:6"
															},
															"nodeType": "YulIf",
															"src": "7251:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7056:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7065:6:6",
														"type": ""
													}
												],
												"src": "7021:320:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7453:76:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7475:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7483:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7471:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7471:14:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7487:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7464:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7464:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7464:58:6"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7445:6:6",
														"type": ""
													}
												],
												"src": "7347:182:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7681:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7691:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7757:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7762:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7698:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7698:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7691:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7863:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "7774:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7774:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7774:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7876:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7887:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7892:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7883:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7883:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7876:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7669:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7677:3:6",
														"type": ""
													}
												],
												"src": "7535:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8078:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8088:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8100:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8111:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8096:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8096:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8088:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8135:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8146:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8131:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8131:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8154:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8160:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8150:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8150:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8124:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8124:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8124:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8180:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8314:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8188:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8188:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8180:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8058:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8073:4:6",
														"type": ""
													}
												],
												"src": "7907:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8438:70:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8460:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8468:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8456:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8456:14:6"
																	},
																	{
																		"hexValue": "7468697320746f6b656e206973206e6f74206d696e7461626c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8472:28:6",
																		"type": "",
																		"value": "this token is not mintable"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8449:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8449:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8449:52:6"
														}
													]
												},
												"name": "store_literal_in_memory_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8430:6:6",
														"type": ""
													}
												],
												"src": "8332:176:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8660:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8670:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8736:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8741:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8677:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8677:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8670:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8842:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386",
																	"nodeType": "YulIdentifier",
																	"src": "8753:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8753:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8753:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8855:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8866:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8871:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8862:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8862:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8855:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8648:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8656:3:6",
														"type": ""
													}
												],
												"src": "8514:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9057:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9067:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9079:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9090:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9075:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9075:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9067:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9114:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9125:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9110:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9110:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9133:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9139:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9129:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9129:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9103:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9103:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9103:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9159:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9293:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9167:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9167:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9159:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9037:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9052:4:6",
														"type": ""
													}
												],
												"src": "8886:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9417:119:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9439:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9447:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9435:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9435:14:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9451:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9428:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9428:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9428:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9507:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9515:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9503:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9503:15:6"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9520:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9496:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9496:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9496:33:6"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9409:6:6",
														"type": ""
													}
												],
												"src": "9311:225:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9688:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9698:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9764:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9769:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9705:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9705:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9698:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9870:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "9781:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9781:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9781:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9883:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9894:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9899:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9890:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9890:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9883:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9676:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9684:3:6",
														"type": ""
													}
												],
												"src": "9542:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10085:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10095:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10107:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10118:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10103:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10103:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10095:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10142:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10153:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10138:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10138:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10161:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10167:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10157:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10157:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10131:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10131:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10131:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10187:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10321:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10195:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10195:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10187:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10065:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10080:4:6",
														"type": ""
													}
												],
												"src": "9914:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10445:117:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10467:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10475:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10463:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10463:14:6"
																	},
																	{
																		"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10479:34:6",
																		"type": "",
																		"value": "BEP20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10456:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10456:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10456:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10535:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10543:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10531:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10531:15:6"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10548:6:6",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10524:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10524:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10524:31:6"
														}
													]
												},
												"name": "store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10437:6:6",
														"type": ""
													}
												],
												"src": "10339:223:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10714:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10724:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10790:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10795:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10731:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10731:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10724:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10896:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																	"nodeType": "YulIdentifier",
																	"src": "10807:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10807:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10807:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10909:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10920:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10925:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10916:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10916:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10909:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10702:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10710:3:6",
														"type": ""
													}
												],
												"src": "10568:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11111:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11121:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11133:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11144:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11129:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11129:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11121:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11168:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11179:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11164:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11164:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11187:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11193:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11183:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11183:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11157:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11157:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11157:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11213:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11347:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11221:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11221:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11213:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11091:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11106:4:6",
														"type": ""
													}
												],
												"src": "10940:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11471:115:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11493:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11501:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11489:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11489:14:6"
																	},
																	{
																		"hexValue": "42455032303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11505:34:6",
																		"type": "",
																		"value": "BEP20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11482:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11482:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11482:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11561:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11569:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11557:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11557:15:6"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11574:4:6",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11550:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11550:29:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11550:29:6"
														}
													]
												},
												"name": "store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11463:6:6",
														"type": ""
													}
												],
												"src": "11365:221:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11738:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11748:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11814:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11819:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11755:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11755:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11748:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11920:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																	"nodeType": "YulIdentifier",
																	"src": "11831:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11831:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11831:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11933:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11944:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11949:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11940:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11940:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11933:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11726:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11734:3:6",
														"type": ""
													}
												],
												"src": "11592:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12135:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12145:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12157:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12168:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12153:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12153:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12145:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12192:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12203:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12188:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12188:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12211:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12217:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12207:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12207:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12181:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12181:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12181:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12237:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12371:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12245:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12245:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12237:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12115:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12130:4:6",
														"type": ""
													}
												],
												"src": "11964:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12495:118:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12517:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12525:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12513:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12513:14:6"
																	},
																	{
																		"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12529:34:6",
																		"type": "",
																		"value": "BEP20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12506:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12506:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12506:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12585:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12593:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12581:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12581:15:6"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12598:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12574:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12574:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12574:32:6"
														}
													]
												},
												"name": "store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12487:6:6",
														"type": ""
													}
												],
												"src": "12389:224:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12765:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12775:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12841:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12846:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12782:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12782:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12775:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12947:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																	"nodeType": "YulIdentifier",
																	"src": "12858:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12858:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12858:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12960:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12971:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12976:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12967:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12967:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12960:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12753:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12761:3:6",
														"type": ""
													}
												],
												"src": "12619:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13162:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13172:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13184:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13195:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13180:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13180:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13172:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13219:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13230:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13215:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13215:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13238:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13244:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13234:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13234:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13208:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13208:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13208:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13264:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13398:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13272:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13272:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13264:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13142:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13157:4:6",
														"type": ""
													}
												],
												"src": "12991:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13522:116:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13544:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13552:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13540:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13540:14:6"
																	},
																	{
																		"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13556:34:6",
																		"type": "",
																		"value": "BEP20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13533:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13533:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13533:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13612:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13620:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13608:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13608:15:6"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13625:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13601:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13601:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13601:30:6"
														}
													]
												},
												"name": "store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13514:6:6",
														"type": ""
													}
												],
												"src": "13416:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13790:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13800:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13866:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13871:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13807:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13807:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13800:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13972:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																	"nodeType": "YulIdentifier",
																	"src": "13883:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13883:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13883:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13985:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13996:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14001:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13992:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13992:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13985:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13778:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13786:3:6",
														"type": ""
													}
												],
												"src": "13644:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14187:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14197:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14209:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14220:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14205:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14205:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14197:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14244:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14255:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14240:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14240:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14263:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14269:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14259:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14259:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14233:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14233:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14233:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14289:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14423:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14297:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14297:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14289:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14167:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14182:4:6",
														"type": ""
													}
												],
												"src": "14016:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14469:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14486:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14489:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14479:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14479:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14479:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14583:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14586:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14576:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14576:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14576:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14607:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14610:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14600:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14600:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14600:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14441:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14672:149:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14682:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14705:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14687:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14687:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14682:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14716:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14739:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14721:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14721:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14716:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14750:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14762:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14765:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14758:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14758:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "14750:4:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14792:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14794:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14794:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14794:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "14783:4:6"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14789:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14780:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14780:11:6"
															},
															"nodeType": "YulIf",
															"src": "14777:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14658:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14661:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "14667:4:6",
														"type": ""
													}
												],
												"src": "14627:194:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14871:147:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14881:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14904:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14886:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14886:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14881:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14915:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14938:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14920:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14920:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14915:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14949:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14960:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14963:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14956:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14956:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "14949:3:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14989:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14991:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14991:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14991:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14981:1:6"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "14984:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14978:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14978:10:6"
															},
															"nodeType": "YulIf",
															"src": "14975:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14858:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14861:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "14867:3:6",
														"type": ""
													}
												],
												"src": "14827:191:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15130:71:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15152:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15160:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15148:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15148:14:6"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15164:29:6",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15141:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15141:53:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15141:53:6"
														}
													]
												},
												"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15122:6:6",
														"type": ""
													}
												],
												"src": "15024:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15353:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15363:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15429:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15434:2:6",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15370:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15370:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15363:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15535:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																	"nodeType": "YulIdentifier",
																	"src": "15446:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15446:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15446:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15548:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15559:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15564:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15555:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15555:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15548:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15341:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15349:3:6",
														"type": ""
													}
												],
												"src": "15207:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15750:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15760:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15772:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15783:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15768:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15768:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15760:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15807:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15818:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15803:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15803:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15826:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15832:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15822:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15822:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15796:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15796:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15796:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15852:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15986:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15860:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15860:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15852:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15730:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15745:4:6",
														"type": ""
													}
												],
												"src": "15579:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16110:114:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16132:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16140:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16128:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16128:14:6"
																	},
																	{
																		"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16144:34:6",
																		"type": "",
																		"value": "BEP20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16121:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16121:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16121:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16200:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16208:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16196:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16196:15:6"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16213:3:6",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16189:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16189:28:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16189:28:6"
														}
													]
												},
												"name": "store_literal_in_memory_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16102:6:6",
														"type": ""
													}
												],
												"src": "16004:220:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16376:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16386:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16452:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16457:2:6",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16393:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16393:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16386:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16558:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																	"nodeType": "YulIdentifier",
																	"src": "16469:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16469:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16469:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16571:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16582:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16587:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16578:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16578:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16571:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16364:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16372:3:6",
														"type": ""
													}
												],
												"src": "16230:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16773:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16783:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16795:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16806:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16791:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16791:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16783:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16830:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16841:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16826:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16826:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16849:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16855:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16845:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16845:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16819:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16819:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16819:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16875:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17009:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16883:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "16883:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16875:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16753:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16768:4:6",
														"type": ""
													}
												],
												"src": "16602:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17133:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17155:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17163:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17151:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17151:14:6"
																	},
																	{
																		"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17167:33:6",
																		"type": "",
																		"value": "BEP20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17144:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17144:57:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17144:57:6"
														}
													]
												},
												"name": "store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17125:6:6",
														"type": ""
													}
												],
												"src": "17027:181:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17360:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17370:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17436:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17441:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17377:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17377:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17370:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17542:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																	"nodeType": "YulIdentifier",
																	"src": "17453:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17453:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17453:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17555:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17566:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17571:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17562:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17562:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17555:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17348:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17356:3:6",
														"type": ""
													}
												],
												"src": "17214:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17757:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17767:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17779:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17790:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17775:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17775:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17767:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17814:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17825:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17810:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17810:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17833:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17839:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17829:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17829:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17803:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17803:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17803:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17859:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17993:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17867:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "17867:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17859:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17737:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17752:4:6",
														"type": ""
													}
												],
												"src": "17586:419:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386(memPtr) {\n\n        mstore(add(memPtr, 0), \"this token is not mintable\")\n\n    }\n\n    function abi_encode_t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: addition overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: burn from the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3(memPtr) {\n\n        mstore(add(memPtr, 0), \"BEP20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063a457c2d711610071578063a457c2d7146102f9578063a9059cbb14610329578063b723b34e14610359578063dd62ed3e14610389578063f2fde38b146103b957610116565b8063715018a614610283578063893d20e81461028d57806395d89b41146102ab578063a0712d68146102c957610116565b8063313ce567116100e9578063313ce567146101b757806339509351146101d557806342966c68146102055780634bf365df1461023557806370a082311461025357610116565b806306fdde031461011b578063095ea7b31461013957806318160ddd1461016957806323b872dd14610187575b600080fd5b6101236103d5565b604051610130919061171d565b60405180910390f35b610153600480360381019061014e91906117d8565b610467565b6040516101609190611833565b60405180910390f35b610171610485565b60405161017e919061185d565b60405180910390f35b6101a1600480360381019061019c9190611878565b61048f565b6040516101ae9190611833565b60405180910390f35b6101bf610568565b6040516101cc91906118e7565b60405180910390f35b6101ef60048036038101906101ea91906117d8565b61057f565b6040516101fc9190611833565b60405180910390f35b61021f600480360381019061021a9190611902565b610632565b60405161022c9190611833565b60405180910390f35b61023d61064e565b60405161024a9190611833565b60405180910390f35b61026d6004803603810190610268919061192f565b610665565b60405161027a919061185d565b60405180910390f35b61028b6106ae565b005b610295610806565b6040516102a2919061196b565b60405180910390f35b6102b3610830565b6040516102c0919061171d565b60405180910390f35b6102e360048036038101906102de9190611902565b6108c2565b6040516102f09190611833565b60405180910390f35b610313600480360381019061030e91906117d8565b6109c4565b6040516103209190611833565b60405180910390f35b610343600480360381019061033e91906117d8565b610a91565b6040516103509190611833565b60405180910390f35b610373600480360381019061036e9190611986565b610aaf565b6040516103809190611833565b60405180910390f35b6103a3600480360381019061039e91906119c6565b610bab565b6040516103b0919061185d565b60405180910390f35b6103d360048036038101906103ce919061192f565b610c32565b005b6060600480546103e490611a35565b80601f016020809104026020016040519081016040528092919081815260200182805461041090611a35565b801561045d5780601f106104325761010080835404028352916020019161045d565b820191906000526020600020905b81548152906001019060200180831161044057829003601f168201915b5050505050905090565b600061047b610474610df8565b8484610e00565b6001905092915050565b6000600354905090565b600061049c848484610fc9565b61055d846104a8610df8565b6105588560405180606001604052806028815260200161201a60289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061050e610df8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112559092919063ffffffff16565b610e00565b600190509392505050565b6000600660009054906101000a900460ff16905090565b600061062861058c610df8565b84610623856002600061059d610df8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112b990919063ffffffff16565b610e00565b6001905092915050565b600061064561063f610df8565b83611317565b60019050919050565b6000600660159054906101000a900460ff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6106b6610df8565b73ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610745576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073c90611ab2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606005805461083f90611a35565b80601f016020809104026020016040519081016040528092919081815260200182805461086b90611a35565b80156108b85780601f1061088d576101008083540402835291602001916108b8565b820191906000526020600020905b81548152906001019060200180831161089b57829003601f168201915b5050505050905090565b60006108cc610df8565b73ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461095b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095290611ab2565b60405180910390fd5b600660159054906101000a900460ff166109aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a190611b1e565b60405180910390fd5b6109bb6109b5610df8565b836114ba565b60019050919050565b6000610a876109d1610df8565b84610a828560405180606001604052806025815260200161206860259139600260006109fb610df8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112559092919063ffffffff16565b610e00565b6001905092915050565b6000610aa5610a9e610df8565b8484610fc9565b6001905092915050565b6000610ab9610df8565b73ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3f90611ab2565b60405180910390fd5b600660159054906101000a900460ff16610b97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8e90611b1e565b60405180910390fd5b610ba182846114ba565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610c3a610df8565b73ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610cc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc090611ab2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2f90611bb0565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6690611c42565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ede576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed590611cd4565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610fbc919061185d565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611038576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102f90611d66565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109e90611df8565b60405180910390fd5b6111138160405180606001604052806026815260200161204260269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112559092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506111a881600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112b990919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611248919061185d565b60405180910390a3505050565b600083831115829061129d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611294919061171d565b60405180910390fd5b50600083856112ac9190611e47565b9050809150509392505050565b60008082846112c89190611e7b565b90508381101561130d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130490611efb565b60405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611386576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137d90611f8d565b60405180910390fd5b6113f28160405180606001604052806022815260200161208d60229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112559092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061144a8160035461164390919063ffffffff16565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516114ae919061185d565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611529576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152090611ff9565b60405180910390fd5b61153e816003546112b990919063ffffffff16565b60038190555061159681600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112b990919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611637919061185d565b60405180910390a35050565b600061168583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611255565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156116c75780820151818401526020810190506116ac565b60008484015250505050565b6000601f19601f8301169050919050565b60006116ef8261168d565b6116f98185611698565b93506117098185602086016116a9565b611712816116d3565b840191505092915050565b6000602082019050818103600083015261173781846116e4565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061176f82611744565b9050919050565b61177f81611764565b811461178a57600080fd5b50565b60008135905061179c81611776565b92915050565b6000819050919050565b6117b5816117a2565b81146117c057600080fd5b50565b6000813590506117d2816117ac565b92915050565b600080604083850312156117ef576117ee61173f565b5b60006117fd8582860161178d565b925050602061180e858286016117c3565b9150509250929050565b60008115159050919050565b61182d81611818565b82525050565b60006020820190506118486000830184611824565b92915050565b611857816117a2565b82525050565b6000602082019050611872600083018461184e565b92915050565b6000806000606084860312156118915761189061173f565b5b600061189f8682870161178d565b93505060206118b08682870161178d565b92505060406118c1868287016117c3565b9150509250925092565b600060ff82169050919050565b6118e1816118cb565b82525050565b60006020820190506118fc60008301846118d8565b92915050565b6000602082840312156119185761191761173f565b5b6000611926848285016117c3565b91505092915050565b6000602082840312156119455761194461173f565b5b60006119538482850161178d565b91505092915050565b61196581611764565b82525050565b6000602082019050611980600083018461195c565b92915050565b6000806040838503121561199d5761199c61173f565b5b60006119ab858286016117c3565b92505060206119bc8582860161178d565b9150509250929050565b600080604083850312156119dd576119dc61173f565b5b60006119eb8582860161178d565b92505060206119fc8582860161178d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a4d57607f821691505b602082108103611a6057611a5f611a06565b5b50919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611a9c602083611698565b9150611aa782611a66565b602082019050919050565b60006020820190508181036000830152611acb81611a8f565b9050919050565b7f7468697320746f6b656e206973206e6f74206d696e7461626c65000000000000600082015250565b6000611b08601a83611698565b9150611b1382611ad2565b602082019050919050565b60006020820190508181036000830152611b3781611afb565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611b9a602683611698565b9150611ba582611b3e565b604082019050919050565b60006020820190508181036000830152611bc981611b8d565b9050919050565b7f42455032303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611c2c602483611698565b9150611c3782611bd0565b604082019050919050565b60006020820190508181036000830152611c5b81611c1f565b9050919050565b7f42455032303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611cbe602283611698565b9150611cc982611c62565b604082019050919050565b60006020820190508181036000830152611ced81611cb1565b9050919050565b7f42455032303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611d50602583611698565b9150611d5b82611cf4565b604082019050919050565b60006020820190508181036000830152611d7f81611d43565b9050919050565b7f42455032303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611de2602383611698565b9150611ded82611d86565b604082019050919050565b60006020820190508181036000830152611e1181611dd5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e52826117a2565b9150611e5d836117a2565b9250828203905081811115611e7557611e74611e18565b5b92915050565b6000611e86826117a2565b9150611e91836117a2565b9250828201905080821115611ea957611ea8611e18565b5b92915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b6000611ee5601b83611698565b9150611ef082611eaf565b602082019050919050565b60006020820190508181036000830152611f1481611ed8565b9050919050565b7f42455032303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611f77602183611698565b9150611f8282611f1b565b604082019050919050565b60006020820190508181036000830152611fa681611f6a565b9050919050565b7f42455032303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611fe3601f83611698565b9150611fee82611fad565b602082019050919050565b6000602082019050818103600083015261201281611fd6565b905091905056fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365a264697066735822122069685b5bd3acb4a88fec328e3d502473857a272705882af9cd2e1e4676a54f7764736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0xB723B34E EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3B9 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2C9 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x4BF365DF EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x253 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x187 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x171D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x17D8 JUMP JUMPDEST PUSH2 0x467 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH2 0x485 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x1878 JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x568 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x17D8 JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23D PUSH2 0x64E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x192F JUMP JUMPDEST PUSH2 0x665 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH2 0x6AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x295 PUSH2 0x806 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B3 PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x171D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x1902 JUMP JUMPDEST PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x313 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x17D8 JUMP JUMPDEST PUSH2 0x9C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x343 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x17D8 JUMP JUMPDEST PUSH2 0xA91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x373 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x1986 JUMP JUMPDEST PUSH2 0xAAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x19C6 JUMP JUMPDEST PUSH2 0xBAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x192F JUMP JUMPDEST PUSH2 0xC32 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3E4 SWAP1 PUSH2 0x1A35 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x410 SWAP1 PUSH2 0x1A35 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x45D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x432 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x45D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x440 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47B PUSH2 0x474 PUSH2 0xDF8 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49C DUP5 DUP5 DUP5 PUSH2 0xFC9 JUMP JUMPDEST PUSH2 0x55D DUP5 PUSH2 0x4A8 PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0x558 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x201A PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x50E PUSH2 0xDF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1255 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x628 PUSH2 0x58C PUSH2 0xDF8 JUMP JUMPDEST DUP5 PUSH2 0x623 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x59D PUSH2 0xDF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12B9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x645 PUSH2 0x63F PUSH2 0xDF8 JUMP JUMPDEST DUP4 PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6B6 PUSH2 0xDF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x745 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73C SWAP1 PUSH2 0x1AB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x6 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x83F SWAP1 PUSH2 0x1A35 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x86B SWAP1 PUSH2 0x1A35 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8B8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x88D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8B8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x89B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8CC PUSH2 0xDF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x95B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x952 SWAP1 PUSH2 0x1AB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x9AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A1 SWAP1 PUSH2 0x1B1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9BB PUSH2 0x9B5 PUSH2 0xDF8 JUMP JUMPDEST DUP4 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA87 PUSH2 0x9D1 PUSH2 0xDF8 JUMP JUMPDEST DUP5 PUSH2 0xA82 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2068 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x9FB PUSH2 0xDF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1255 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA5 PUSH2 0xA9E PUSH2 0xDF8 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xFC9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB9 PUSH2 0xDF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3F SWAP1 PUSH2 0x1AB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xB97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8E SWAP1 PUSH2 0x1B1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBA1 DUP3 DUP5 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC3A PUSH2 0xDF8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP1 PUSH2 0x1AB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2F SWAP1 PUSH2 0x1BB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x6 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE66 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEDE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED5 SWAP1 PUSH2 0x1CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFBC SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1038 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102F SWAP1 PUSH2 0x1D66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109E SWAP1 PUSH2 0x1DF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1113 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2042 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1255 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x11A8 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12B9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1248 SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x129D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1294 SWAP2 SWAP1 PUSH2 0x171D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x12AC SWAP2 SWAP1 PUSH2 0x1E47 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x12C8 SWAP2 SWAP1 PUSH2 0x1E7B JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x130D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1304 SWAP1 PUSH2 0x1EFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1386 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x137D SWAP1 PUSH2 0x1F8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F2 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x208D PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1255 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x144A DUP2 PUSH1 0x3 SLOAD PUSH2 0x1643 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x14AE SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1529 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1520 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x153E DUP2 PUSH1 0x3 SLOAD PUSH2 0x12B9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1596 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12B9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1637 SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1685 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x1255 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16C7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16EF DUP3 PUSH2 0x168D JUMP JUMPDEST PUSH2 0x16F9 DUP2 DUP6 PUSH2 0x1698 JUMP JUMPDEST SWAP4 POP PUSH2 0x1709 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x1712 DUP2 PUSH2 0x16D3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1737 DUP2 DUP5 PUSH2 0x16E4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x176F DUP3 PUSH2 0x1744 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x177F DUP2 PUSH2 0x1764 JUMP JUMPDEST DUP2 EQ PUSH2 0x178A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x179C DUP2 PUSH2 0x1776 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17B5 DUP2 PUSH2 0x17A2 JUMP JUMPDEST DUP2 EQ PUSH2 0x17C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17D2 DUP2 PUSH2 0x17AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17EF JUMPI PUSH2 0x17EE PUSH2 0x173F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17FD DUP6 DUP3 DUP7 ADD PUSH2 0x178D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x180E DUP6 DUP3 DUP7 ADD PUSH2 0x17C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x182D DUP2 PUSH2 0x1818 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1848 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1824 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1857 DUP2 PUSH2 0x17A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1872 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x184E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1891 JUMPI PUSH2 0x1890 PUSH2 0x173F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x189F DUP7 DUP3 DUP8 ADD PUSH2 0x178D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18B0 DUP7 DUP3 DUP8 ADD PUSH2 0x178D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18C1 DUP7 DUP3 DUP8 ADD PUSH2 0x17C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E1 DUP2 PUSH2 0x18CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18FC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1918 JUMPI PUSH2 0x1917 PUSH2 0x173F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1926 DUP5 DUP3 DUP6 ADD PUSH2 0x17C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1945 JUMPI PUSH2 0x1944 PUSH2 0x173F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1953 DUP5 DUP3 DUP6 ADD PUSH2 0x178D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1965 DUP2 PUSH2 0x1764 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1980 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x195C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x199D JUMPI PUSH2 0x199C PUSH2 0x173F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19AB DUP6 DUP3 DUP7 ADD PUSH2 0x17C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19BC DUP6 DUP3 DUP7 ADD PUSH2 0x178D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19DD JUMPI PUSH2 0x19DC PUSH2 0x173F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19EB DUP6 DUP3 DUP7 ADD PUSH2 0x178D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19FC DUP6 DUP3 DUP7 ADD PUSH2 0x178D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A4D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A60 JUMPI PUSH2 0x1A5F PUSH2 0x1A06 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A9C PUSH1 0x20 DUP4 PUSH2 0x1698 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA7 DUP3 PUSH2 0x1A66 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ACB DUP2 PUSH2 0x1A8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7468697320746F6B656E206973206E6F74206D696E7461626C65000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B08 PUSH1 0x1A DUP4 PUSH2 0x1698 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B13 DUP3 PUSH2 0x1AD2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B37 DUP2 PUSH2 0x1AFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B9A PUSH1 0x26 DUP4 PUSH2 0x1698 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BA5 DUP3 PUSH2 0x1B3E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BC9 DUP2 PUSH2 0x1B8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C2C PUSH1 0x24 DUP4 PUSH2 0x1698 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C37 DUP3 PUSH2 0x1BD0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C5B DUP2 PUSH2 0x1C1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CBE PUSH1 0x22 DUP4 PUSH2 0x1698 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC9 DUP3 PUSH2 0x1C62 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CED DUP2 PUSH2 0x1CB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D50 PUSH1 0x25 DUP4 PUSH2 0x1698 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D5B DUP3 PUSH2 0x1CF4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D7F DUP2 PUSH2 0x1D43 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DE2 PUSH1 0x23 DUP4 PUSH2 0x1698 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DED DUP3 PUSH2 0x1D86 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E11 DUP2 PUSH2 0x1DD5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E52 DUP3 PUSH2 0x17A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E5D DUP4 PUSH2 0x17A2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1E75 JUMPI PUSH2 0x1E74 PUSH2 0x1E18 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E86 DUP3 PUSH2 0x17A2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E91 DUP4 PUSH2 0x17A2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1EA9 JUMPI PUSH2 0x1EA8 PUSH2 0x1E18 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE5 PUSH1 0x1B DUP4 PUSH2 0x1698 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF0 DUP3 PUSH2 0x1EAF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F14 DUP2 PUSH2 0x1ED8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F77 PUSH1 0x21 DUP4 PUSH2 0x1698 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F82 DUP3 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FA6 DUP2 PUSH2 0x1F6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE3 PUSH1 0x1F DUP4 PUSH2 0x1698 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FEE DUP3 PUSH2 0x1FAD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2012 DUP2 PUSH2 0x1FD6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636542455032303A20747261 PUSH15 0x7366657220616D6F756E7420657863 PUSH6 0x656473206261 PUSH13 0x616E636542455032303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726F42455032303A206275 PUSH19 0x6E20616D6F756E742065786365656473206261 PUSH13 0x616E6365A26469706673582212 KECCAK256 PUSH10 0x685B5BD3ACB4A88FEC32 DUP15 RETURNDATASIZE POP 0x24 PUSH20 0x857A272705882AF9CD2E1E4676A54F7764736F6C PUSH4 0x43000812 STOP CALLER ",
							"sourceMap": "216:10968:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3108:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4289:163;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3266:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4923:315;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2790:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5646:210;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7624:131;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2478:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3430:121;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1868:140;;;:::i;:::-;;2630:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2949:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6872:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6358:261;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3763:173;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7313:218;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:145;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2163:236;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3108:94;3156:13;3189:5;3182:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3108:94;:::o;4289:163::-;4366:4;4383:39;4392:12;:10;:12::i;:::-;4406:7;4415:6;4383:8;:39::i;:::-;4440:4;4433:11;;4289:163;;;;:::o;3266:102::-;3321:7;3348:12;;3341:19;;3266:102;:::o;4923:315::-;5023:4;5040:36;5050:6;5058:9;5069:6;5040:9;:36::i;:::-;5087:121;5096:6;5104:12;:10;:12::i;:::-;5118:89;5156:6;5118:89;;;;;;;;;;;;;;;;;:11;:19;5130:6;5118:19;;;;;;;;;;;;;;;:33;5138:12;:10;:12::i;:::-;5118:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5087:8;:121::i;:::-;5226:4;5219:11;;4923:315;;;;;:::o;2790:94::-;2842:5;2867:9;;;;;;;;;;;2860:16;;2790:94;:::o;5646:210::-;5726:4;5743:83;5752:12;:10;:12::i;:::-;5766:7;5775:50;5814:10;5775:11;:25;5787:12;:10;:12::i;:::-;5775:25;;;;;;;;;;;;;;;:34;5801:7;5775:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5743:8;:83::i;:::-;5844:4;5837:11;;5646:210;;;;:::o;7624:131::-;7681:4;7698:27;7704:12;:10;:12::i;:::-;7718:6;7698:5;:27::i;:::-;7743:4;7736:11;;7624:131;;;:::o;2478:84::-;2521:4;2545:9;;;;;;;;;;;2538:16;;2478:84;:::o;3430:121::-;3498:7;3525:9;:18;3535:7;3525:18;;;;;;;;;;;;;;;;3518:25;;3430:121;;;:::o;1868:140::-;1019:12;:10;:12::i;:::-;1009:22;;:6;;;;;;;;;;;:22;;;1001:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1967:1:::1;1930:40;;1951:6;;;;;;;;;;;1930:40;;;;;;;;;;;;1998:1;1981:6;;:19;;;;;;;;;;;;;;;;;;1868:140::o:0;2630:93::-;2682:7;2709:6;;;;;;;;;;;2702:13;;2630:93;:::o;2949:98::-;2999:13;3032:7;3025:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2949:98;:::o;6872:189::-;6928:4;1019:12;:10;:12::i;:::-;1009:22;;:6;;;;;;;;;;;:22;;;1001:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;6953:9:::1;;;;;;;;;;;6945:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;7004:27;7010:12;:10;:12::i;:::-;7024:6;7004:5;:27::i;:::-;7049:4;7042:11;;6872:189:::0;;;:::o;6358:261::-;6443:4;6460:129;6469:12;:10;:12::i;:::-;6483:7;6492:96;6531:15;6492:96;;;;;;;;;;;;;;;;;:11;:25;6504:12;:10;:12::i;:::-;6492:25;;;;;;;;;;;;;;;:34;6518:7;6492:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6460:8;:129::i;:::-;6607:4;6600:11;;6358:261;;;;:::o;3763:173::-;3843:4;3862:42;3872:12;:10;:12::i;:::-;3886:9;3897:6;3862:9;:42::i;:::-;3924:4;3917:11;;3763:173;;;;:::o;7313:218::-;7401:4;1019:12;:10;:12::i;:::-;1009:22;;:6;;;;;;;;;;;:22;;;1001:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;7426:9:::1;;;;;;;;;;;7418:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;7477:24;7483:9;7494:6;7477:5;:24::i;:::-;7519:4;7512:11;;7313:218:::0;;;;:::o;3998:145::-;4081:7;4108:11;:18;4120:5;4108:18;;;;;;;;;;;;;;;:27;4127:7;4108:27;;;;;;;;;;;;;;;;4101:34;;3998:145;;;;:::o;2163:236::-;1019:12;:10;:12::i;:::-;1009:22;;:6;;;;;;;;;;;:22;;;1001:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2264:1:::1;2244:22;;:8;:22;;::::0;2236:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2354:8;2325:38;;2346:6;;;;;;;;;;;2325:38;;;;;;;;;;;;2383:8;2374:6;;:17;;;;;;;;;;;;;;;;;;2163:236:::0;:::o;619:98:0:-;672:7;699:10;692:17;;619:98;:::o;10425:338:4:-;10536:1;10519:19;;:5;:19;;;10511:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10617:1;10598:21;;:7;:21;;;10590:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10701:6;10671:11;:18;10683:5;10671:18;;;;;;;;;;;;;;;:27;10690:7;10671:27;;;;;;;;;;;;;;;:36;;;;10739:7;10723:32;;10732:5;10723:32;;;10748:6;10723:32;;;;;;:::i;:::-;;;;;;;;10425:338;;;:::o;8245:471::-;8361:1;8343:20;;:6;:20;;;8335:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;8445:1;8424:23;;:9;:23;;;8416:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;8520;8542:6;8520:71;;;;;;;;;;;;;;;;;:9;:17;8530:6;8520:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;8500:9;:17;8510:6;8500:17;;;;;;;;;;;;;;;:91;;;;8625:32;8650:6;8625:9;:20;8635:9;8625:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;8602:9;:20;8612:9;8602:20;;;;;;;;;;;;;;;:55;;;;8690:9;8673:35;;8682:6;8673:35;;;8701:6;8673:35;;;;;;:::i;:::-;;;;;;;;8245:471;;;:::o;1817:192:5:-;1903:7;1936:1;1931;:6;;1939:12;1923:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1963:9;1979:1;1975;:5;;;;:::i;:::-;1963:17;;2000:1;1993:8;;;1817:192;;;;;:::o;914:181::-;972:7;992:9;1008:1;1004;:5;;;;:::i;:::-;992:17;;1033:1;1028;:6;;1020:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;1086:1;1079:8;;;914:181;;;;:::o;9637:348:4:-;9732:1;9713:21;;:7;:21;;;9705:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;9806:68;9829:6;9806:68;;;;;;;;;;;;;;;;;:9;:18;9816:7;9806:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;9785:9;:18;9795:7;9785:18;;;;;;;;;;;;;;;:89;;;;9900:24;9917:6;9900:12;;:16;;:24;;;;:::i;:::-;9885:12;:39;;;;9966:1;9940:37;;9949:7;9940:37;;;9970:6;9940:37;;;;;;:::i;:::-;;;;;;;;9637:348;;:::o;8997:308::-;9092:1;9073:21;;:7;:21;;;9065:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;9158:24;9175:6;9158:12;;:16;;:24;;;;:::i;:::-;9143:12;:39;;;;9214:30;9237:6;9214:9;:18;9224:7;9214:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;9193:9;:18;9203:7;9193:18;;;;;;;;;;;;;;;:51;;;;9281:7;9260:37;;9277:1;9260:37;;;9290:6;9260:37;;;;;;:::i;:::-;;;;;;;;8997:308;;:::o;1378:136:5:-;1436:7;1463:43;1467:1;1470;1463:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1456:50;;1378:136;;;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:::-;5247:6;5296:2;5284:9;5275:7;5271:23;5267:32;5264:119;;;5302:79;;:::i;:::-;5264:119;5422:1;5447:53;5492:7;5483:6;5472:9;5468:22;5447:53;:::i;:::-;5437:63;;5393:117;5188:329;;;;:::o;5523:118::-;5610:24;5628:5;5610:24;:::i;:::-;5605:3;5598:37;5523:118;;:::o;5647:222::-;5740:4;5778:2;5767:9;5763:18;5755:26;;5791:71;5859:1;5848:9;5844:17;5835:6;5791:71;:::i;:::-;5647:222;;;;:::o;5875:474::-;5943:6;5951;6000:2;5988:9;5979:7;5975:23;5971:32;5968:119;;;6006:79;;:::i;:::-;5968:119;6126:1;6151:53;6196:7;6187:6;6176:9;6172:22;6151:53;:::i;:::-;6141:63;;6097:117;6253:2;6279:53;6324:7;6315:6;6304:9;6300:22;6279:53;:::i;:::-;6269:63;;6224:118;5875:474;;;;;:::o;6355:::-;6423:6;6431;6480:2;6468:9;6459:7;6455:23;6451:32;6448:119;;;6486:79;;:::i;:::-;6448:119;6606:1;6631:53;6676:7;6667:6;6656:9;6652:22;6631:53;:::i;:::-;6621:63;;6577:117;6733:2;6759:53;6804:7;6795:6;6784:9;6780:22;6759:53;:::i;:::-;6749:63;;6704:118;6355:474;;;;;:::o;6835:180::-;6883:77;6880:1;6873:88;6980:4;6977:1;6970:15;7004:4;7001:1;6994:15;7021:320;7065:6;7102:1;7096:4;7092:12;7082:22;;7149:1;7143:4;7139:12;7170:18;7160:81;;7226:4;7218:6;7214:17;7204:27;;7160:81;7288:2;7280:6;7277:14;7257:18;7254:38;7251:84;;7307:18;;:::i;:::-;7251:84;7072:269;7021:320;;;:::o;7347:182::-;7487:34;7483:1;7475:6;7471:14;7464:58;7347:182;:::o;7535:366::-;7677:3;7698:67;7762:2;7757:3;7698:67;:::i;:::-;7691:74;;7774:93;7863:3;7774:93;:::i;:::-;7892:2;7887:3;7883:12;7876:19;;7535:366;;;:::o;7907:419::-;8073:4;8111:2;8100:9;8096:18;8088:26;;8160:9;8154:4;8150:20;8146:1;8135:9;8131:17;8124:47;8188:131;8314:4;8188:131;:::i;:::-;8180:139;;7907:419;;;:::o;8332:176::-;8472:28;8468:1;8460:6;8456:14;8449:52;8332:176;:::o;8514:366::-;8656:3;8677:67;8741:2;8736:3;8677:67;:::i;:::-;8670:74;;8753:93;8842:3;8753:93;:::i;:::-;8871:2;8866:3;8862:12;8855:19;;8514:366;;;:::o;8886:419::-;9052:4;9090:2;9079:9;9075:18;9067:26;;9139:9;9133:4;9129:20;9125:1;9114:9;9110:17;9103:47;9167:131;9293:4;9167:131;:::i;:::-;9159:139;;8886:419;;;:::o;9311:225::-;9451:34;9447:1;9439:6;9435:14;9428:58;9520:8;9515:2;9507:6;9503:15;9496:33;9311:225;:::o;9542:366::-;9684:3;9705:67;9769:2;9764:3;9705:67;:::i;:::-;9698:74;;9781:93;9870:3;9781:93;:::i;:::-;9899:2;9894:3;9890:12;9883:19;;9542:366;;;:::o;9914:419::-;10080:4;10118:2;10107:9;10103:18;10095:26;;10167:9;10161:4;10157:20;10153:1;10142:9;10138:17;10131:47;10195:131;10321:4;10195:131;:::i;:::-;10187:139;;9914:419;;;:::o;10339:223::-;10479:34;10475:1;10467:6;10463:14;10456:58;10548:6;10543:2;10535:6;10531:15;10524:31;10339:223;:::o;10568:366::-;10710:3;10731:67;10795:2;10790:3;10731:67;:::i;:::-;10724:74;;10807:93;10896:3;10807:93;:::i;:::-;10925:2;10920:3;10916:12;10909:19;;10568:366;;;:::o;10940:419::-;11106:4;11144:2;11133:9;11129:18;11121:26;;11193:9;11187:4;11183:20;11179:1;11168:9;11164:17;11157:47;11221:131;11347:4;11221:131;:::i;:::-;11213:139;;10940:419;;;:::o;11365:221::-;11505:34;11501:1;11493:6;11489:14;11482:58;11574:4;11569:2;11561:6;11557:15;11550:29;11365:221;:::o;11592:366::-;11734:3;11755:67;11819:2;11814:3;11755:67;:::i;:::-;11748:74;;11831:93;11920:3;11831:93;:::i;:::-;11949:2;11944:3;11940:12;11933:19;;11592:366;;;:::o;11964:419::-;12130:4;12168:2;12157:9;12153:18;12145:26;;12217:9;12211:4;12207:20;12203:1;12192:9;12188:17;12181:47;12245:131;12371:4;12245:131;:::i;:::-;12237:139;;11964:419;;;:::o;12389:224::-;12529:34;12525:1;12517:6;12513:14;12506:58;12598:7;12593:2;12585:6;12581:15;12574:32;12389:224;:::o;12619:366::-;12761:3;12782:67;12846:2;12841:3;12782:67;:::i;:::-;12775:74;;12858:93;12947:3;12858:93;:::i;:::-;12976:2;12971:3;12967:12;12960:19;;12619:366;;;:::o;12991:419::-;13157:4;13195:2;13184:9;13180:18;13172:26;;13244:9;13238:4;13234:20;13230:1;13219:9;13215:17;13208:47;13272:131;13398:4;13272:131;:::i;:::-;13264:139;;12991:419;;;:::o;13416:222::-;13556:34;13552:1;13544:6;13540:14;13533:58;13625:5;13620:2;13612:6;13608:15;13601:30;13416:222;:::o;13644:366::-;13786:3;13807:67;13871:2;13866:3;13807:67;:::i;:::-;13800:74;;13883:93;13972:3;13883:93;:::i;:::-;14001:2;13996:3;13992:12;13985:19;;13644:366;;;:::o;14016:419::-;14182:4;14220:2;14209:9;14205:18;14197:26;;14269:9;14263:4;14259:20;14255:1;14244:9;14240:17;14233:47;14297:131;14423:4;14297:131;:::i;:::-;14289:139;;14016:419;;;:::o;14441:180::-;14489:77;14486:1;14479:88;14586:4;14583:1;14576:15;14610:4;14607:1;14600:15;14627:194;14667:4;14687:20;14705:1;14687:20;:::i;:::-;14682:25;;14721:20;14739:1;14721:20;:::i;:::-;14716:25;;14765:1;14762;14758:9;14750:17;;14789:1;14783:4;14780:11;14777:37;;;14794:18;;:::i;:::-;14777:37;14627:194;;;;:::o;14827:191::-;14867:3;14886:20;14904:1;14886:20;:::i;:::-;14881:25;;14920:20;14938:1;14920:20;:::i;:::-;14915:25;;14963:1;14960;14956:9;14949:16;;14984:3;14981:1;14978:10;14975:36;;;14991:18;;:::i;:::-;14975:36;14827:191;;;;:::o;15024:177::-;15164:29;15160:1;15152:6;15148:14;15141:53;15024:177;:::o;15207:366::-;15349:3;15370:67;15434:2;15429:3;15370:67;:::i;:::-;15363:74;;15446:93;15535:3;15446:93;:::i;:::-;15564:2;15559:3;15555:12;15548:19;;15207:366;;;:::o;15579:419::-;15745:4;15783:2;15772:9;15768:18;15760:26;;15832:9;15826:4;15822:20;15818:1;15807:9;15803:17;15796:47;15860:131;15986:4;15860:131;:::i;:::-;15852:139;;15579:419;;;:::o;16004:220::-;16144:34;16140:1;16132:6;16128:14;16121:58;16213:3;16208:2;16200:6;16196:15;16189:28;16004:220;:::o;16230:366::-;16372:3;16393:67;16457:2;16452:3;16393:67;:::i;:::-;16386:74;;16469:93;16558:3;16469:93;:::i;:::-;16587:2;16582:3;16578:12;16571:19;;16230:366;;;:::o;16602:419::-;16768:4;16806:2;16795:9;16791:18;16783:26;;16855:9;16849:4;16845:20;16841:1;16830:9;16826:17;16819:47;16883:131;17009:4;16883:131;:::i;:::-;16875:139;;16602:419;;;:::o;17027:181::-;17167:33;17163:1;17155:6;17151:14;17144:57;17027:181;:::o;17214:366::-;17356:3;17377:67;17441:2;17436:3;17377:67;:::i;:::-;17370:74;;17453:93;17542:3;17453:93;:::i;:::-;17571:2;17566:3;17562:12;17555:19;;17214:366;;;:::o;17586:419::-;17752:4;17790:2;17779:9;17775:18;17767:26;;17839:9;17833:4;17829:20;17825:1;17814:9;17810:17;17803:47;17867:131;17993:4;17867:131;:::i;:::-;17859:139;;17586:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1684000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2952",
								"burn(uint256)": "infinite",
								"decimals()": "2502",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "2617",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"mintTo(uint256,address)": "infinite",
								"mintable()": "2618",
								"name()": "infinite",
								"renounceOwnership()": "30470",
								"symbol()": "infinite",
								"totalSupply()": "2505",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "30903"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 11184,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 216,
									"end": 11184,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 216,
									"end": 11184,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 473,
									"end": 500,
									"name": "PUSH",
									"source": 4,
									"value": "52B7D2DCC80CD2E4000000"
								},
								{
									"begin": 442,
									"end": 500,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 442,
									"end": 500,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 507,
									"end": 536,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 507,
									"end": 536,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 507,
									"end": 536,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 507,
									"end": 536,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 507,
									"end": 536,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 507,
									"end": 536,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 507,
									"end": 536,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 507,
									"end": 536,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 507,
									"end": 536,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 507,
									"end": 536,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 507,
									"end": 536,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 507,
									"end": 536,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 507,
									"end": 536,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 507,
									"end": 536,
									"name": "PUSH",
									"source": 4,
									"value": "4D47415300000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 507,
									"end": 536,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 507,
									"end": 536,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 507,
									"end": 536,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 507,
									"end": 536,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 507,
									"end": 536,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 507,
									"end": 536,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 507,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 507,
									"end": 536,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 507,
									"end": 536,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 507,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 507,
									"end": 536,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 507,
									"end": 536,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 507,
									"end": 536,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 507,
									"end": 536,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 543,
									"end": 574,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 543,
									"end": 574,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 543,
									"end": 574,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 543,
									"end": 574,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 543,
									"end": 574,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 543,
									"end": 574,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 543,
									"end": 574,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 543,
									"end": 574,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 543,
									"end": 574,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 543,
									"end": 574,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 543,
									"end": 574,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 543,
									"end": 574,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 574,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 543,
									"end": 574,
									"name": "PUSH",
									"source": 4,
									"value": "4D47415300000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 543,
									"end": 574,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 543,
									"end": 574,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 543,
									"end": 574,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 543,
									"end": 574,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 543,
									"end": 574,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 543,
									"end": 574,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 543,
									"end": 574,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 543,
									"end": 574,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 543,
									"end": 574,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 543,
									"end": 574,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 543,
									"end": 574,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 543,
									"end": 574,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 543,
									"end": 574,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 543,
									"end": 574,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 607,
									"end": 609,
									"name": "PUSH",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 581,
									"end": 609,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 581,
									"end": 609,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 581,
									"end": 609,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 581,
									"end": 609,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 581,
									"end": 609,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 581,
									"end": 609,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 581,
									"end": 609,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 581,
									"end": 609,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 581,
									"end": 609,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 581,
									"end": 609,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 581,
									"end": 609,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 581,
									"end": 609,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 581,
									"end": 609,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 581,
									"end": 609,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 581,
									"end": 609,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 581,
									"end": 609,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 581,
									"end": 609,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 581,
									"end": 609,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 581,
									"end": 609,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 581,
									"end": 609,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 776,
									"end": 876,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 776,
									"end": 876,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 776,
									"end": 876,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 776,
									"end": 876,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 776,
									"end": 876,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 776,
									"end": 876,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 776,
									"end": 876,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 776,
									"end": 876,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 776,
									"end": 876,
									"name": "tag",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 776,
									"end": 876,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 776,
									"end": 876,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 826,
									"end": 838,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 826,
									"end": 838,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 802,
									"end": 811,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 802,
									"end": 823,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 812,
									"end": 822,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 802,
									"end": 823,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 802,
									"end": 823,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 802,
									"end": 823,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 802,
									"end": 823,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 802,
									"end": 823,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 802,
									"end": 823,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 802,
									"end": 823,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 802,
									"end": 823,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 802,
									"end": 823,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 802,
									"end": 823,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 802,
									"end": 823,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 802,
									"end": 823,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 802,
									"end": 823,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 802,
									"end": 823,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 802,
									"end": 823,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 802,
									"end": 838,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 802,
									"end": 838,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 802,
									"end": 838,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 802,
									"end": 838,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 858,
									"end": 868,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 849,
									"end": 855,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 849,
									"end": 855,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 849,
									"end": 868,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 849,
									"end": 868,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 849,
									"end": 868,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 849,
									"end": 868,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 849,
									"end": 868,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 849,
									"end": 868,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 849,
									"end": 868,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 849,
									"end": 868,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 849,
									"end": 868,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 849,
									"end": 868,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 849,
									"end": 868,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 849,
									"end": 868,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 849,
									"end": 868,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 849,
									"end": 868,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 849,
									"end": 868,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 849,
									"end": 868,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 849,
									"end": 868,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 849,
									"end": 868,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 216,
									"end": 11184,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 216,
									"end": 11184,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 216,
									"end": 11184,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 216,
									"end": 11184,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 216,
									"end": 11184,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 11184,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 216,
									"end": 11184,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 11184,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 11184,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 216,
									"end": 11184,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 11184,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122069685b5bd3acb4a88fec328e3d502473857a272705882af9cd2e1e4676a54f7764736f6c63430008120033",
									".code": [
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH",
											"source": 4,
											"value": "A457C2D7"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH",
											"source": 4,
											"value": "A457C2D7"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH",
											"source": 4,
											"value": "B723B34E"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH",
											"source": 4,
											"value": "893D20E8"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH",
											"source": 4,
											"value": "A0712D68"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH",
											"source": 4,
											"value": "42966C68"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH",
											"source": 4,
											"value": "4BF365DF"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 216,
											"end": 11184,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3202,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3108,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3108,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3108,
											"end": 3202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3202,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3108,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3202,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3108,
											"end": 3202,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3108,
											"end": 3202,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 3108,
											"end": 3202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3202,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3108,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3202,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3108,
											"end": 3202,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3202,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3202,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3202,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3202,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4289,
											"end": 4452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4289,
											"end": 4452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 4289,
											"end": 4452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3368,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3266,
											"end": 3368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3266,
											"end": 3368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3266,
											"end": 3368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3368,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3266,
											"end": 3368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3368,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3266,
											"end": 3368,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3266,
											"end": 3368,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3368,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3266,
											"end": 3368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3368,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3266,
											"end": 3368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3368,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3266,
											"end": 3368,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3368,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3368,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3368,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3368,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4923,
											"end": 5238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4923,
											"end": 5238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 4923,
											"end": 5238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2790,
											"end": 2884,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2790,
											"end": 2884,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2790,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2790,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2790,
											"end": 2884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2790,
											"end": 2884,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2790,
											"end": 2884,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2790,
											"end": 2884,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2790,
											"end": 2884,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2790,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2790,
											"end": 2884,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2790,
											"end": 2884,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2790,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2790,
											"end": 2884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2790,
											"end": 2884,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2790,
											"end": 2884,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2790,
											"end": 2884,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2790,
											"end": 2884,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2790,
											"end": 2884,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2790,
											"end": 2884,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2790,
											"end": 2884,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2790,
											"end": 2884,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2790,
											"end": 2884,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 5646,
											"end": 5856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 5646,
											"end": 5856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 5646,
											"end": 5856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 7624,
											"end": 7755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 7624,
											"end": 7755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 7624,
											"end": 7755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2562,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2478,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2478,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2478,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2562,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2478,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2478,
											"end": 2562,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2478,
											"end": 2562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2478,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2562,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2478,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2478,
											"end": 2562,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2562,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2562,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3430,
											"end": 3551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3430,
											"end": 3551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3430,
											"end": 3551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 2008,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1868,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1868,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1868,
											"end": 2008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 2008,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1868,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 2008,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2630,
											"end": 2723,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 2630,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2630,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2630,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2630,
											"end": 2723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2630,
											"end": 2723,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2630,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2630,
											"end": 2723,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2630,
											"end": 2723,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2630,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2630,
											"end": 2723,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2630,
											"end": 2723,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2630,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2630,
											"end": 2723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2630,
											"end": 2723,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2630,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2630,
											"end": 2723,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2630,
											"end": 2723,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2630,
											"end": 2723,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2630,
											"end": 2723,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2630,
											"end": 2723,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2630,
											"end": 2723,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2630,
											"end": 2723,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 3047,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2949,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2949,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2949,
											"end": 3047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 3047,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2949,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 3047,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2949,
											"end": 3047,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2949,
											"end": 3047,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 3047,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2949,
											"end": 3047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 3047,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2949,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 3047,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2949,
											"end": 3047,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 3047,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 3047,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 3047,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 3047,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 3047,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 6872,
											"end": 7061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 6872,
											"end": 7061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 6872,
											"end": 7061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 6358,
											"end": 6619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 6358,
											"end": 6619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 6358,
											"end": 6619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3763,
											"end": 3936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3763,
											"end": 3936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3763,
											"end": 3936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 7313,
											"end": 7531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 7313,
											"end": 7531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 7313,
											"end": 7531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3998,
											"end": 4143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3998,
											"end": 4143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3998,
											"end": 4143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2399,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2163,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2163,
											"end": 2399,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2163,
											"end": 2399,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2399,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2399,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2399,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2399,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2399,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2163,
											"end": 2399,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2399,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2163,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2399,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2163,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2163,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2399,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2163,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2399,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3202,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3108,
											"end": 3202,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3169,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3189,
											"end": 3194,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3182,
											"end": 3194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3182,
											"end": 3194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3108,
											"end": 3202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4383,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 4392,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 4392,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4392,
											"end": 4404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4392,
											"end": 4404,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 4392,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4406,
											"end": 4413,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4415,
											"end": 4421,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4383,
											"end": 4391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4383,
											"end": 4422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4383,
											"end": 4422,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 4383,
											"end": 4422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4440,
											"end": 4444,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4433,
											"end": 4444,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4433,
											"end": 4444,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4452,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4289,
											"end": 4452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3368,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3266,
											"end": 3368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3321,
											"end": 3328,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3348,
											"end": 3360,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3348,
											"end": 3360,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3360,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3360,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3368,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5023,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5040,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 5050,
											"end": 5056,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5058,
											"end": 5067,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5069,
											"end": 5075,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5040,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 5040,
											"end": 5076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5040,
											"end": 5076,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 5040,
											"end": 5076,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5087,
											"end": 5208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 5096,
											"end": 5102,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5104,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 5104,
											"end": 5114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5104,
											"end": 5116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5104,
											"end": 5116,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 5104,
											"end": 5116,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 5156,
											"end": 5162,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5207,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5118,
											"end": 5207,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5207,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5207,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5118,
											"end": 5207,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5207,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5118,
											"end": 5207,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5207,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5207,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5118,
											"end": 5207,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5207,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5207,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5118,
											"end": 5207,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5207,
											"name": "PUSH data",
											"source": 4,
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 5118,
											"end": 5207,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5118,
											"end": 5207,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5207,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5129,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5118,
											"end": 5137,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5130,
											"end": 5136,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5137,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5118,
											"end": 5137,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5137,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5118,
											"end": 5137,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5137,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5137,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5137,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5118,
											"end": 5137,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5137,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5137,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5137,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5137,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5118,
											"end": 5137,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5137,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5118,
											"end": 5137,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5151,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5138,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 5138,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5138,
											"end": 5150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5150,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 5138,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5151,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5118,
											"end": 5151,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5151,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5118,
											"end": 5151,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5151,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5151,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5151,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5118,
											"end": 5151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5151,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5151,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5151,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5151,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5118,
											"end": 5151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5151,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5118,
											"end": 5151,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5151,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5155,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 5118,
											"end": 5155,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5207,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5207,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5207,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5207,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5118,
											"end": 5207,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5207,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 5118,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5087,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5087,
											"end": 5208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5087,
											"end": 5208,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 5087,
											"end": 5208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5226,
											"end": 5230,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5219,
											"end": 5230,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5219,
											"end": 5230,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 5238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2790,
											"end": 2884,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2790,
											"end": 2884,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2847,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2867,
											"end": 2876,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2867,
											"end": 2876,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2867,
											"end": 2876,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2867,
											"end": 2876,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2867,
											"end": 2876,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2867,
											"end": 2876,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2867,
											"end": 2876,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2867,
											"end": 2876,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2867,
											"end": 2876,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2867,
											"end": 2876,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2867,
											"end": 2876,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2860,
											"end": 2876,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2860,
											"end": 2876,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2790,
											"end": 2884,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2790,
											"end": 2884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5730,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5743,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 5752,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 5752,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5752,
											"end": 5764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5752,
											"end": 5764,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 5752,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5766,
											"end": 5773,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 5814,
											"end": 5824,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5786,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5775,
											"end": 5800,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5787,
											"end": 5797,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5787,
											"end": 5799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5800,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5775,
											"end": 5800,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5800,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5775,
											"end": 5800,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5800,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5800,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5800,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5775,
											"end": 5800,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5800,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5800,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5800,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5800,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5775,
											"end": 5800,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5800,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5775,
											"end": 5800,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5809,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5801,
											"end": 5808,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5809,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5775,
											"end": 5809,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5809,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5775,
											"end": 5809,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5809,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5809,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5809,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5775,
											"end": 5809,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5809,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5809,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5809,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5809,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5775,
											"end": 5809,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5809,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5775,
											"end": 5809,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5809,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5813,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 5775,
											"end": 5813,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5825,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5825,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5775,
											"end": 5825,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5825,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 5775,
											"end": 5825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5743,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5743,
											"end": 5826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5743,
											"end": 5826,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 5743,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5844,
											"end": 5848,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5837,
											"end": 5848,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5837,
											"end": 5848,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7681,
											"end": 7685,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7698,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 7704,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 7704,
											"end": 7714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 7704,
											"end": 7716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7704,
											"end": 7716,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 7704,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7718,
											"end": 7724,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7698,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 7698,
											"end": 7725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7698,
											"end": 7725,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 7698,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7743,
											"end": 7747,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7736,
											"end": 7747,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7736,
											"end": 7747,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7755,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2562,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2478,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2525,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "PUSH",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2538,
											"end": 2554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2538,
											"end": 2554,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3498,
											"end": 3505,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3525,
											"end": 3534,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3542,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3518,
											"end": 3543,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3518,
											"end": 3543,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3551,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 2008,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1868,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1019,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1019,
											"end": 1031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1031,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1019,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1031,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1009,
											"end": 1031,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1031,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1009,
											"end": 1031,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1031,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1001,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 1968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1930,
											"end": 1970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1930,
											"end": 1970,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 1957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1951,
											"end": 1957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1951,
											"end": 1957,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 1957,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 1957,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 1957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1951,
											"end": 1957,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 1957,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 1957,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1951,
											"end": 1957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1951,
											"end": 1957,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1930,
											"end": 1970,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1930,
											"end": 1970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1930,
											"end": 1970,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1930,
											"end": 1970,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1970,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1970,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1970,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1970,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1970,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 1999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 1987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1981,
											"end": 1987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1981,
											"end": 2000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1981,
											"end": 2000,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2000,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2000,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2000,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1981,
											"end": 2000,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2000,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2000,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2000,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2000,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1981,
											"end": 2000,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2000,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2000,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2000,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2000,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2000,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 2008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2630,
											"end": 2723,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2630,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2689,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2709,
											"end": 2715,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2709,
											"end": 2715,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2709,
											"end": 2715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2715,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2715,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2709,
											"end": 2715,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2715,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2715,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2709,
											"end": 2715,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2715,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2630,
											"end": 2723,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2630,
											"end": 2723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 3047,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2949,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2999,
											"end": 3012,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3032,
											"end": 3039,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3025,
											"end": 3039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3025,
											"end": 3039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 3047,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 3047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6928,
											"end": 6932,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1019,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1019,
											"end": 1031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1031,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1019,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1031,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1009,
											"end": 1031,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1031,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1009,
											"end": 1031,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1031,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1001,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6953,
											"end": 6962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 6953,
											"end": 6962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 6953,
											"end": 6962,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6953,
											"end": 6962,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6953,
											"end": 6962,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6953,
											"end": 6962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6953,
											"end": 6962,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 6953,
											"end": 6962,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6953,
											"end": 6962,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 6953,
											"end": 6962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 6953,
											"end": 6962,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6945,
											"end": 6993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 6945,
											"end": 6993,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6945,
											"end": 6993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6945,
											"end": 6993,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6945,
											"end": 6993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6945,
											"end": 6993,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6945,
											"end": 6993,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6945,
											"end": 6993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6945,
											"end": 6993,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6945,
											"end": 6993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 6945,
											"end": 6993,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6945,
											"end": 6993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 6945,
											"end": 6993,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6945,
											"end": 6993,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 6945,
											"end": 6993,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6945,
											"end": 6993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6945,
											"end": 6993,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6945,
											"end": 6993,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6945,
											"end": 6993,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6945,
											"end": 6993,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6945,
											"end": 6993,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6945,
											"end": 6993,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6945,
											"end": 6993,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 6945,
											"end": 6993,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7004,
											"end": 7031,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 7010,
											"end": 7022,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 7010,
											"end": 7020,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 7010,
											"end": 7022,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7010,
											"end": 7022,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 7010,
											"end": 7022,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7024,
											"end": 7030,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7004,
											"end": 7009,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 7004,
											"end": 7031,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7004,
											"end": 7031,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 7004,
											"end": 7031,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7049,
											"end": 7053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7042,
											"end": 7053,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7042,
											"end": 7053,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 7061,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6872,
											"end": 7061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6443,
											"end": 6447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6460,
											"end": 6589,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 6469,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 6469,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 6469,
											"end": 6481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6469,
											"end": 6481,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 6469,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6490,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 6531,
											"end": 6546,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6588,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6492,
											"end": 6588,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6588,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6588,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6492,
											"end": 6588,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6588,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6492,
											"end": 6588,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6588,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6588,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6492,
											"end": 6588,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6588,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6588,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6492,
											"end": 6588,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6588,
											"name": "PUSH data",
											"source": 4,
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 6492,
											"end": 6588,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 6492,
											"end": 6588,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6588,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6503,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6492,
											"end": 6517,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6504,
											"end": 6516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 6504,
											"end": 6514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 6504,
											"end": 6516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6504,
											"end": 6516,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 6504,
											"end": 6516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6517,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6492,
											"end": 6517,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6517,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6492,
											"end": 6517,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6517,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6517,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6492,
											"end": 6517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6517,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6517,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6492,
											"end": 6517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6517,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6492,
											"end": 6517,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6526,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6518,
											"end": 6525,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6526,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6492,
											"end": 6526,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6526,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6492,
											"end": 6526,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6526,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6526,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6526,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6492,
											"end": 6526,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6526,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6526,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6526,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6526,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6492,
											"end": 6526,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6526,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6492,
											"end": 6526,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6526,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 6492,
											"end": 6530,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6588,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6588,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6588,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6588,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6492,
											"end": 6588,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6492,
											"end": 6588,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 6492,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6460,
											"end": 6468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 6460,
											"end": 6589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6460,
											"end": 6589,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 6460,
											"end": 6589,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6607,
											"end": 6611,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6600,
											"end": 6611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6600,
											"end": 6611,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3843,
											"end": 3847,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3862,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3872,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 3872,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3872,
											"end": 3884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 3884,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 3872,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 3895,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3897,
											"end": 3903,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3862,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3862,
											"end": 3904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3862,
											"end": 3904,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3862,
											"end": 3904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3924,
											"end": 3928,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3917,
											"end": 3928,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3917,
											"end": 3928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3936,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7401,
											"end": 7405,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1019,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1019,
											"end": 1031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1031,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1019,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1031,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1009,
											"end": 1031,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1031,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1009,
											"end": 1031,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1031,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1001,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7426,
											"end": 7435,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 7426,
											"end": 7435,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 7426,
											"end": 7435,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7426,
											"end": 7435,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7426,
											"end": 7435,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7426,
											"end": 7435,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7426,
											"end": 7435,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 7426,
											"end": 7435,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7426,
											"end": 7435,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 7426,
											"end": 7435,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 7426,
											"end": 7435,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7418,
											"end": 7466,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 7418,
											"end": 7466,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7418,
											"end": 7466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7418,
											"end": 7466,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7418,
											"end": 7466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7418,
											"end": 7466,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7418,
											"end": 7466,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7418,
											"end": 7466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7418,
											"end": 7466,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7418,
											"end": 7466,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 7418,
											"end": 7466,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7418,
											"end": 7466,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 7418,
											"end": 7466,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7418,
											"end": 7466,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 7418,
											"end": 7466,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7418,
											"end": 7466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7418,
											"end": 7466,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7418,
											"end": 7466,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7418,
											"end": 7466,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7418,
											"end": 7466,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7418,
											"end": 7466,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7418,
											"end": 7466,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7418,
											"end": 7466,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 7418,
											"end": 7466,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7477,
											"end": 7501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 7483,
											"end": 7492,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7494,
											"end": 7500,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7477,
											"end": 7482,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 7477,
											"end": 7501,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7477,
											"end": 7501,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 7477,
											"end": 7501,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7519,
											"end": 7523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7512,
											"end": 7523,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7512,
											"end": 7523,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7531,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4081,
											"end": 4088,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4119,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4120,
											"end": 4125,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4127,
											"end": 4134,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4101,
											"end": 4135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4101,
											"end": 4135,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2399,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2163,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 1019,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1019,
											"end": 1031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1031,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 1019,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1031,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1009,
											"end": 1031,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1031,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1009,
											"end": 1031,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1031,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1001,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1001,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2264,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2244,
											"end": 2266,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2244,
											"end": 2266,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2244,
											"end": 2252,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2244,
											"end": 2266,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2244,
											"end": 2266,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2244,
											"end": 2266,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2309,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2236,
											"end": 2309,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2309,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2236,
											"end": 2309,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2309,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2236,
											"end": 2309,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2309,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2236,
											"end": 2309,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2309,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 2236,
											"end": 2309,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2309,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2236,
											"end": 2309,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2309,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2309,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2309,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2309,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2309,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2309,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2309,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2236,
											"end": 2309,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2354,
											"end": 2362,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2325,
											"end": 2363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2325,
											"end": 2363,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2346,
											"end": 2352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2346,
											"end": 2352,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2352,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2352,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2346,
											"end": 2352,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2352,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2352,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2346,
											"end": 2352,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2325,
											"end": 2363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2325,
											"end": 2363,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2325,
											"end": 2363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2325,
											"end": 2363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2325,
											"end": 2363,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2325,
											"end": 2363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2325,
											"end": 2363,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2325,
											"end": 2363,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2325,
											"end": 2363,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2325,
											"end": 2363,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2325,
											"end": 2363,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2325,
											"end": 2363,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 2383,
											"end": 2391,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2374,
											"end": 2380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2374,
											"end": 2391,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2374,
											"end": 2391,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2391,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2391,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2391,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2391,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2374,
											"end": 2391,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2391,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2391,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2391,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2391,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2391,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2374,
											"end": 2391,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2391,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2391,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2391,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2391,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2391,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2399,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 619,
											"end": 717,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 619,
											"end": 717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 672,
											"end": 679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 709,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 692,
											"end": 709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 692,
											"end": 709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 619,
											"end": 717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 619,
											"end": 717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10425,
											"end": 10763,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 10425,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10536,
											"end": 10537,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10519,
											"end": 10538,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10519,
											"end": 10538,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10519,
											"end": 10524,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10519,
											"end": 10538,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10519,
											"end": 10538,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10519,
											"end": 10538,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10511,
											"end": 10579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 10511,
											"end": 10579,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10511,
											"end": 10579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10511,
											"end": 10579,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10511,
											"end": 10579,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10511,
											"end": 10579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10511,
											"end": 10579,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10511,
											"end": 10579,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10511,
											"end": 10579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10511,
											"end": 10579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 10511,
											"end": 10579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10511,
											"end": 10579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 10511,
											"end": 10579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10511,
											"end": 10579,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 10511,
											"end": 10579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10511,
											"end": 10579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10511,
											"end": 10579,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10511,
											"end": 10579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10511,
											"end": 10579,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10511,
											"end": 10579,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10511,
											"end": 10579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10511,
											"end": 10579,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10511,
											"end": 10579,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 10511,
											"end": 10579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10617,
											"end": 10618,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10598,
											"end": 10619,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10598,
											"end": 10619,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10598,
											"end": 10605,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10598,
											"end": 10619,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10598,
											"end": 10619,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10598,
											"end": 10619,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10590,
											"end": 10658,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 10590,
											"end": 10658,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10590,
											"end": 10658,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10590,
											"end": 10658,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10590,
											"end": 10658,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10590,
											"end": 10658,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10590,
											"end": 10658,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10590,
											"end": 10658,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10590,
											"end": 10658,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10590,
											"end": 10658,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 10590,
											"end": 10658,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10590,
											"end": 10658,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 10590,
											"end": 10658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10590,
											"end": 10658,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 10590,
											"end": 10658,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10590,
											"end": 10658,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10590,
											"end": 10658,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10590,
											"end": 10658,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10590,
											"end": 10658,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10590,
											"end": 10658,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10590,
											"end": 10658,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10590,
											"end": 10658,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10590,
											"end": 10658,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 10590,
											"end": 10658,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10701,
											"end": 10707,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10682,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10671,
											"end": 10689,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10683,
											"end": 10688,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10689,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10671,
											"end": 10689,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10689,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10671,
											"end": 10689,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10689,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10689,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10689,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10671,
											"end": 10689,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10689,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10689,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10689,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10689,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10671,
											"end": 10689,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10689,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10671,
											"end": 10689,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10698,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10690,
											"end": 10697,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10698,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10671,
											"end": 10698,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10698,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10671,
											"end": 10698,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10698,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10698,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10698,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10671,
											"end": 10698,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10698,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10698,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10698,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10698,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10671,
											"end": 10698,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10698,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10671,
											"end": 10698,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10707,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10707,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10707,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10739,
											"end": 10746,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10755,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10723,
											"end": 10755,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10732,
											"end": 10737,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10755,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10723,
											"end": 10755,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10755,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10748,
											"end": 10754,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10755,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10723,
											"end": 10755,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10755,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 10723,
											"end": 10755,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10755,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10755,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 10723,
											"end": 10755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10755,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 10723,
											"end": 10755,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10755,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10723,
											"end": 10755,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10755,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10755,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10755,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10755,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10755,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8245,
											"end": 8716,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 8245,
											"end": 8716,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8343,
											"end": 8363,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8343,
											"end": 8363,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8343,
											"end": 8349,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8343,
											"end": 8363,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8343,
											"end": 8363,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8343,
											"end": 8363,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8335,
											"end": 8405,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 8335,
											"end": 8405,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8335,
											"end": 8405,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8335,
											"end": 8405,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8335,
											"end": 8405,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8335,
											"end": 8405,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8335,
											"end": 8405,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8335,
											"end": 8405,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8335,
											"end": 8405,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8335,
											"end": 8405,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 8335,
											"end": 8405,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8335,
											"end": 8405,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 8335,
											"end": 8405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8335,
											"end": 8405,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 8335,
											"end": 8405,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8335,
											"end": 8405,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8335,
											"end": 8405,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8335,
											"end": 8405,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8335,
											"end": 8405,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8335,
											"end": 8405,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8335,
											"end": 8405,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8335,
											"end": 8405,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8335,
											"end": 8405,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 8335,
											"end": 8405,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8445,
											"end": 8446,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8424,
											"end": 8447,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8424,
											"end": 8447,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8424,
											"end": 8433,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8424,
											"end": 8447,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8424,
											"end": 8447,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8424,
											"end": 8447,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8416,
											"end": 8487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 8416,
											"end": 8487,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8416,
											"end": 8487,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8416,
											"end": 8487,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8416,
											"end": 8487,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8416,
											"end": 8487,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8416,
											"end": 8487,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8416,
											"end": 8487,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8416,
											"end": 8487,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8416,
											"end": 8487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 8416,
											"end": 8487,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8416,
											"end": 8487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 8416,
											"end": 8487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8416,
											"end": 8487,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 8416,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8416,
											"end": 8487,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8416,
											"end": 8487,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8416,
											"end": 8487,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8416,
											"end": 8487,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8416,
											"end": 8487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8416,
											"end": 8487,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8416,
											"end": 8487,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8416,
											"end": 8487,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 8416,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 8542,
											"end": 8548,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8591,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8520,
											"end": 8591,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8591,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8591,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 8520,
											"end": 8591,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8591,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8520,
											"end": 8591,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8591,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8591,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 8520,
											"end": 8591,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8591,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8591,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8520,
											"end": 8591,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8591,
											"name": "PUSH data",
											"source": 4,
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 8520,
											"end": 8591,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 8520,
											"end": 8591,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8591,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8529,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8520,
											"end": 8537,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8530,
											"end": 8536,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8537,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8520,
											"end": 8537,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8537,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8520,
											"end": 8537,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8537,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8537,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8537,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8520,
											"end": 8537,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8537,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8537,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8537,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8520,
											"end": 8537,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8537,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8520,
											"end": 8537,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8537,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 8520,
											"end": 8541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8591,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8591,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8591,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8520,
											"end": 8591,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8520,
											"end": 8591,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 8520,
											"end": 8591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8500,
											"end": 8509,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8500,
											"end": 8517,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8510,
											"end": 8516,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8500,
											"end": 8517,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8500,
											"end": 8517,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8500,
											"end": 8517,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8500,
											"end": 8517,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8500,
											"end": 8517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8500,
											"end": 8517,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8500,
											"end": 8517,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8500,
											"end": 8517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8500,
											"end": 8517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8500,
											"end": 8517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8500,
											"end": 8517,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8500,
											"end": 8517,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8500,
											"end": 8517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8500,
											"end": 8517,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8500,
											"end": 8517,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8500,
											"end": 8591,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8500,
											"end": 8591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8500,
											"end": 8591,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8500,
											"end": 8591,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8625,
											"end": 8657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 8650,
											"end": 8656,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8625,
											"end": 8634,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8625,
											"end": 8645,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8635,
											"end": 8644,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8625,
											"end": 8645,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8625,
											"end": 8645,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8625,
											"end": 8645,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8625,
											"end": 8645,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8625,
											"end": 8645,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8625,
											"end": 8645,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8625,
											"end": 8645,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8625,
											"end": 8645,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8625,
											"end": 8645,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8625,
											"end": 8645,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8625,
											"end": 8645,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8625,
											"end": 8645,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8625,
											"end": 8645,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8625,
											"end": 8645,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8625,
											"end": 8645,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8625,
											"end": 8645,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8625,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 8625,
											"end": 8649,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8625,
											"end": 8657,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8625,
											"end": 8657,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8625,
											"end": 8657,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8625,
											"end": 8657,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8625,
											"end": 8657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8625,
											"end": 8657,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 8625,
											"end": 8657,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8602,
											"end": 8611,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8602,
											"end": 8622,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8612,
											"end": 8621,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8602,
											"end": 8622,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8602,
											"end": 8622,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8602,
											"end": 8622,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8602,
											"end": 8622,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8602,
											"end": 8622,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8602,
											"end": 8622,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8602,
											"end": 8622,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8602,
											"end": 8622,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8602,
											"end": 8622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8602,
											"end": 8622,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8602,
											"end": 8622,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8602,
											"end": 8622,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8602,
											"end": 8622,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8602,
											"end": 8622,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8602,
											"end": 8622,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8602,
											"end": 8657,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8602,
											"end": 8657,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8602,
											"end": 8657,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8602,
											"end": 8657,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8690,
											"end": 8699,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8673,
											"end": 8708,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8673,
											"end": 8708,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8682,
											"end": 8688,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8673,
											"end": 8708,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8673,
											"end": 8708,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8673,
											"end": 8708,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8701,
											"end": 8707,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8673,
											"end": 8708,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8673,
											"end": 8708,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8673,
											"end": 8708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 8673,
											"end": 8708,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8673,
											"end": 8708,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8673,
											"end": 8708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 8673,
											"end": 8708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8673,
											"end": 8708,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 8673,
											"end": 8708,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8673,
											"end": 8708,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8673,
											"end": 8708,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8673,
											"end": 8708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8673,
											"end": 8708,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8673,
											"end": 8708,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8673,
											"end": 8708,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8673,
											"end": 8708,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 8245,
											"end": 8716,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8245,
											"end": 8716,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8245,
											"end": 8716,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8245,
											"end": 8716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1817,
											"end": 2009,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1817,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1903,
											"end": 1910,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1937,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1932,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1937,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1937,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1951,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1923,
											"end": 1952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1952,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1979,
											"end": 1980,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1976,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 1975,
											"end": 1980,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 1975,
											"end": 1980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1980,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 1975,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 1980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 1980,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1993,
											"end": 2001,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1993,
											"end": 2001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1993,
											"end": 2001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 2009,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 2009,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 2009,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 2009,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 2009,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 2009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 914,
											"end": 1095,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 914,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 972,
											"end": 979,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 992,
											"end": 1001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1008,
											"end": 1009,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1005,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 1004,
											"end": 1009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 992,
											"end": 1009,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 992,
											"end": 1009,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1029,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1034,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1034,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 1020,
											"end": 1066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1086,
											"end": 1087,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1087,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 914,
											"end": 1095,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 914,
											"end": 1095,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 914,
											"end": 1095,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 914,
											"end": 1095,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 914,
											"end": 1095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9637,
											"end": 9985,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 9637,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9732,
											"end": 9733,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9713,
											"end": 9734,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9713,
											"end": 9734,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9713,
											"end": 9720,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9713,
											"end": 9734,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9713,
											"end": 9734,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9713,
											"end": 9734,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9705,
											"end": 9772,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 9705,
											"end": 9772,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9705,
											"end": 9772,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9705,
											"end": 9772,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9705,
											"end": 9772,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9705,
											"end": 9772,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9705,
											"end": 9772,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9705,
											"end": 9772,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9705,
											"end": 9772,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9705,
											"end": 9772,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 9705,
											"end": 9772,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9705,
											"end": 9772,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 9705,
											"end": 9772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9705,
											"end": 9772,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 9705,
											"end": 9772,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9705,
											"end": 9772,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9705,
											"end": 9772,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9705,
											"end": 9772,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9705,
											"end": 9772,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9705,
											"end": 9772,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9705,
											"end": 9772,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9705,
											"end": 9772,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9705,
											"end": 9772,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 9705,
											"end": 9772,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 9829,
											"end": 9835,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "PUSH data",
											"source": 4,
											"value": "DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032"
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9815,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9806,
											"end": 9824,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9816,
											"end": 9823,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9824,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9806,
											"end": 9824,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9824,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9806,
											"end": 9824,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9824,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9824,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9824,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9806,
											"end": 9824,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9824,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9824,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9824,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9824,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9806,
											"end": 9824,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9824,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9806,
											"end": 9824,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9824,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9828,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 9806,
											"end": 9828,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9785,
											"end": 9794,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9785,
											"end": 9803,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9795,
											"end": 9802,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9785,
											"end": 9803,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9785,
											"end": 9803,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9785,
											"end": 9803,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9785,
											"end": 9803,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9785,
											"end": 9803,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9785,
											"end": 9803,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9785,
											"end": 9803,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9785,
											"end": 9803,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9785,
											"end": 9803,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9785,
											"end": 9803,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9785,
											"end": 9803,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9785,
											"end": 9803,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9785,
											"end": 9803,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9785,
											"end": 9803,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9785,
											"end": 9803,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9785,
											"end": 9874,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9785,
											"end": 9874,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9785,
											"end": 9874,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9785,
											"end": 9874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9900,
											"end": 9924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 9917,
											"end": 9923,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9900,
											"end": 9912,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9900,
											"end": 9912,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9900,
											"end": 9916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 9900,
											"end": 9916,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9900,
											"end": 9924,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9900,
											"end": 9924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9900,
											"end": 9924,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9900,
											"end": 9924,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9900,
											"end": 9924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9900,
											"end": 9924,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 9900,
											"end": 9924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9885,
											"end": 9897,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9885,
											"end": 9924,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9885,
											"end": 9924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9885,
											"end": 9924,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9885,
											"end": 9924,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9966,
											"end": 9967,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9940,
											"end": 9977,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9940,
											"end": 9977,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 9956,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9940,
											"end": 9977,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9940,
											"end": 9977,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9940,
											"end": 9977,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9970,
											"end": 9976,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9940,
											"end": 9977,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9940,
											"end": 9977,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9940,
											"end": 9977,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 9940,
											"end": 9977,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9940,
											"end": 9977,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9940,
											"end": 9977,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 9940,
											"end": 9977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9940,
											"end": 9977,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 9940,
											"end": 9977,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9940,
											"end": 9977,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9940,
											"end": 9977,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9940,
											"end": 9977,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9940,
											"end": 9977,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9940,
											"end": 9977,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9940,
											"end": 9977,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9940,
											"end": 9977,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 9637,
											"end": 9985,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9637,
											"end": 9985,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9637,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8997,
											"end": 9305,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 8997,
											"end": 9305,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9092,
											"end": 9093,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9073,
											"end": 9094,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9073,
											"end": 9094,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9073,
											"end": 9080,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9073,
											"end": 9094,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9073,
											"end": 9094,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9073,
											"end": 9094,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9065,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 9065,
											"end": 9130,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9065,
											"end": 9130,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9065,
											"end": 9130,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9065,
											"end": 9130,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9065,
											"end": 9130,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9065,
											"end": 9130,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9065,
											"end": 9130,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9065,
											"end": 9130,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9065,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 9065,
											"end": 9130,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9065,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 9065,
											"end": 9130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9065,
											"end": 9130,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 9065,
											"end": 9130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9065,
											"end": 9130,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9065,
											"end": 9130,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9065,
											"end": 9130,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9065,
											"end": 9130,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9065,
											"end": 9130,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9065,
											"end": 9130,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9065,
											"end": 9130,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9065,
											"end": 9130,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 9065,
											"end": 9130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9158,
											"end": 9182,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 9175,
											"end": 9181,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9158,
											"end": 9170,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9158,
											"end": 9170,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9158,
											"end": 9174,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 9158,
											"end": 9174,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9158,
											"end": 9182,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9158,
											"end": 9182,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9158,
											"end": 9182,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9158,
											"end": 9182,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9158,
											"end": 9182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9158,
											"end": 9182,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 9158,
											"end": 9182,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9143,
											"end": 9155,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9143,
											"end": 9182,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9143,
											"end": 9182,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9143,
											"end": 9182,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9143,
											"end": 9182,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9214,
											"end": 9244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 9237,
											"end": 9243,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9214,
											"end": 9223,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9214,
											"end": 9232,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9214,
											"end": 9232,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9214,
											"end": 9232,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9214,
											"end": 9232,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9214,
											"end": 9232,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9214,
											"end": 9232,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9214,
											"end": 9232,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9214,
											"end": 9232,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9214,
											"end": 9232,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9214,
											"end": 9232,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9214,
											"end": 9232,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9214,
											"end": 9232,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9214,
											"end": 9232,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9214,
											"end": 9232,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9214,
											"end": 9232,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9214,
											"end": 9232,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9214,
											"end": 9232,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9214,
											"end": 9236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 9214,
											"end": 9236,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9214,
											"end": 9244,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9214,
											"end": 9244,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9214,
											"end": 9244,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9214,
											"end": 9244,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9214,
											"end": 9244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9214,
											"end": 9244,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 9214,
											"end": 9244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9193,
											"end": 9202,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9193,
											"end": 9211,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9203,
											"end": 9210,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9193,
											"end": 9211,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9193,
											"end": 9211,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9193,
											"end": 9211,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9193,
											"end": 9211,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9193,
											"end": 9211,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9193,
											"end": 9211,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9193,
											"end": 9211,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9193,
											"end": 9211,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9193,
											"end": 9211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9193,
											"end": 9211,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9193,
											"end": 9211,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9193,
											"end": 9211,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9193,
											"end": 9211,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9193,
											"end": 9211,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9193,
											"end": 9211,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9193,
											"end": 9244,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9193,
											"end": 9244,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9193,
											"end": 9244,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9193,
											"end": 9244,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9281,
											"end": 9288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9260,
											"end": 9297,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9260,
											"end": 9297,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9277,
											"end": 9278,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9260,
											"end": 9297,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9260,
											"end": 9297,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9260,
											"end": 9297,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9290,
											"end": 9296,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9260,
											"end": 9297,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9260,
											"end": 9297,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9260,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 9260,
											"end": 9297,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9260,
											"end": 9297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9260,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 9260,
											"end": 9297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9260,
											"end": 9297,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 9260,
											"end": 9297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9260,
											"end": 9297,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9260,
											"end": 9297,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9260,
											"end": 9297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9260,
											"end": 9297,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9260,
											"end": 9297,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9260,
											"end": 9297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9260,
											"end": 9297,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 8997,
											"end": 9305,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8997,
											"end": 9305,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8997,
											"end": 9305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1378,
											"end": 1514,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 1378,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1443,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 1467,
											"end": 1468,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1470,
											"end": 1471,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1463,
											"end": 1506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 1463,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1456,
											"end": 1506,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1456,
											"end": 1506,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1514,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1514,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1514,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1514,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5296,
											"end": 5298,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5275,
											"end": 5282,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5271,
											"end": 5294,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5267,
											"end": 5299,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 5302,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 5423,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 5492,
											"end": 5499,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5483,
											"end": 5489,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5472,
											"end": 5481,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5468,
											"end": 5490,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 5447,
											"end": 5500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5510,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5188,
											"end": 5517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 5628,
											"end": 5633,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 5610,
											"end": 5634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5605,
											"end": 5608,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5598,
											"end": 5635,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5523,
											"end": 5641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5740,
											"end": 5744,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5780,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5767,
											"end": 5776,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5763,
											"end": 5781,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5781,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5755,
											"end": 5781,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 5859,
											"end": 5860,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5848,
											"end": 5857,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5844,
											"end": 5861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5835,
											"end": 5841,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 5791,
											"end": 5862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5647,
											"end": 5869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5943,
											"end": 5949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 5957,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6000,
											"end": 6002,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5988,
											"end": 5997,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5979,
											"end": 5986,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5975,
											"end": 5998,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5971,
											"end": 6003,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 6006,
											"end": 6085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6126,
											"end": 6127,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 6196,
											"end": 6203,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6187,
											"end": 6193,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6176,
											"end": 6185,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6172,
											"end": 6194,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 6151,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6141,
											"end": 6204,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6141,
											"end": 6204,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6214,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6253,
											"end": 6255,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 6324,
											"end": 6331,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6313,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6300,
											"end": 6322,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 6279,
											"end": 6332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6269,
											"end": 6332,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6269,
											"end": 6332,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6224,
											"end": 6342,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 6349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6829,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 6355,
											"end": 6829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6423,
											"end": 6429,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6431,
											"end": 6437,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6480,
											"end": 6482,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6468,
											"end": 6477,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6466,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6455,
											"end": 6478,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6451,
											"end": 6483,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6448,
											"end": 6567,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6448,
											"end": 6567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 6448,
											"end": 6567,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6486,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 6486,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 6486,
											"end": 6565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6486,
											"end": 6565,
											"name": "tag",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 6486,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6448,
											"end": 6567,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 6448,
											"end": 6567,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6606,
											"end": 6607,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6631,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 6676,
											"end": 6683,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6667,
											"end": 6673,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6665,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6652,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6631,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 6631,
											"end": 6684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6631,
											"end": 6684,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 6631,
											"end": 6684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6621,
											"end": 6684,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6621,
											"end": 6684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6577,
											"end": 6694,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6733,
											"end": 6735,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6759,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 6804,
											"end": 6811,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6795,
											"end": 6801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6784,
											"end": 6793,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6780,
											"end": 6802,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6759,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 6759,
											"end": 6812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6759,
											"end": 6812,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 6759,
											"end": 6812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6749,
											"end": 6812,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6749,
											"end": 6812,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6704,
											"end": 6822,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6829,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6829,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6829,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6829,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6829,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6835,
											"end": 7015,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 6835,
											"end": 7015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6883,
											"end": 6960,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6880,
											"end": 6881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6961,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6980,
											"end": 6984,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 6977,
											"end": 6978,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6970,
											"end": 6985,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7004,
											"end": 7008,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7001,
											"end": 7002,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6994,
											"end": 7009,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7341,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7021,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7065,
											"end": 7071,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7102,
											"end": 7103,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7096,
											"end": 7100,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7092,
											"end": 7104,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7082,
											"end": 7104,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7149,
											"end": 7150,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7143,
											"end": 7147,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7151,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7170,
											"end": 7188,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7160,
											"end": 7241,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 7160,
											"end": 7241,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7226,
											"end": 7230,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 7218,
											"end": 7224,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7214,
											"end": 7231,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7231,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7160,
											"end": 7241,
											"name": "tag",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 7160,
											"end": 7241,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7288,
											"end": 7290,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7280,
											"end": 7286,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7277,
											"end": 7291,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7257,
											"end": 7275,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7254,
											"end": 7292,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7251,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 7251,
											"end": 7335,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7307,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 7307,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 7307,
											"end": 7325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7307,
											"end": 7325,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 7307,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7251,
											"end": 7335,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 7251,
											"end": 7335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7072,
											"end": 7341,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7341,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7341,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7341,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7347,
											"end": 7529,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 7347,
											"end": 7529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7487,
											"end": 7521,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7483,
											"end": 7484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7481,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7471,
											"end": 7485,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7464,
											"end": 7522,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7347,
											"end": 7529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7347,
											"end": 7529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7535,
											"end": 7901,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 7535,
											"end": 7901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7677,
											"end": 7680,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7698,
											"end": 7765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 7762,
											"end": 7764,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7757,
											"end": 7760,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7698,
											"end": 7765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 7698,
											"end": 7765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7698,
											"end": 7765,
											"name": "tag",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 7698,
											"end": 7765,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7691,
											"end": 7765,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7691,
											"end": 7765,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7774,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 7863,
											"end": 7866,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7774,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 7774,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7774,
											"end": 7867,
											"name": "tag",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 7774,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7892,
											"end": 7894,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7887,
											"end": 7890,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7883,
											"end": 7895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 7895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 7895,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7535,
											"end": 7901,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7535,
											"end": 7901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7535,
											"end": 7901,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7535,
											"end": 7901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 8326,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 7907,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8073,
											"end": 8077,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8111,
											"end": 8113,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8100,
											"end": 8109,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8096,
											"end": 8114,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8114,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8114,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8160,
											"end": 8169,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8154,
											"end": 8158,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8150,
											"end": 8170,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8146,
											"end": 8147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8135,
											"end": 8144,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8131,
											"end": 8148,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8124,
											"end": 8171,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8188,
											"end": 8319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 8314,
											"end": 8318,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8188,
											"end": 8319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 8188,
											"end": 8319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8188,
											"end": 8319,
											"name": "tag",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 8188,
											"end": 8319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8180,
											"end": 8319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8180,
											"end": 8319,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 8326,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 8326,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 8326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7907,
											"end": 8326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8332,
											"end": 8508,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 8332,
											"end": 8508,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8472,
											"end": 8500,
											"name": "PUSH",
											"source": 6,
											"value": "7468697320746F6B656E206973206E6F74206D696E7461626C65000000000000"
										},
										{
											"begin": 8468,
											"end": 8469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8460,
											"end": 8466,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8456,
											"end": 8470,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8449,
											"end": 8501,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8332,
											"end": 8508,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8332,
											"end": 8508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 8880,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 8514,
											"end": 8880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8677,
											"end": 8744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 8741,
											"end": 8743,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 8736,
											"end": 8739,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8677,
											"end": 8744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 8677,
											"end": 8744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8677,
											"end": 8744,
											"name": "tag",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 8677,
											"end": 8744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8670,
											"end": 8744,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8670,
											"end": 8744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8753,
											"end": 8846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 8842,
											"end": 8845,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8753,
											"end": 8846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 8753,
											"end": 8846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8753,
											"end": 8846,
											"name": "tag",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 8753,
											"end": 8846,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8871,
											"end": 8873,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8866,
											"end": 8869,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8862,
											"end": 8874,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8855,
											"end": 8874,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8855,
											"end": 8874,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 8880,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 8880,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 8880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8514,
											"end": 8880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8886,
											"end": 9305,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 8886,
											"end": 9305,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9052,
											"end": 9056,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9090,
											"end": 9092,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9079,
											"end": 9088,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9075,
											"end": 9093,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9067,
											"end": 9093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9067,
											"end": 9093,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9139,
											"end": 9148,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9133,
											"end": 9137,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9129,
											"end": 9149,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9125,
											"end": 9126,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9114,
											"end": 9123,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9110,
											"end": 9127,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9103,
											"end": 9150,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9167,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 9293,
											"end": 9297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9167,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 9167,
											"end": 9298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9167,
											"end": 9298,
											"name": "tag",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 9167,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9159,
											"end": 9298,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9159,
											"end": 9298,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8886,
											"end": 9305,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8886,
											"end": 9305,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8886,
											"end": 9305,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8886,
											"end": 9305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9311,
											"end": 9536,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 9311,
											"end": 9536,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9451,
											"end": 9485,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 9447,
											"end": 9448,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9439,
											"end": 9445,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9435,
											"end": 9449,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9428,
											"end": 9486,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9520,
											"end": 9528,
											"name": "PUSH",
											"source": 6,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9515,
											"end": 9517,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9507,
											"end": 9513,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9503,
											"end": 9518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9496,
											"end": 9529,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9311,
											"end": 9536,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9311,
											"end": 9536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9542,
											"end": 9908,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 9542,
											"end": 9908,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9684,
											"end": 9687,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9705,
											"end": 9772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 9769,
											"end": 9771,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 9764,
											"end": 9767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9705,
											"end": 9772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 9705,
											"end": 9772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9705,
											"end": 9772,
											"name": "tag",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 9705,
											"end": 9772,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9698,
											"end": 9772,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9698,
											"end": 9772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9781,
											"end": 9874,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 9870,
											"end": 9873,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9781,
											"end": 9874,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 9781,
											"end": 9874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9781,
											"end": 9874,
											"name": "tag",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 9781,
											"end": 9874,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9899,
											"end": 9901,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9894,
											"end": 9897,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9890,
											"end": 9902,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9883,
											"end": 9902,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9883,
											"end": 9902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9542,
											"end": 9908,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9542,
											"end": 9908,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9542,
											"end": 9908,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9542,
											"end": 9908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9914,
											"end": 10333,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 9914,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10080,
											"end": 10084,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10118,
											"end": 10120,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10107,
											"end": 10116,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10103,
											"end": 10121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10095,
											"end": 10121,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10095,
											"end": 10121,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10167,
											"end": 10176,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10161,
											"end": 10165,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10157,
											"end": 10177,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10154,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10142,
											"end": 10151,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10138,
											"end": 10155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10131,
											"end": 10178,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10195,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 10321,
											"end": 10325,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10195,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 10195,
											"end": 10326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10195,
											"end": 10326,
											"name": "tag",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 10195,
											"end": 10326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10187,
											"end": 10326,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10187,
											"end": 10326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9914,
											"end": 10333,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9914,
											"end": 10333,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9914,
											"end": 10333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9914,
											"end": 10333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10339,
											"end": 10562,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 10339,
											"end": 10562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10479,
											"end": 10513,
											"name": "PUSH",
											"source": 6,
											"value": "42455032303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 10475,
											"end": 10476,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10467,
											"end": 10473,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10463,
											"end": 10477,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10456,
											"end": 10514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10548,
											"end": 10554,
											"name": "PUSH",
											"source": 6,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10543,
											"end": 10545,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10535,
											"end": 10541,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10531,
											"end": 10546,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10524,
											"end": 10555,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10339,
											"end": 10562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10339,
											"end": 10562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10568,
											"end": 10934,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 10568,
											"end": 10934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10710,
											"end": 10713,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10731,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 10795,
											"end": 10797,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 10790,
											"end": 10793,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10731,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 10731,
											"end": 10798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10731,
											"end": 10798,
											"name": "tag",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 10731,
											"end": 10798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10724,
											"end": 10798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10724,
											"end": 10798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10807,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 10896,
											"end": 10899,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10807,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 10807,
											"end": 10900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10807,
											"end": 10900,
											"name": "tag",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 10807,
											"end": 10900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10925,
											"end": 10927,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10920,
											"end": 10923,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10916,
											"end": 10928,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10909,
											"end": 10928,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10909,
											"end": 10928,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10568,
											"end": 10934,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10568,
											"end": 10934,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10568,
											"end": 10934,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10568,
											"end": 10934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10940,
											"end": 11359,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 10940,
											"end": 11359,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11106,
											"end": 11110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11144,
											"end": 11146,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11133,
											"end": 11142,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11129,
											"end": 11147,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11121,
											"end": 11147,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11121,
											"end": 11147,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11193,
											"end": 11202,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11187,
											"end": 11191,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11183,
											"end": 11203,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11179,
											"end": 11180,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11168,
											"end": 11177,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11164,
											"end": 11181,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11157,
											"end": 11204,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11221,
											"end": 11352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 11347,
											"end": 11351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11221,
											"end": 11352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 11221,
											"end": 11352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11221,
											"end": 11352,
											"name": "tag",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 11221,
											"end": 11352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11213,
											"end": 11352,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11213,
											"end": 11352,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10940,
											"end": 11359,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10940,
											"end": 11359,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10940,
											"end": 11359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10940,
											"end": 11359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11365,
											"end": 11586,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 11365,
											"end": 11586,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11505,
											"end": 11539,
											"name": "PUSH",
											"source": 6,
											"value": "42455032303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 11501,
											"end": 11502,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11493,
											"end": 11499,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11489,
											"end": 11503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11482,
											"end": 11540,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11574,
											"end": 11578,
											"name": "PUSH",
											"source": 6,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11569,
											"end": 11571,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11561,
											"end": 11567,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11557,
											"end": 11572,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11550,
											"end": 11579,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11365,
											"end": 11586,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11365,
											"end": 11586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11592,
											"end": 11958,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 11592,
											"end": 11958,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11734,
											"end": 11737,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11755,
											"end": 11822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 11819,
											"end": 11821,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 11814,
											"end": 11817,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11755,
											"end": 11822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 11755,
											"end": 11822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11755,
											"end": 11822,
											"name": "tag",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 11755,
											"end": 11822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11748,
											"end": 11822,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11748,
											"end": 11822,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11831,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 11920,
											"end": 11923,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11831,
											"end": 11924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 11831,
											"end": 11924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11831,
											"end": 11924,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 11831,
											"end": 11924,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11949,
											"end": 11951,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11944,
											"end": 11947,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11940,
											"end": 11952,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11933,
											"end": 11952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11933,
											"end": 11952,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11592,
											"end": 11958,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11592,
											"end": 11958,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11592,
											"end": 11958,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11592,
											"end": 11958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11964,
											"end": 12383,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 11964,
											"end": 12383,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12130,
											"end": 12134,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12168,
											"end": 12170,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12157,
											"end": 12166,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12153,
											"end": 12171,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12145,
											"end": 12171,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12145,
											"end": 12171,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12217,
											"end": 12226,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12211,
											"end": 12215,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12207,
											"end": 12227,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12203,
											"end": 12204,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12192,
											"end": 12201,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12188,
											"end": 12205,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12181,
											"end": 12228,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12245,
											"end": 12376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 12371,
											"end": 12375,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12245,
											"end": 12376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 12245,
											"end": 12376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12245,
											"end": 12376,
											"name": "tag",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 12245,
											"end": 12376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12237,
											"end": 12376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12237,
											"end": 12376,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11964,
											"end": 12383,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11964,
											"end": 12383,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11964,
											"end": 12383,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11964,
											"end": 12383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12389,
											"end": 12613,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 12389,
											"end": 12613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12529,
											"end": 12563,
											"name": "PUSH",
											"source": 6,
											"value": "42455032303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 12525,
											"end": 12526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12517,
											"end": 12523,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12513,
											"end": 12527,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12506,
											"end": 12564,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12598,
											"end": 12605,
											"name": "PUSH",
											"source": 6,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12593,
											"end": 12595,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12585,
											"end": 12591,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12581,
											"end": 12596,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12574,
											"end": 12606,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12389,
											"end": 12613,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12389,
											"end": 12613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12619,
											"end": 12985,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 12619,
											"end": 12985,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12761,
											"end": 12764,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12782,
											"end": 12849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 12846,
											"end": 12848,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 12841,
											"end": 12844,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12782,
											"end": 12849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 12782,
											"end": 12849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12782,
											"end": 12849,
											"name": "tag",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 12782,
											"end": 12849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12775,
											"end": 12849,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12775,
											"end": 12849,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12858,
											"end": 12951,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 12947,
											"end": 12950,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12858,
											"end": 12951,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 12858,
											"end": 12951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12858,
											"end": 12951,
											"name": "tag",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 12858,
											"end": 12951,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12976,
											"end": 12978,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12971,
											"end": 12974,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12967,
											"end": 12979,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12960,
											"end": 12979,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12960,
											"end": 12979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12619,
											"end": 12985,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12619,
											"end": 12985,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12619,
											"end": 12985,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12619,
											"end": 12985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12991,
											"end": 13410,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 12991,
											"end": 13410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13157,
											"end": 13161,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13195,
											"end": 13197,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13184,
											"end": 13193,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13180,
											"end": 13198,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13172,
											"end": 13198,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13172,
											"end": 13198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13244,
											"end": 13253,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13238,
											"end": 13242,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13234,
											"end": 13254,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13230,
											"end": 13231,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13219,
											"end": 13228,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13215,
											"end": 13232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13208,
											"end": 13255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13272,
											"end": 13403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 13398,
											"end": 13402,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13272,
											"end": 13403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 13272,
											"end": 13403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13272,
											"end": 13403,
											"name": "tag",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 13272,
											"end": 13403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13264,
											"end": 13403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13264,
											"end": 13403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12991,
											"end": 13410,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12991,
											"end": 13410,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12991,
											"end": 13410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12991,
											"end": 13410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13416,
											"end": 13638,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 13416,
											"end": 13638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13556,
											"end": 13590,
											"name": "PUSH",
											"source": 6,
											"value": "42455032303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 13552,
											"end": 13553,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13544,
											"end": 13550,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13540,
											"end": 13554,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13533,
											"end": 13591,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13625,
											"end": 13630,
											"name": "PUSH",
											"source": 6,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13620,
											"end": 13622,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13612,
											"end": 13618,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13608,
											"end": 13623,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13601,
											"end": 13631,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13416,
											"end": 13638,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13416,
											"end": 13638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13644,
											"end": 14010,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 13644,
											"end": 14010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13786,
											"end": 13789,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13807,
											"end": 13874,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 13871,
											"end": 13873,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 13866,
											"end": 13869,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13807,
											"end": 13874,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 13807,
											"end": 13874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13807,
											"end": 13874,
											"name": "tag",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 13807,
											"end": 13874,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13800,
											"end": 13874,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13800,
											"end": 13874,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13883,
											"end": 13976,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 13972,
											"end": 13975,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13883,
											"end": 13976,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 13883,
											"end": 13976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13883,
											"end": 13976,
											"name": "tag",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 13883,
											"end": 13976,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14001,
											"end": 14003,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13996,
											"end": 13999,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13992,
											"end": 14004,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13985,
											"end": 14004,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13985,
											"end": 14004,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13644,
											"end": 14010,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13644,
											"end": 14010,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13644,
											"end": 14010,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13644,
											"end": 14010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14016,
											"end": 14435,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 14016,
											"end": 14435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14182,
											"end": 14186,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14220,
											"end": 14222,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14209,
											"end": 14218,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14223,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14197,
											"end": 14223,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14197,
											"end": 14223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14269,
											"end": 14278,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14263,
											"end": 14267,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14259,
											"end": 14279,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 14255,
											"end": 14256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14244,
											"end": 14253,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14240,
											"end": 14257,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14233,
											"end": 14280,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14297,
											"end": 14428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 14423,
											"end": 14427,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14297,
											"end": 14428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 14297,
											"end": 14428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14297,
											"end": 14428,
											"name": "tag",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 14297,
											"end": 14428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14289,
											"end": 14428,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14289,
											"end": 14428,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14016,
											"end": 14435,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14016,
											"end": 14435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14016,
											"end": 14435,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14016,
											"end": 14435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14441,
											"end": 14621,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 14441,
											"end": 14621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14489,
											"end": 14566,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14486,
											"end": 14487,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14479,
											"end": 14567,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14586,
											"end": 14590,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 14583,
											"end": 14584,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 14576,
											"end": 14591,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14610,
											"end": 14614,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 14607,
											"end": 14608,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14600,
											"end": 14615,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 14627,
											"end": 14821,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 14627,
											"end": 14821,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14667,
											"end": 14671,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14687,
											"end": 14707,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 14705,
											"end": 14706,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14687,
											"end": 14707,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 14687,
											"end": 14707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14687,
											"end": 14707,
											"name": "tag",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 14687,
											"end": 14707,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14682,
											"end": 14707,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14682,
											"end": 14707,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14721,
											"end": 14741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 14739,
											"end": 14740,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14721,
											"end": 14741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 14721,
											"end": 14741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14721,
											"end": 14741,
											"name": "tag",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 14721,
											"end": 14741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14716,
											"end": 14741,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14716,
											"end": 14741,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14765,
											"end": 14766,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14762,
											"end": 14763,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14758,
											"end": 14767,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 14750,
											"end": 14767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14750,
											"end": 14767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14789,
											"end": 14790,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14783,
											"end": 14787,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14780,
											"end": 14791,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 14777,
											"end": 14814,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14777,
											"end": 14814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "401"
										},
										{
											"begin": 14777,
											"end": 14814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14794,
											"end": 14812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 14794,
											"end": 14812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 14794,
											"end": 14812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14794,
											"end": 14812,
											"name": "tag",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 14794,
											"end": 14812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14777,
											"end": 14814,
											"name": "tag",
											"source": 6,
											"value": "401"
										},
										{
											"begin": 14777,
											"end": 14814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14627,
											"end": 14821,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14627,
											"end": 14821,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14627,
											"end": 14821,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14627,
											"end": 14821,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14627,
											"end": 14821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14827,
											"end": 15018,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 14827,
											"end": 15018,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14867,
											"end": 14870,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14886,
											"end": 14906,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 14904,
											"end": 14905,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14886,
											"end": 14906,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 14886,
											"end": 14906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14886,
											"end": 14906,
											"name": "tag",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 14886,
											"end": 14906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14881,
											"end": 14906,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14881,
											"end": 14906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14920,
											"end": 14940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 14938,
											"end": 14939,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14920,
											"end": 14940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 14920,
											"end": 14940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14920,
											"end": 14940,
											"name": "tag",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 14920,
											"end": 14940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14915,
											"end": 14940,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14915,
											"end": 14940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14963,
											"end": 14964,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14960,
											"end": 14961,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14956,
											"end": 14965,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14949,
											"end": 14965,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14949,
											"end": 14965,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14984,
											"end": 14987,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14981,
											"end": 14982,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14978,
											"end": 14988,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 14975,
											"end": 15011,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14975,
											"end": 15011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 14975,
											"end": 15011,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14991,
											"end": 15009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 14991,
											"end": 15009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 14991,
											"end": 15009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14991,
											"end": 15009,
											"name": "tag",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 14991,
											"end": 15009,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14975,
											"end": 15011,
											"name": "tag",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 14975,
											"end": 15011,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14827,
											"end": 15018,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14827,
											"end": 15018,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14827,
											"end": 15018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14827,
											"end": 15018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14827,
											"end": 15018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15024,
											"end": 15201,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 15024,
											"end": 15201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15164,
											"end": 15193,
											"name": "PUSH",
											"source": 6,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 15160,
											"end": 15161,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15152,
											"end": 15158,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15148,
											"end": 15162,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15141,
											"end": 15194,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15024,
											"end": 15201,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15024,
											"end": 15201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15207,
											"end": 15573,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 15207,
											"end": 15573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15349,
											"end": 15352,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15370,
											"end": 15437,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 15434,
											"end": 15436,
											"name": "PUSH",
											"source": 6,
											"value": "1B"
										},
										{
											"begin": 15429,
											"end": 15432,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15370,
											"end": 15437,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 15370,
											"end": 15437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15370,
											"end": 15437,
											"name": "tag",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 15370,
											"end": 15437,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15363,
											"end": 15437,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15363,
											"end": 15437,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15446,
											"end": 15539,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 15535,
											"end": 15538,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15446,
											"end": 15539,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 15446,
											"end": 15539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15446,
											"end": 15539,
											"name": "tag",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 15446,
											"end": 15539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15564,
											"end": 15566,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15559,
											"end": 15562,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15555,
											"end": 15567,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15548,
											"end": 15567,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15548,
											"end": 15567,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15207,
											"end": 15573,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15207,
											"end": 15573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15207,
											"end": 15573,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15207,
											"end": 15573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15579,
											"end": 15998,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 15579,
											"end": 15998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15745,
											"end": 15749,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15783,
											"end": 15785,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15772,
											"end": 15781,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15768,
											"end": 15786,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15760,
											"end": 15786,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15760,
											"end": 15786,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15832,
											"end": 15841,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15826,
											"end": 15830,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15822,
											"end": 15842,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 15818,
											"end": 15819,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15807,
											"end": 15816,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15803,
											"end": 15820,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15796,
											"end": 15843,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15860,
											"end": 15991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 15986,
											"end": 15990,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15860,
											"end": 15991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 15860,
											"end": 15991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15860,
											"end": 15991,
											"name": "tag",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 15860,
											"end": 15991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15852,
											"end": 15991,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15852,
											"end": 15991,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15579,
											"end": 15998,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15579,
											"end": 15998,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15579,
											"end": 15998,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15579,
											"end": 15998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16004,
											"end": 16224,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 16004,
											"end": 16224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16144,
											"end": 16178,
											"name": "PUSH",
											"source": 6,
											"value": "42455032303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 16140,
											"end": 16141,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16132,
											"end": 16138,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16128,
											"end": 16142,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16121,
											"end": 16179,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16213,
											"end": 16216,
											"name": "PUSH",
											"source": 6,
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16208,
											"end": 16210,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16200,
											"end": 16206,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16196,
											"end": 16211,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16189,
											"end": 16217,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16004,
											"end": 16224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16004,
											"end": 16224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16230,
											"end": 16596,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 16230,
											"end": 16596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16372,
											"end": 16375,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16393,
											"end": 16460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 16457,
											"end": 16459,
											"name": "PUSH",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 16452,
											"end": 16455,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16393,
											"end": 16460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 16393,
											"end": 16460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16393,
											"end": 16460,
											"name": "tag",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 16393,
											"end": 16460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16386,
											"end": 16460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16386,
											"end": 16460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16469,
											"end": 16562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 16558,
											"end": 16561,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16469,
											"end": 16562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 16469,
											"end": 16562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16469,
											"end": 16562,
											"name": "tag",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 16469,
											"end": 16562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16587,
											"end": 16589,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 16582,
											"end": 16585,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16578,
											"end": 16590,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16571,
											"end": 16590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16571,
											"end": 16590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16230,
											"end": 16596,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16230,
											"end": 16596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16230,
											"end": 16596,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16230,
											"end": 16596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16602,
											"end": 17021,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 16602,
											"end": 17021,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16768,
											"end": 16772,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16806,
											"end": 16808,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16795,
											"end": 16804,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16791,
											"end": 16809,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16783,
											"end": 16809,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16783,
											"end": 16809,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16855,
											"end": 16864,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16849,
											"end": 16853,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16845,
											"end": 16865,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 16841,
											"end": 16842,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16830,
											"end": 16839,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16826,
											"end": 16843,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16819,
											"end": 16866,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16883,
											"end": 17014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 17009,
											"end": 17013,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16883,
											"end": 17014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 16883,
											"end": 17014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16883,
											"end": 17014,
											"name": "tag",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 16883,
											"end": 17014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16875,
											"end": 17014,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16875,
											"end": 17014,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16602,
											"end": 17021,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16602,
											"end": 17021,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16602,
											"end": 17021,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16602,
											"end": 17021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17027,
											"end": 17208,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 17027,
											"end": 17208,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17167,
											"end": 17200,
											"name": "PUSH",
											"source": 6,
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 17163,
											"end": 17164,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17155,
											"end": 17161,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17151,
											"end": 17165,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17144,
											"end": 17201,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17027,
											"end": 17208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17027,
											"end": 17208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17214,
											"end": 17580,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 17214,
											"end": 17580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17356,
											"end": 17359,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17377,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 17441,
											"end": 17443,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 17436,
											"end": 17439,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17377,
											"end": 17444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 17377,
											"end": 17444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17377,
											"end": 17444,
											"name": "tag",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 17377,
											"end": 17444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17370,
											"end": 17444,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17370,
											"end": 17444,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17453,
											"end": 17546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 17542,
											"end": 17545,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17453,
											"end": 17546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 17453,
											"end": 17546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17453,
											"end": 17546,
											"name": "tag",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 17453,
											"end": 17546,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17571,
											"end": 17573,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17566,
											"end": 17569,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17562,
											"end": 17574,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17555,
											"end": 17574,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17555,
											"end": 17574,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17214,
											"end": 17580,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17214,
											"end": 17580,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17214,
											"end": 17580,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17214,
											"end": 17580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17586,
											"end": 18005,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 17586,
											"end": 18005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17752,
											"end": 17756,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17790,
											"end": 17792,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17779,
											"end": 17788,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17775,
											"end": 17793,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17767,
											"end": 17793,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17767,
											"end": 17793,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17839,
											"end": 17848,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17833,
											"end": 17837,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17829,
											"end": 17849,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 17825,
											"end": 17826,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17814,
											"end": 17823,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17810,
											"end": 17827,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17803,
											"end": 17850,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17867,
											"end": 17998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 17993,
											"end": 17997,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17867,
											"end": 17998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 17867,
											"end": 17998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17867,
											"end": 17998,
											"name": "tag",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 17867,
											"end": 17998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17859,
											"end": 17998,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17859,
											"end": 17998,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17586,
											"end": 18005,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17586,
											"end": 18005,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17586,
											"end": 18005,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17586,
											"end": 18005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									],
									".data": {
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"DEAA84B30175FD0578812C46240362B7914652A35E6707AD7E1556891E4AE032": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365"
									}
								}
							},
							"sourceList": [
								"MGAS/Context.sol",
								"MGAS/IBEP20.sol",
								"MGAS/ISwap.sol",
								"MGAS/Initializable.sol",
								"MGAS/MGAS.sol",
								"MGAS/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"mintTo(uint256,address)": "b723b34e",
							"mintable()": "4bf365df",
							"name()": "06fdde03",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"mintTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burn `amount` tokens and decreasing the total supply.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner - `_mintable` must be true\"},\"mintTo(uint256,address)\":{\"details\":\"Creates `amount` tokens and assigns them to `recipient`, increasing the total supply. Requirements - `msg.sender` must be the token owner - `_mintable` must be true\"},\"mintable()\":{\"details\":\"Returns if the token is mintable or not\"},\"name()\":{\"details\":\"Returns the token name.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MGAS/MGAS.sol\":\"MGAS\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"MGAS/Context.sol\":{\"keccak256\":\"0x3110a86c43c9717226d50d1eb7ca1d114bdef57a6d2badeb07a63a434aa1743a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ec11ed416004616703423f3331bfa1d05010366754d9f782ade294f672848a74\",\"dweb:/ipfs/QmT72NQ4EUjtwsKXno5mymH7JFtfJugH1pmdPzxStARNGP\"]},\"MGAS/IBEP20.sol\":{\"keccak256\":\"0x935c73cf79b8e56fa41ac0578a8203b0f5d7081783c513666e9a41c34704cbbe\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dc4a0b2c2e6efcb04f7ef1ce084494609dc704f34dc6ea68b7d7c505d6e186d7\",\"dweb:/ipfs/QmbU76Q2D3WWAngexDja62Y5RkmXULsRhU9uiF2jrz6EZo\"]},\"MGAS/ISwap.sol\":{\"keccak256\":\"0x6db62b458b233970b0e5aa5f00191595628084e794d1e8ac43292b4f088876ce\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://82293cdd6c6d5a2e61f6b1b0849aa90e3c4f7f00cce909d679e0dadf18d05069\",\"dweb:/ipfs/QmfPSHUrbxJd2SsFCMwnBmmpfefi3niuvqr8x6NqdCxXkP\"]},\"MGAS/Initializable.sol\":{\"keccak256\":\"0xd569f2bd435d41a4d17b12e05c5de9920971489137a383abe1499a5c38bf3658\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://348c23a3a0f94698965bb37bd5a6e9d32f3bffd9827d2eb2b9207fefe731fb07\",\"dweb:/ipfs/QmSE7edvrJiCCnsNnPJNAU4K8RuAcj9EkHgRmP6MwEvokV\"]},\"MGAS/MGAS.sol\":{\"keccak256\":\"0xc58884a799000b9ae748842943032b79de70430afaccda33efb51f3bc0aa18f1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2d862dd5ffe63029fadf2468cfd45e911df3a650d3a1c3e7cf624540d5629895\",\"dweb:/ipfs/QmehrxNuTFQ293SkR1DKofT8jFy7ABbhPjUm9mM3pNdFtX\"]},\"MGAS/SafeMath.sol\":{\"keccak256\":\"0xa240d5fa80ad5e676ac8bc497ce293fd1ab6fc312adc03e9fbf24382134e2b21\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://53c99ed61a6943da5ded686541a4540b4311313411cd4ce32e332e392cf07483\",\"dweb:/ipfs/QmT64dPSEzFjGrZq3wzuiAsd1evgpuPxZBkzKho44gTaLU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 150,
								"contract": "MGAS/MGAS.sol:MGAS",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 153,
								"contract": "MGAS/MGAS.sol:MGAS",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 237,
								"contract": "MGAS/MGAS.sol:MGAS",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 243,
								"contract": "MGAS/MGAS.sol:MGAS",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 246,
								"contract": "MGAS/MGAS.sol:MGAS",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 249,
								"contract": "MGAS/MGAS.sol:MGAS",
								"label": "_name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 252,
								"contract": "MGAS/MGAS.sol:MGAS",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 255,
								"contract": "MGAS/MGAS.sol:MGAS",
								"label": "_decimals",
								"offset": 0,
								"slot": "6",
								"type": "t_uint8"
							},
							{
								"astId": 257,
								"contract": "MGAS/MGAS.sol:MGAS",
								"label": "_owner",
								"offset": 1,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 265,
								"contract": "MGAS/MGAS.sol:MGAS",
								"label": "_mintable",
								"offset": 21,
								"slot": "6",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MGAS/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MGAS/SafeMath.sol\":651:5370  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"MGAS/SafeMath.sol\":651:5370  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207bce95e0fb69711d4c51b9e9e3a04610ea4b8b2ea916934dbee4f887f97359c564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207bce95e0fb69711d4c51b9e9e3a04610ea4b8b2ea916934dbee4f887f97359c564736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xCE95E0FB69711D4C51B9E9E3A04610EA4B8B2EA916934DBEE4F887F9 PUSH20 0x59C564736F6C6343000812003300000000000000 ",
							"sourceMap": "651:4719:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207bce95e0fb69711d4c51b9e9e3a04610ea4b8b2ea916934dbee4f887f97359c564736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xCE95E0FB69711D4C51B9E9E3A04610EA4B8B2EA916934DBEE4F887F9 PUSH20 0x59C564736F6C6343000812003300000000000000 ",
							"sourceMap": "651:4719:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 651,
									"end": 5370,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 651,
									"end": 5370,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207bce95e0fb69711d4c51b9e9e3a04610ea4b8b2ea916934dbee4f887f97359c564736f6c63430008120033",
									".code": [
										{
											"begin": 651,
											"end": 5370,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 651,
											"end": 5370,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 651,
											"end": 5370,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 651,
											"end": 5370,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 651,
											"end": 5370,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 5370,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 651,
											"end": 5370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 651,
											"end": 5370,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 651,
											"end": 5370,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"MGAS/Context.sol",
								"MGAS/IBEP20.sol",
								"MGAS/ISwap.sol",
								"MGAS/Initializable.sol",
								"MGAS/MGAS.sol",
								"MGAS/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MGAS/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"MGAS/SafeMath.sol\":{\"keccak256\":\"0xa240d5fa80ad5e676ac8bc497ce293fd1ab6fc312adc03e9fbf24382134e2b21\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://53c99ed61a6943da5ded686541a4540b4311313411cd4ce32e332e392cf07483\",\"dweb:/ipfs/QmT64dPSEzFjGrZq3wzuiAsd1evgpuPxZBkzKho44gTaLU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"MGAS/Context.sol": {
				"ast": {
					"absolutePath": "MGAS/Context.sol",
					"exportedSymbols": {
						"Context": [
							22
						]
					},
					"id": 23,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:31:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "Context",
							"nameLocation": "604:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "681:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "699:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "703:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "699:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "692:17:0"
											}
										]
									},
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "628:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "638:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "672:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "671:9:0"
									},
									"scope": 22,
									"src": "619:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "790:168:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "801:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$22",
														"typeString": "contract Context"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "801:4:0"
											},
											{
												"expression": {
													"expression": {
														"id": 17,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "942:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "946:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "942:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 19,
												"nodeType": "Return",
												"src": "935:15:0"
											}
										]
									},
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "734:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "742:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "776:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "776:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "775:14:0"
									},
									"scope": 22,
									"src": "725:233:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 23,
							"src": "586:375:0",
							"usedErrors": []
						}
					],
					"src": "39:922:0"
				},
				"id": 0
			},
			"MGAS/IBEP20.sol": {
				"ast": {
					"absolutePath": "MGAS/IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							123
						]
					},
					"id": 124,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 24,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBEP20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 123,
							"linearizedBaseContracts": [
								123
							],
							"name": "IBEP20",
							"nameLocation": "84:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "98:68:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 30,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "181:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "192:2:1"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "218:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "218:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "217:9:1"
									},
									"scope": 123,
									"src": "172:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "235:53:1",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "303:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "311:2:1"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "337:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 33,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "337:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:7:1"
									},
									"scope": 123,
									"src": "294:50:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "352:51:1",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "418:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:1"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "450:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 39,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "450:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:15:1"
									},
									"scope": 123,
									"src": "409:56:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "473:47:1",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "535:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "539:2:1"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "565:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 45,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:15:1"
									},
									"scope": 123,
									"src": "526:54:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "588:54:1",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "657:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "665:2:1"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "691:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "690:9:1"
									},
									"scope": 123,
									"src": "648:52:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "708:74:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 62,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "797:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "815:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "807:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "807:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "806:17:1"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "847:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "846:9:1"
									},
									"scope": 123,
									"src": "788:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "864:215:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 72,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1094:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1111:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1103:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1130:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1122:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1122:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1102:35:1"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1156:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1156:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1155:6:1"
									},
									"scope": 123,
									"src": "1085:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "1170:270:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 82,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1455:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1473:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "1465:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1489:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "1481:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1481:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1464:33:1"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "1521:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1521:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1520:9:1"
									},
									"scope": 123,
									"src": "1446:84:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "1538:655:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 92,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2208:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2224:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "2216:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2216:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "2233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2215:33:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "2267:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 89,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2267:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2266:6:1"
									},
									"scope": 123,
									"src": "2199:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "2281:304:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2600:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2621:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2613:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2613:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2637:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2629:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2629:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2656:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2648:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2648:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:51:1"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2682:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 101,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2682:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2681:6:1"
									},
									"scope": 123,
									"src": "2591:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "2696:163:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 113,
									"name": "Transfer",
									"nameLocation": "2871:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2896:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "2880:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2918:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "2902:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2902:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2930:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "2922:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2922:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2879:57:1"
									},
									"src": "2865:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "2945:151:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 122,
									"name": "Approval",
									"nameLocation": "3108:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3133:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "3117:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3117:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3156:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "3140:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3140:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3173:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "3165:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3116:63:1"
									},
									"src": "3102:78:1"
								}
							],
							"scope": 124,
							"src": "74:3109:1",
							"usedErrors": []
						}
					],
					"src": "37:3148:1"
				},
				"id": 1
			},
			"MGAS/ISwap.sol": {
				"ast": {
					"absolutePath": "MGAS/ISwap.sol",
					"exportedSymbols": {
						"ISwap": [
							144
						]
					},
					"id": 145,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 125,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISwap",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 144,
							"linearizedBaseContracts": [
								144
							],
							"name": "ISwap",
							"nameLocation": "84:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "97:238:2",
										"text": " @dev Creates `amount` tokens and assigns them to `recipient`, increasing\n the total supply.\n Requirements\n - `msg.sender` must be the token owner\n - `_mintable` must be true"
									},
									"functionSelector": "b723b34e",
									"id": 135,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mintTo",
									"nameLocation": "350:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "365:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "357:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "381:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "373:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:35:2"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "410:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 132,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "410:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:6:2"
									},
									"scope": 144,
									"src": "341:75:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "424:77:2",
										"text": " @dev Burn `amount` tokens and decreasing the total supply."
									},
									"functionSelector": "42966c68",
									"id": 143,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "516:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "529:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "521:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "521:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "520:16:2"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "555:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 140,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:6:2"
									},
									"scope": 144,
									"src": "507:54:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 145,
							"src": "74:490:2",
							"usedErrors": []
						}
					],
					"src": "37:527:2"
				},
				"id": 2
			},
			"MGAS/Initializable.sol": {
				"ast": {
					"absolutePath": "MGAS/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							215
						]
					},
					"id": 216,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 146,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "72:951:3",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n \n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.\n \n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity."
							},
							"fullyImplemented": true,
							"id": 215,
							"linearizedBaseContracts": [
								215
							],
							"name": "Initializable",
							"nameLocation": "1043:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "1066:75:3",
										"text": " @dev Indicates that the contract has been initialized."
									},
									"id": 150,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "1160:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 215,
									"src": "1147:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 149,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1147:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "1181:93:3",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 153,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "1293:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 215,
									"src": "1280:26:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 152,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1280:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "1439:382:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 157,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 153,
																	"src": "1458:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 158,
																		"name": "_isConstructor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 214,
																		"src": "1475:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																			"typeString": "function () view returns (bool)"
																		}
																	},
																	"id": 159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1475:16:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1458:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"id": 162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "1495:13:3",
																"subExpression": {
																	"id": 161,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "1496:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1458:50:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1510:48:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1450:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1450:109:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 166,
												"nodeType": "ExpressionStatement",
												"src": "1450:109:3"
											},
											{
												"assignments": [
													168
												],
												"declarations": [
													{
														"constant": false,
														"id": 168,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "1577:14:3",
														"nodeType": "VariableDeclaration",
														"scope": 191,
														"src": "1572:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 167,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1572:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 171,
												"initialValue": {
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1594:14:3",
													"subExpression": {
														"id": 169,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "1595:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1572:36:3"
											},
											{
												"condition": {
													"id": 172,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 168,
													"src": "1623:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "1619:101:3",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "1639:81:3",
													"statements": [
														{
															"expression": {
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 173,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 153,
																	"src": "1654:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1670:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1654:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 176,
															"nodeType": "ExpressionStatement",
															"src": "1654:20:3"
														},
														{
															"expression": {
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 177,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "1689:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1704:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1689:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 180,
															"nodeType": "ExpressionStatement",
															"src": "1689:19:3"
														}
													]
												}
											},
											{
												"id": 183,
												"nodeType": "PlaceholderStatement",
												"src": "1732:1:3"
											},
											{
												"condition": {
													"id": 184,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 168,
													"src": "1750:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 190,
												"nodeType": "IfStatement",
												"src": "1746:68:3",
												"trueBody": {
													"id": 189,
													"nodeType": "Block",
													"src": "1766:48:3",
													"statements": [
														{
															"expression": {
																"id": 187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 185,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 153,
																	"src": "1781:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1797:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "1781:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 188,
															"nodeType": "ExpressionStatement",
															"src": "1781:21:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "1315:95:3",
										"text": " @dev Modifier to protect an initializer function from being invoked twice."
									},
									"id": 192,
									"name": "initializer",
									"nameLocation": "1425:11:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1436:2:3"
									},
									"src": "1416:405:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "1968:550:3",
										"statements": [
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "self",
														"nameLocation": "2341:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 213,
														"src": "2333:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 198,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2333:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 204,
												"initialValue": {
													"arguments": [
														{
															"id": 202,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "2356:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Initializable_$215",
																"typeString": "contract Initializable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_Initializable_$215",
																"typeString": "contract Initializable"
															}
														],
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2348:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 200,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2348:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2348:13:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2333:28:3"
											},
											{
												"assignments": [
													206
												],
												"declarations": [
													{
														"constant": false,
														"id": 206,
														"mutability": "mutable",
														"name": "cs",
														"nameLocation": "2380:2:3",
														"nodeType": "VariableDeclaration",
														"scope": 213,
														"src": "2372:10:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 205,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2372:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 207,
												"nodeType": "VariableDeclarationStatement",
												"src": "2372:10:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2459:27:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2461:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "self",
																		"nodeType": "YulIdentifier",
																		"src": "2479:4:3"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "2467:11:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2467:17:3"
															},
															"variableNames": [
																{
																	"name": "cs",
																	"nodeType": "YulIdentifier",
																	"src": "2461:2:3"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 206,
														"isOffset": false,
														"isSlot": false,
														"src": "2461:2:3",
														"valueSize": 1
													},
													{
														"declaration": 199,
														"isOffset": false,
														"isSlot": false,
														"src": "2479:4:3",
														"valueSize": 1
													}
												],
												"id": 208,
												"nodeType": "InlineAssembly",
												"src": "2450:36:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 209,
														"name": "cs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "2503:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2509:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2503:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 197,
												"id": 212,
												"nodeType": "Return",
												"src": "2496:14:3"
											}
										]
									},
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1829:79:3",
										"text": "@dev Returns true if and only if the function is running in the constructor"
									},
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isConstructor",
									"nameLocation": "1923:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1937:2:3"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1962:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 195,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1962:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1961:6:3"
									},
									"scope": 215,
									"src": "1914:604:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 216,
							"src": "1025:1496:3",
							"usedErrors": []
						}
					],
					"src": "37:2486:3"
				},
				"id": 3
			},
			"MGAS/MGAS.sol": {
				"ast": {
					"absolutePath": "MGAS/MGAS.sol",
					"exportedSymbols": {
						"Context": [
							22
						],
						"IBEP20": [
							123
						],
						"ISwap": [
							144
						],
						"Initializable": [
							215
						],
						"MGAS": [
							869
						],
						"SafeMath": [
							1065
						]
					},
					"id": 870,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 217,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:4"
						},
						{
							"absolutePath": "MGAS/Context.sol",
							"file": "MGAS/Context.sol",
							"id": 218,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 870,
							"sourceUnit": 23,
							"src": "70:26:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "MGAS/IBEP20.sol",
							"file": "MGAS/IBEP20.sol",
							"id": 219,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 870,
							"sourceUnit": 124,
							"src": "98:25:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "MGAS/ISwap.sol",
							"file": "MGAS/ISwap.sol",
							"id": 220,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 870,
							"sourceUnit": 145,
							"src": "125:24:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "MGAS/Initializable.sol",
							"file": "MGAS/Initializable.sol",
							"id": 221,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 870,
							"sourceUnit": 216,
							"src": "151:32:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "MGAS/SafeMath.sol",
							"file": "MGAS/SafeMath.sol",
							"id": 222,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 870,
							"sourceUnit": 1066,
							"src": "185:27:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 223,
										"name": "Context",
										"nameLocations": [
											"233:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 22,
										"src": "233:7:4"
									},
									"id": 224,
									"nodeType": "InheritanceSpecifier",
									"src": "233:7:4"
								},
								{
									"baseName": {
										"id": 225,
										"name": "IBEP20",
										"nameLocations": [
											"242:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 123,
										"src": "242:6:4"
									},
									"id": 226,
									"nodeType": "InheritanceSpecifier",
									"src": "242:6:4"
								},
								{
									"baseName": {
										"id": 227,
										"name": "ISwap",
										"nameLocations": [
											"250:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 144,
										"src": "250:5:4"
									},
									"id": 228,
									"nodeType": "InheritanceSpecifier",
									"src": "250:5:4"
								},
								{
									"baseName": {
										"id": 229,
										"name": "Initializable",
										"nameLocations": [
											"257:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 215,
										"src": "257:13:4"
									},
									"id": 230,
									"nodeType": "InheritanceSpecifier",
									"src": "257:13:4"
								}
							],
							"canonicalName": "MGAS",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 869,
							"linearizedBaseContracts": [
								869,
								215,
								144,
								123,
								22
							],
							"name": "MGAS",
							"nameLocation": "225:4:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 233,
									"libraryName": {
										"id": 231,
										"name": "SafeMath",
										"nameLocations": [
											"284:8:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1065,
										"src": "284:8:4"
									},
									"nodeType": "UsingForDirective",
									"src": "278:27:4",
									"typeName": {
										"id": 232,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "297:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 237,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "350:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 869,
									"src": "313:46:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 236,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 234,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "322:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "313:28:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 235,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "333:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 243,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "424:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 869,
									"src": "366:69:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 242,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 238,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "375:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "366:49:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 241,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 239,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "395:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "386:28:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 240,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "406:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 246,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "458:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 869,
									"src": "442:58:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "442:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030303030303030303030303030303030303030303030303030",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "473:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000000000"
										},
										"value": "100000000000000000000000000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 249,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "522:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 869,
									"src": "507:29:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 247,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "507:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4d474153",
										"id": 248,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "530:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_37db44a9f53a31b2d9191a31f77d82ccc939bab068697bfc6345c20056a3d93e",
											"typeString": "literal_string \"MGAS\""
										},
										"value": "MGAS"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 252,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "558:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 869,
									"src": "543:31:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 250,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "543:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4d474153",
										"id": 251,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "568:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_37db44a9f53a31b2d9191a31f77d82ccc939bab068697bfc6345c20056a3d93e",
											"typeString": "literal_string \"MGAS\""
										},
										"value": "MGAS"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 255,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "595:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 869,
									"src": "581:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 253,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "581:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 254,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "607:2:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 257,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "640:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 869,
									"src": "624:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 256,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "624:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 263,
									"name": "OwnershipTransferred",
									"nameLocation": "659:20:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "696:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "680:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "727:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "711:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "711:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "679:57:4"
									},
									"src": "653:84:4"
								},
								{
									"constant": false,
									"id": 265,
									"mutability": "mutable",
									"name": "_mintable",
									"nameLocation": "758:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 869,
									"src": "745:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 264,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "745:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "791:85:4",
										"statements": [
											{
												"expression": {
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 268,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "802:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 271,
														"indexExpression": {
															"expression": {
																"id": 269,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "812:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "816:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "812:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "802:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 272,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "826:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "802:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 274,
												"nodeType": "ExpressionStatement",
												"src": "802:36:4"
											},
											{
												"expression": {
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 275,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "849:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 276,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "858:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "862:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "858:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "849:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "849:19:4"
											}
										]
									},
									"id": 281,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "787:2:4"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "791:0:4"
									},
									"scope": 869,
									"src": "776:100:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "990:98:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 285,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "1009:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 286,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "1019:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1019:12:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1009:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1033:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 284,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1001:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1001:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "1001:67:4"
											},
											{
												"id": 292,
												"nodeType": "PlaceholderStatement",
												"src": "1079:1:4"
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "884:79:4",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 294,
									"name": "onlyOwner",
									"nameLocation": "978:9:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:2:4"
									},
									"src": "969:119:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "1914:94:4",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 301,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "1951:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1967:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1959:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 302,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1959:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1959:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 300,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "1930:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1930:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "EmitStatement",
												"src": "1925:45:4"
											},
											{
												"expression": {
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 308,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "1981:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1998:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1990:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 309,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1990:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 312,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1990:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1981:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 314,
												"nodeType": "ExpressionStatement",
												"src": "1981:19:4"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "1531:331:4",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 298,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 297,
												"name": "onlyOwner",
												"nameLocations": [
													"1904:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 294,
												"src": "1904:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1904:9:4"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1877:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:2:4"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1914:0:4"
									},
									"scope": 869,
									"src": "1868:140:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "2225:174:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 325,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "2244:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2264:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2256:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 326,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2256:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 329,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2256:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2244:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2268:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 324,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2236:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2236:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "2236:73:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 335,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "2346:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 336,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "2354:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 334,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "2325:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2325:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "EmitStatement",
												"src": "2320:43:4"
											},
											{
												"expression": {
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 339,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "2374:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 340,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "2383:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2374:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 342,
												"nodeType": "ExpressionStatement",
												"src": "2374:17:4"
											}
										]
									},
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "2016:141:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 322,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 321,
												"name": "onlyOwner",
												"nameLocations": [
													"2215:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 294,
												"src": "2215:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2215:9:4"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2172:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2198:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "2190:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2190:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:18:4"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:0:4"
									},
									"scope": 869,
									"src": "2163:236:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "2527:35:4",
										"statements": [
											{
												"expression": {
													"id": 350,
													"name": "_mintable",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 265,
													"src": "2545:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 349,
												"id": 351,
												"nodeType": "Return",
												"src": "2538:16:4"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "2407:65:4",
										"text": " @dev Returns if the token is mintable or not"
									},
									"functionSelector": "4bf365df",
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintable",
									"nameLocation": "2487:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2495:2:4"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2521:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 347,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2521:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2520:6:4"
									},
									"scope": 869,
									"src": "2478:84:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2691:32:4",
										"statements": [
											{
												"expression": {
													"id": 360,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 257,
													"src": "2709:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2702:13:4"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2570:54:4",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "2639:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 356,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2659:8:4"
									},
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2647:2:4"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2682:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2681:9:4"
									},
									"scope": 869,
									"src": "2630:93:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										36
									],
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "2849:35:4",
										"statements": [
											{
												"expression": {
													"id": 370,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 255,
													"src": "2867:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 369,
												"id": 371,
												"nodeType": "Return",
												"src": "2860:16:4"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2731:53:4",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2799:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 366,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2819:8:4"
									},
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2807:2:4"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "2842:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 367,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2842:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2841:7:4"
									},
									"scope": 869,
									"src": "2790:94:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										42
									],
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "3014:33:4",
										"statements": [
											{
												"expression": {
													"id": 380,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 252,
													"src": "3032:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 379,
												"id": 381,
												"nodeType": "Return",
												"src": "3025:14:4"
											}
										]
									},
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "2892:51:4",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2958:6:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 376,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2976:8:4"
									},
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2964:2:4"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2999:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 377,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2999:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2998:15:4"
									},
									"scope": 869,
									"src": "2949:98:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										48
									],
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "3171:31:4",
										"statements": [
											{
												"expression": {
													"id": 390,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 249,
													"src": "3189:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 389,
												"id": 391,
												"nodeType": "Return",
												"src": "3182:12:4"
											}
										]
									},
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "3055:47:4",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3117:4:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 386,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3133:8:4"
									},
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3121:2:4"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "3156:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 387,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3156:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3155:15:4"
									},
									"scope": 869,
									"src": "3108:94:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										30
									],
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "3330:38:4",
										"statements": [
											{
												"expression": {
													"id": 400,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 246,
													"src": "3348:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 399,
												"id": 401,
												"nodeType": "Return",
												"src": "3341:19:4"
											}
										]
									},
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "3210:50:4",
										"text": " @dev See {BEP20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3275:11:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 396,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3298:8:4"
									},
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3286:2:4"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3321:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3321:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3320:9:4"
									},
									"scope": 869,
									"src": "3266:102:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										62
									],
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "3507:44:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 412,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "3525:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 414,
													"indexExpression": {
														"id": 413,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "3535:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3525:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 411,
												"id": 415,
												"nodeType": "Return",
												"src": "3518:25:4"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "3376:48:4",
										"text": " @dev See {BEP20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3439:9:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 408,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3475:8:4"
									},
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3457:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "3449:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3449:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3448:17:4"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "3498:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3498:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3497:9:4"
									},
									"scope": 869,
									"src": "3430:121:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										72
									],
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "3849:87:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 429,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "3872:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3872:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 431,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "3886:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 432,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "3897:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 428,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "3862:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:42:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "3862:42:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3924:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 427,
												"id": 436,
												"nodeType": "Return",
												"src": "3917:11:4"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "3559:198:4",
										"text": " @dev See {BEP20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3772:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 424,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3825:8:4"
									},
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3789:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3781:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3781:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3808:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3800:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3800:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3780:35:4"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3843:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3843:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3842:6:4"
									},
									"scope": 869,
									"src": "3763:173:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										82
									],
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "4090:53:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 449,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "4108:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 451,
														"indexExpression": {
															"id": 450,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "4120:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4108:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 453,
													"indexExpression": {
														"id": 452,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "4127:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4108:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 448,
												"id": 454,
												"nodeType": "Return",
												"src": "4101:34:4"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "3944:48:4",
										"text": " @dev See {BEP20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4007:9:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 445,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4058:8:4"
									},
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4025:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "4017:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4040:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "4032:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4016:32:4"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "4081:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4081:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4080:9:4"
									},
									"scope": 869,
									"src": "3998:145:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										92
									],
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "4372:80:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 468,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "4392:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4392:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "4406:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 471,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "4415:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "4383:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4383:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "4383:39:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4440:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 466,
												"id": 475,
												"nodeType": "Return",
												"src": "4433:11:4"
											}
										]
									},
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "4151:132:4",
										"text": " @dev See {BEP20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4298:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 463,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4348:8:4"
									},
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4314:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "4306:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4306:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4331:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "4323:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4323:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4305:33:4"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "4366:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 464,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:4"
									},
									"scope": 869,
									"src": "4289:163:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										104
									],
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "5029:209:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 491,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "5050:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 492,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "5058:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 493,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "5069:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 490,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "5040:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5040:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "5040:36:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 497,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "5096:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 498,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "5104:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 507,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "5156:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5164:42:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 500,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 243,
																			"src": "5118:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 502,
																		"indexExpression": {
																			"id": 501,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 480,
																			"src": "5130:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5118:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 505,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 503,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "5138:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5138:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5118:33:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5152:3:4",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 943,
																"src": "5118:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:89:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 496,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "5087:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5087:121:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "5087:121:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5226:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 489,
												"id": 513,
												"nodeType": "Return",
												"src": "5219:11:4"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "4460:457:4",
										"text": " @dev See {BEP20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {BEP20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for `sender`'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4932:12:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 486,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5005:8:4"
									},
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4953:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4945:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4945:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4969:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4961:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4961:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4988:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4980:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4980:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4944:51:4"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "5023:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 487,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5023:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5022:6:4"
									},
									"scope": 869,
									"src": "4923:315:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "5732:124:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 526,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "5752:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5752:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 528,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "5766:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 536,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 520,
																	"src": "5814:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 529,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 243,
																			"src": "5775:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 532,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 530,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 10,
																				"src": "5787:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5787:12:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5775:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 534,
																	"indexExpression": {
																		"id": 533,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 518,
																		"src": "5801:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5775:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5810:3:4",
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 898,
																"src": "5775:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5775:50:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 525,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "5743:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5743:83:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "5743:83:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5844:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 524,
												"id": 541,
												"nodeType": "Return",
												"src": "5837:11:4"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "5246:394:4",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5655:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5681:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "5673:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5673:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5698:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "5690:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5690:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:37:4"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "5726:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 522,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5726:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5725:6:4"
									},
									"scope": 869,
									"src": "5646:210:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "6449:170:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 554,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "6469:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6469:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 556,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "6483:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 564,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "6531:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6548:39:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 557,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 243,
																			"src": "6492:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 560,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 558,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 10,
																				"src": "6504:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 559,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6504:12:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6492:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 562,
																	"indexExpression": {
																		"id": 561,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "6518:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6492:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6527:3:4",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 943,
																"src": "6492:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6492:96:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 553,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "6460:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6460:129:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "6460:129:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6607:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 552,
												"id": 570,
												"nodeType": "Return",
												"src": "6600:11:4"
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "5864:488:4",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6367:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6393:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "6385:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6385:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6410:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "6402:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6402:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6384:42:4"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "6443:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6443:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6442:6:4"
									},
									"scope": 869,
									"src": "6358:261:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "6934:127:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 583,
															"name": "_mintable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "6953:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7468697320746f6b656e206973206e6f74206d696e7461626c65",
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6964:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386",
																"typeString": "literal_string \"this token is not mintable\""
															},
															"value": "this token is not mintable"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386",
																"typeString": "literal_string \"this token is not mintable\""
															}
														],
														"id": 582,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6945:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6945:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "6945:48:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 588,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "7010:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7010:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "7024:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "7004:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7004:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "7004:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7049:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 581,
												"id": 594,
												"nodeType": "Return",
												"src": "7042:11:4"
											}
										]
									},
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "6627:239:4",
										"text": " @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n the total supply.\n Requirements\n - `msg.sender` must be the token owner\n - `_mintable` must be true"
									},
									"functionSelector": "a0712d68",
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 578,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 577,
												"name": "onlyOwner",
												"nameLocations": [
													"6909:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 294,
												"src": "6909:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "6909:9:4"
										}
									],
									"name": "mint",
									"nameLocation": "6881:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6894:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "6886:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6886:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6885:16:4"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "6928:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 579,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6928:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6927:6:4"
									},
									"scope": 869,
									"src": "6872:189:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										135
									],
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "7407:124:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 610,
															"name": "_mintable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "7426:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7468697320746f6b656e206973206e6f74206d696e7461626c65",
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7437:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386",
																"typeString": "literal_string \"this token is not mintable\""
															},
															"value": "this token is not mintable"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_106a82429fa5aa381649b27c353cfbe8ade7440a22cd69cf611622b795309386",
																"typeString": "literal_string \"this token is not mintable\""
															}
														],
														"id": 609,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7418:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7418:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "7418:48:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 615,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "7483:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "7494:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 614,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "7477:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7477:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "7477:24:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7519:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 608,
												"id": 620,
												"nodeType": "Return",
												"src": "7512:11:4"
											}
										]
									},
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "7069:238:4",
										"text": " @dev Creates `amount` tokens and assigns them to `recipient`, increasing\n the total supply.\n Requirements\n - `msg.sender` must be the token owner\n - `_mintable` must be true"
									},
									"functionSelector": "b723b34e",
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 605,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 604,
												"name": "onlyOwner",
												"nameLocations": [
													"7382:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 294,
												"src": "7382:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "7382:9:4"
										}
									],
									"name": "mintTo",
									"nameLocation": "7322:6:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 603,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7364:8:4"
									},
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7337:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "7329:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7329:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7353:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "7345:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7345:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7328:35:4"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "7401:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 606,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7401:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7400:6:4"
									},
									"scope": 869,
									"src": "7313:218:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										143
									],
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "7687:68:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 632,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "7704:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7704:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "7718:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "7698:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7698:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "7698:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7743:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 630,
												"id": 638,
												"nodeType": "Return",
												"src": "7736:11:4"
											}
										]
									},
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "7541:77:4",
										"text": " @dev Burn `amount` tokens and decreasing the total supply."
									},
									"functionSelector": "42966c68",
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "7633:4:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 627,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7654:8:4"
									},
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7646:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "7638:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7638:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7637:16:4"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "7681:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 628,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7681:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7680:6:4"
									},
									"scope": 869,
									"src": "7624:131:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "8324:392:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 651,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 643,
																"src": "8343:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8361:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8353:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 652,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8353:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8353:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8343:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8365:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 650,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8335:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8335:70:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "8335:70:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 661,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "8424:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8445:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8437:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 662,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8437:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8437:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8424:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8449:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 660,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8416:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8416:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "8416:71:4"
											},
											{
												"expression": {
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 670,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "8500:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 672,
														"indexExpression": {
															"id": 671,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "8510:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8500:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 677,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "8542:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8550:40:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 673,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 237,
																	"src": "8520:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 675,
																"indexExpression": {
																	"id": 674,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 643,
																	"src": "8530:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8520:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8538:3:4",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 943,
															"src": "8520:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8520:71:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8500:91:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "8500:91:4"
											},
											{
												"expression": {
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 682,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "8602:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 684,
														"indexExpression": {
															"id": 683,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "8612:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8602:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 689,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "8650:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 685,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 237,
																	"src": "8625:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 687,
																"indexExpression": {
																	"id": 686,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "8635:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8625:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8646:3:4",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 898,
															"src": "8625:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8625:32:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8602:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "8602:55:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 694,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "8682:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 695,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "8690:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 696,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "8701:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 693,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "8673:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8673:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 698,
												"nodeType": "EmitStatement",
												"src": "8668:40:4"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "7763:476:4",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "8254:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "8272:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "8264:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8264:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "8288:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "8280:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8280:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8307:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "8299:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8299:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8263:51:4"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8324:0:4"
									},
									"scope": 869,
									"src": "8245:471:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "9054:251:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 709,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 703,
																"src": "9073:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9092:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9084:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 710,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9084:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9084:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9073:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9096:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 708,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9065:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9065:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 717,
												"nodeType": "ExpressionStatement",
												"src": "9065:65:4"
											},
											{
												"expression": {
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 718,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "9143:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 721,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 705,
																"src": "9175:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 719,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "9158:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9171:3:4",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 898,
															"src": "9158:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9158:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9143:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "9143:39:4"
											},
											{
												"expression": {
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 725,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "9193:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 727,
														"indexExpression": {
															"id": 726,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "9203:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9193:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 732,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 705,
																"src": "9237:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 728,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 237,
																	"src": "9214:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 730,
																"indexExpression": {
																	"id": 729,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "9224:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9214:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9233:3:4",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 898,
															"src": "9214:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9214:30:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9193:51:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "9193:51:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9277:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9269:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 737,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9269:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9269:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 741,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "9281:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 742,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "9290:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 736,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "9260:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9260:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 744,
												"nodeType": "EmitStatement",
												"src": "9255:42:4"
											}
										]
									},
									"documentation": {
										"id": 701,
										"nodeType": "StructuredDocumentation",
										"src": "8724:267:4",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
									},
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9006:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9020:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "9012:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9012:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9037:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "9029:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9029:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9011:33:4"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9054:0:4"
									},
									"scope": 869,
									"src": "8997:308:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "9694:291:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 755,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "9713:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9732:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9724:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 756,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9724:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9724:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9713:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9736:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 754,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9705:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9705:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "9705:67:4"
											},
											{
												"expression": {
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 764,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "9785:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 766,
														"indexExpression": {
															"id": 765,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "9795:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9785:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 771,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 751,
																"src": "9829:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9837:36:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 767,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 237,
																	"src": "9806:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 769,
																"indexExpression": {
																	"id": 768,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "9816:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9806:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9825:3:4",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 943,
															"src": "9806:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9806:68:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9785:89:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 775,
												"nodeType": "ExpressionStatement",
												"src": "9785:89:4"
											},
											{
												"expression": {
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 776,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "9885:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 779,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 751,
																"src": "9917:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 777,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "9900:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9913:3:4",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 915,
															"src": "9900:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 780,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9900:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9885:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 782,
												"nodeType": "ExpressionStatement",
												"src": "9885:39:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 784,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "9949:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9966:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9958:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 785,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9958:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9958:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 789,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "9970:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 783,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "9940:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9940:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 791,
												"nodeType": "EmitStatement",
												"src": "9935:42:4"
											}
										]
									},
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "9313:318:4",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9646:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9660:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "9652:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9677:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "9669:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9669:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9651:33:4"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9694:0:4"
									},
									"scope": 869,
									"src": "9637:348:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "10500:263:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 804,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "10519:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10536:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10528:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 805,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10528:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10528:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10519:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10540:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 803,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10511:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10511:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "10511:68:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 814,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "10598:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10617:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10609:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 815,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10609:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10609:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10598:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10621:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 813,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10590:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10590:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "10590:68:4"
											},
											{
												"expression": {
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 823,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 243,
																"src": "10671:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 826,
															"indexExpression": {
																"id": 824,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "10683:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10671:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 827,
														"indexExpression": {
															"id": 825,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "10690:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10671:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 828,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "10701:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10671:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 830,
												"nodeType": "ExpressionStatement",
												"src": "10671:36:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 832,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "10732:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 833,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "10739:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 834,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "10748:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 831,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "10723:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10723:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 836,
												"nodeType": "EmitStatement",
												"src": "10718:37:4"
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "9993:426:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10434:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10451:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "10443:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10443:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10466:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "10458:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10458:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10483:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "10475:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10475:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10442:48:4"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10500:0:4"
									},
									"scope": 869,
									"src": "10425:338:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "11010:171:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 847,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "11027:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 848,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "11036:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 846,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "11021:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11021:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "11021:22:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 852,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "11063:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 853,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "11072:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11072:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 862,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 843,
																	"src": "11125:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11133:38:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 855,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 243,
																			"src": "11086:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 857,
																		"indexExpression": {
																			"id": 856,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "11098:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11086:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 860,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 858,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "11107:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11107:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11086:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11121:3:4",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 943,
																"src": "11086:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11086:86:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 851,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "11054:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11054:119:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "11054:119:4"
											}
										]
									},
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "10771:172:4",
										"text": " @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n from the caller's allowance.\n See {_burn} and {_approve}."
									},
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nameLocation": "10958:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10976:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "10968:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10968:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10993:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "10985:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10967:33:4"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11010:0:4"
									},
									"scope": 869,
									"src": "10949:232:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 870,
							"src": "216:10968:4",
							"usedErrors": []
						}
					],
					"src": "37:11147:4"
				},
				"id": 4
			},
			"MGAS/SafeMath.sol": {
				"ast": {
					"absolutePath": "MGAS/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1065
						]
					},
					"id": 1066,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 871,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 872,
								"nodeType": "StructuredDocumentation",
								"src": "74:575:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 1065,
							"linearizedBaseContracts": [
								1065
							],
							"name": "SafeMath",
							"nameLocation": "659:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "981:114:5",
										"statements": [
											{
												"assignments": [
													883
												],
												"declarations": [
													{
														"constant": false,
														"id": 883,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1000:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 897,
														"src": "992:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 882,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "992:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 887,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 884,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "1004:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 885,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "1008:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1004:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "992:17:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 889,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "1028:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 890,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 875,
																"src": "1033:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1028:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1036:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 888,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1020:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1020:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "1020:46:5"
											},
											{
												"expression": {
													"id": 895,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 883,
													"src": "1086:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 881,
												"id": 896,
												"nodeType": "Return",
												"src": "1079:8:5"
											}
										]
									},
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "675:233:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "923:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "935:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "927:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "927:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "946:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "938:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "938:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "926:22:5"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "972:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:5"
									},
									"scope": 1065,
									"src": "914:181:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "1445:69:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 909,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "1467:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 910,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "1470:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1473:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 908,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															915,
															943
														],
														"referencedDeclaration": 943,
														"src": "1463:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1463:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 907,
												"id": 913,
												"nodeType": "Return",
												"src": "1456:50:5"
											}
										]
									},
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "1103:269:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1387:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1399:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "1391:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1391:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1410:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "1402:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1402:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1390:22:5"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "1436:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1436:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:9:5"
									},
									"scope": 1065,
									"src": "1378:136:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "1912:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 928,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 920,
																"src": "1931:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 929,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 918,
																"src": "1936:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1931:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 931,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "1939:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 927,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1923:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1923:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "1923:29:5"
											},
											{
												"assignments": [
													935
												],
												"declarations": [
													{
														"constant": false,
														"id": 935,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1971:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 942,
														"src": "1963:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 934,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1963:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 939,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 936,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "1975:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 937,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "1979:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1975:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1963:17:5"
											},
											{
												"expression": {
													"id": 940,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 935,
													"src": "2000:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 926,
												"id": 941,
												"nodeType": "Return",
												"src": "1993:8:5"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "1522:289:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1826:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1838:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "1830:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1849:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "1841:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1841:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1866:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "1852:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 921,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1852:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1829:50:5"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "1903:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1902:9:5"
									},
									"scope": 1065,
									"src": "1817:192:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "2335:404:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 953,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "2571:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 954,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2576:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2571:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 959,
												"nodeType": "IfStatement",
												"src": "2567:47:5",
												"trueBody": {
													"id": 958,
													"nodeType": "Block",
													"src": "2579:35:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2601:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 952,
															"id": 957,
															"nodeType": "Return",
															"src": "2594:8:5"
														}
													]
												}
											},
											{
												"assignments": [
													961
												],
												"declarations": [
													{
														"constant": false,
														"id": 961,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2634:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 977,
														"src": "2626:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 960,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2626:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 965,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 962,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "2638:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 963,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "2642:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2638:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2626:17:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 967,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 961,
																	"src": "2662:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 968,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "2666:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2662:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 970,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "2671:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2662:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2674:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 966,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2654:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2654:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "2654:56:5"
											},
											{
												"expression": {
													"id": 975,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 961,
													"src": "2730:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 952,
												"id": 976,
												"nodeType": "Return",
												"src": "2723:8:5"
											}
										]
									},
									"documentation": {
										"id": 944,
										"nodeType": "StructuredDocumentation",
										"src": "2017:245:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "2277:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2289:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "2281:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2281:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2300:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "2292:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2292:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2280:22:5"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "2326:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:9:5"
									},
									"scope": 1065,
									"src": "2268:471:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "3282:65:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 989,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "3304:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 990,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "3307:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3310:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 988,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															995,
															1023
														],
														"referencedDeclaration": 1023,
														"src": "3300:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3300:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 987,
												"id": 993,
												"nodeType": "Return",
												"src": "3293:46:5"
											}
										]
									},
									"documentation": {
										"id": 979,
										"nodeType": "StructuredDocumentation",
										"src": "2747:462:5",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3224:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3236:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "3228:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3228:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3247:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "3239:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3239:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3227:22:5"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "3273:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3273:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3272:9:5"
									},
									"scope": 1065,
									"src": "3215:132:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "3938:183:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1008,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "3957:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3961:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3957:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1011,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "3964:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1007,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3949:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3949:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1013,
												"nodeType": "ExpressionStatement",
												"src": "3949:28:5"
											},
											{
												"assignments": [
													1015
												],
												"declarations": [
													{
														"constant": false,
														"id": 1015,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "3996:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 1022,
														"src": "3988:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1014,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3988:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1019,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1016,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "4000:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1017,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "4004:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4000:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3988:17:5"
											},
											{
												"expression": {
													"id": 1020,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1015,
													"src": "4112:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1006,
												"id": 1021,
												"nodeType": "Return",
												"src": "4105:8:5"
											}
										]
									},
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "3355:482:5",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3852:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3864:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "3856:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3856:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3875:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "3867:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3867:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3892:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "3878:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1001,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3878:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3855:50:5"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "3929:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3929:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3928:9:5"
									},
									"scope": 1065,
									"src": "3843:278:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1039,
										"nodeType": "Block",
										"src": "4653:63:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1034,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "4675:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1035,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "4678:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4681:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 1033,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1040,
															1064
														],
														"referencedDeclaration": 1064,
														"src": "4671:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4671:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1032,
												"id": 1038,
												"nodeType": "Return",
												"src": "4664:44:5"
											}
										]
									},
									"documentation": {
										"id": 1024,
										"nodeType": "StructuredDocumentation",
										"src": "4129:451:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4595:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4607:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "4599:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4599:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4618:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "4610:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4610:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4598:22:5"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "4644:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4644:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4643:9:5"
									},
									"scope": 1065,
									"src": "4586:130:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "5296:71:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1053,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1045,
																"src": "5315:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5320:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5315:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1056,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "5323:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1052,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5307:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5307:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "5307:29:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1059,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "5354:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1060,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "5358:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5354:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1051,
												"id": 1062,
												"nodeType": "Return",
												"src": "5347:12:5"
											}
										]
									},
									"documentation": {
										"id": 1041,
										"nodeType": "StructuredDocumentation",
										"src": "4724:471:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "5210:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5222:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "5214:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5214:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5233:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "5225:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5225:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5250:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "5236:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1046,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5236:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5213:50:5"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "5287:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5287:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5286:9:5"
									},
									"scope": 1065,
									"src": "5201:166:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1066,
							"src": "651:4719:5",
							"usedErrors": []
						}
					],
					"src": "37:5335:5"
				},
				"id": 5
			}
		}
	}
}